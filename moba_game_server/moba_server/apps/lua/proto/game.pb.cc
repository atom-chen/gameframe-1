// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class GuestLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuestLoginReq>
      _instance;
} _GuestLoginReq_default_instance_;
class UnameLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnameLoginReq>
      _instance;
} _UnameLoginReq_default_instance_;
class UserCenterInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserCenterInfo>
      _instance;
} _UserCenterInfo_default_instance_;
class GuestLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuestLoginRes>
      _instance;
} _GuestLoginRes_default_instance_;
class ReloginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Relogin>
      _instance;
} _Relogin_default_instance_;
class UserLostConnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserLostConn>
      _instance;
} _UserLostConn_default_instance_;
class UnameLoginResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnameLoginRes>
      _instance;
} _UnameLoginRes_default_instance_;
class EditProfileReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EditProfileReq>
      _instance;
} _EditProfileReq_default_instance_;
class EditProfileResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EditProfileRes>
      _instance;
} _EditProfileRes_default_instance_;
class AccountUpgradeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountUpgradeReq>
      _instance;
} _AccountUpgradeReq_default_instance_;
class AccountUpgradeResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountUpgradeRes>
      _instance;
} _AccountUpgradeRes_default_instance_;
class LoginOutReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginOutReq>
      _instance;
} _LoginOutReq_default_instance_;
class LoginOutResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginOutRes>
      _instance;
} _LoginOutRes_default_instance_;
class UserGameInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserGameInfo>
      _instance;
} _UserGameInfo_default_instance_;
class GetUgameInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUgameInfoReq>
      _instance;
} _GetUgameInfoReq_default_instance_;
class GetUgameInfoResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetUgameInfoRes>
      _instance;
} _GetUgameInfoRes_default_instance_;
class RecvLoginBonuesReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvLoginBonuesReq>
      _instance;
} _RecvLoginBonuesReq_default_instance_;
class RecvLoginBonuesResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecvLoginBonuesRes>
      _instance;
} _RecvLoginBonuesRes_default_instance_;
class WorldChipRankInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorldChipRankInfo>
      _instance;
} _WorldChipRankInfo_default_instance_;
class GetWorldRankUchipResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetWorldRankUchipRes>
      _instance;
} _GetWorldRankUchipRes_default_instance_;
class GetSysMsgReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSysMsgReq>
      _instance;
} _GetSysMsgReq_default_instance_;
class GetSysMsgResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSysMsgRes>
      _instance;
} _GetSysMsgRes_default_instance_;
class LoginLogicResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginLogicRes>
      _instance;
} _LoginLogicRes_default_instance_;
class EnterZoneReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterZoneReq>
      _instance;
} _EnterZoneReq_default_instance_;
class EnterZoneResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterZoneRes>
      _instance;
} _EnterZoneRes_default_instance_;
class EnterMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterMatch>
      _instance;
} _EnterMatch_default_instance_;
class UserArrivedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserArrived>
      _instance;
} _UserArrived_default_instance_;
class ExitMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitMatchReq>
      _instance;
} _ExitMatchReq_default_instance_;
class ExitMatchResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitMatchRes>
      _instance;
} _ExitMatchRes_default_instance_;
class UserExitMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserExitMatch>
      _instance;
} _UserExitMatch_default_instance_;
class UserRegistReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegistReq>
      _instance;
} _UserRegistReq_default_instance_;
class UserRegistResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRegistRes>
      _instance;
} _UserRegistRes_default_instance_;
class CreateRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomReq>
      _instance;
} _CreateRoomReq_default_instance_;
class CreateRoomResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomRes>
      _instance;
} _CreateRoomRes_default_instance_;
class JoinRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinRoomReq>
      _instance;
} _JoinRoomReq_default_instance_;
class JoinRoomResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinRoomRes>
      _instance;
} _JoinRoomRes_default_instance_;
class ExitRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitRoomReq>
      _instance;
} _ExitRoomReq_default_instance_;
class ExitRoomResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitRoomRes>
      _instance;
} _ExitRoomRes_default_instance_;
class DessolveReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DessolveReq>
      _instance;
} _DessolveReq_default_instance_;
class DessolveResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DessolveRes>
      _instance;
} _DessolveRes_default_instance_;
class GetCreateStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCreateStatusReq>
      _instance;
} _GetCreateStatusReq_default_instance_;
class GetCreateStatusResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCreateStatusRes>
      _instance;
} _GetCreateStatusRes_default_instance_;
class BackRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackRoomReq>
      _instance;
} _BackRoomReq_default_instance_;
class BackRoomResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BackRoomRes>
      _instance;
} _BackRoomRes_default_instance_;
class UserOffLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserOffLine>
      _instance;
} _UserOffLine_default_instance_;
class UserReconnectedReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserReconnectedReq>
      _instance;
} _UserReconnectedReq_default_instance_;
class UserReconnectedResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserReconnectedRes>
      _instance;
} _UserReconnectedRes_default_instance_;
class HeartBeatReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartBeatReq>
      _instance;
} _HeartBeatReq_default_instance_;
class HeartBeatResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartBeatRes>
      _instance;
} _HeartBeatRes_default_instance_;
class UserReadyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserReadyReq>
      _instance;
} _UserReadyReq_default_instance_;
class UserReadyResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserReadyRes>
      _instance;
} _UserReadyRes_default_instance_;
class GameStartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameStart>
      _instance;
} _GameStart_default_instance_;
class UdpTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UdpTest>
      _instance;
} _UdpTest_default_instance_;
class LoginLogicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginLogicReq>
      _instance;
} _LoginLogicReq_default_instance_;
class OptionEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionEvent>
      _instance;
} _OptionEvent_default_instance_;
class FrameOptsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameOpts>
      _instance;
} _FrameOpts_default_instance_;
class LogicFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogicFrame>
      _instance;
} _LogicFrame_default_instance_;
class NextFrameOptsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NextFrameOpts>
      _instance;
} _NextFrameOpts_default_instance_;
class CheckLinkGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckLinkGameReq>
      _instance;
} _CheckLinkGameReq_default_instance_;
class CheckLinkGameResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckLinkGameRes>
      _instance;
} _CheckLinkGameRes_default_instance_;
class RoomInfoResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomInfoRes>
      _instance;
} _RoomInfoRes_default_instance_;
class RoomIdResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomIdRes>
      _instance;
} _RoomIdRes_default_instance_;
class PlayCountResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayCountRes>
      _instance;
} _PlayCountRes_default_instance_;
class UserArrivedInfosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserArrivedInfos>
      _instance;
} _UserArrivedInfos_default_instance_;
class UserStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserState>
      _instance;
} _UserState_default_instance_;
class AllUserStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllUserState>
      _instance;
} _AllUserState_default_instance_;
class GameResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameResult>
      _instance;
} _GameResult_default_instance_;
class GameTotalResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameTotalResult>
      _instance;
} _GameTotalResult_default_instance_;
class ClickTouZiNumReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClickTouZiNumReq>
      _instance;
} _ClickTouZiNumReq_default_instance_;
class TouZiNumResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TouZiNumRes>
      _instance;
} _TouZiNumRes_default_instance_;
class ClickTouZiBombResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClickTouZiBombRes>
      _instance;
} _ClickTouZiBombRes_default_instance_;
namespace protobuf_game_2eproto {
void InitDefaultsGuestLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GuestLoginReq_default_instance_;
    new (ptr) ::GuestLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuestLoginReq::InitAsDefaultInstance();
}

void InitDefaultsGuestLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuestLoginReqImpl);
}

void InitDefaultsUnameLoginReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UnameLoginReq_default_instance_;
    new (ptr) ::UnameLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnameLoginReq::InitAsDefaultInstance();
}

void InitDefaultsUnameLoginReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnameLoginReqImpl);
}

void InitDefaultsUserCenterInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserCenterInfo_default_instance_;
    new (ptr) ::UserCenterInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserCenterInfo::InitAsDefaultInstance();
}

void InitDefaultsUserCenterInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserCenterInfoImpl);
}

void InitDefaultsGuestLoginResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsUserCenterInfo();
  {
    void* ptr = &::_GuestLoginRes_default_instance_;
    new (ptr) ::GuestLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GuestLoginRes::InitAsDefaultInstance();
}

void InitDefaultsGuestLoginRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGuestLoginResImpl);
}

void InitDefaultsReloginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Relogin_default_instance_;
    new (ptr) ::Relogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Relogin::InitAsDefaultInstance();
}

void InitDefaultsRelogin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReloginImpl);
}

void InitDefaultsUserLostConnImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserLostConn_default_instance_;
    new (ptr) ::UserLostConn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserLostConn::InitAsDefaultInstance();
}

void InitDefaultsUserLostConn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserLostConnImpl);
}

void InitDefaultsUnameLoginResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsUserCenterInfo();
  {
    void* ptr = &::_UnameLoginRes_default_instance_;
    new (ptr) ::UnameLoginRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnameLoginRes::InitAsDefaultInstance();
}

void InitDefaultsUnameLoginRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnameLoginResImpl);
}

void InitDefaultsEditProfileReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EditProfileReq_default_instance_;
    new (ptr) ::EditProfileReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EditProfileReq::InitAsDefaultInstance();
}

void InitDefaultsEditProfileReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEditProfileReqImpl);
}

void InitDefaultsEditProfileResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EditProfileRes_default_instance_;
    new (ptr) ::EditProfileRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EditProfileRes::InitAsDefaultInstance();
}

void InitDefaultsEditProfileRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEditProfileResImpl);
}

void InitDefaultsAccountUpgradeReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AccountUpgradeReq_default_instance_;
    new (ptr) ::AccountUpgradeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountUpgradeReq::InitAsDefaultInstance();
}

void InitDefaultsAccountUpgradeReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountUpgradeReqImpl);
}

void InitDefaultsAccountUpgradeResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_AccountUpgradeRes_default_instance_;
    new (ptr) ::AccountUpgradeRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountUpgradeRes::InitAsDefaultInstance();
}

void InitDefaultsAccountUpgradeRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountUpgradeResImpl);
}

void InitDefaultsLoginOutReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginOutReq_default_instance_;
    new (ptr) ::LoginOutReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginOutReq::InitAsDefaultInstance();
}

void InitDefaultsLoginOutReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginOutReqImpl);
}

void InitDefaultsLoginOutResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginOutRes_default_instance_;
    new (ptr) ::LoginOutRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginOutRes::InitAsDefaultInstance();
}

void InitDefaultsLoginOutRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginOutResImpl);
}

void InitDefaultsUserGameInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserGameInfo_default_instance_;
    new (ptr) ::UserGameInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserGameInfo::InitAsDefaultInstance();
}

void InitDefaultsUserGameInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserGameInfoImpl);
}

void InitDefaultsGetUgameInfoReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetUgameInfoReq_default_instance_;
    new (ptr) ::GetUgameInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetUgameInfoReq::InitAsDefaultInstance();
}

void InitDefaultsGetUgameInfoReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUgameInfoReqImpl);
}

void InitDefaultsGetUgameInfoResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsUserGameInfo();
  {
    void* ptr = &::_GetUgameInfoRes_default_instance_;
    new (ptr) ::GetUgameInfoRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetUgameInfoRes::InitAsDefaultInstance();
}

void InitDefaultsGetUgameInfoRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetUgameInfoResImpl);
}

void InitDefaultsRecvLoginBonuesReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RecvLoginBonuesReq_default_instance_;
    new (ptr) ::RecvLoginBonuesReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RecvLoginBonuesReq::InitAsDefaultInstance();
}

void InitDefaultsRecvLoginBonuesReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecvLoginBonuesReqImpl);
}

void InitDefaultsRecvLoginBonuesResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RecvLoginBonuesRes_default_instance_;
    new (ptr) ::RecvLoginBonuesRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RecvLoginBonuesRes::InitAsDefaultInstance();
}

void InitDefaultsRecvLoginBonuesRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecvLoginBonuesResImpl);
}

void InitDefaultsWorldChipRankInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_WorldChipRankInfo_default_instance_;
    new (ptr) ::WorldChipRankInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WorldChipRankInfo::InitAsDefaultInstance();
}

void InitDefaultsWorldChipRankInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWorldChipRankInfoImpl);
}

void InitDefaultsGetWorldRankUchipResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsWorldChipRankInfo();
  {
    void* ptr = &::_GetWorldRankUchipRes_default_instance_;
    new (ptr) ::GetWorldRankUchipRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetWorldRankUchipRes::InitAsDefaultInstance();
}

void InitDefaultsGetWorldRankUchipRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetWorldRankUchipResImpl);
}

void InitDefaultsGetSysMsgReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetSysMsgReq_default_instance_;
    new (ptr) ::GetSysMsgReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSysMsgReq::InitAsDefaultInstance();
}

void InitDefaultsGetSysMsgReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetSysMsgReqImpl);
}

void InitDefaultsGetSysMsgResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetSysMsgRes_default_instance_;
    new (ptr) ::GetSysMsgRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetSysMsgRes::InitAsDefaultInstance();
}

void InitDefaultsGetSysMsgRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetSysMsgResImpl);
}

void InitDefaultsLoginLogicResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginLogicRes_default_instance_;
    new (ptr) ::LoginLogicRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginLogicRes::InitAsDefaultInstance();
}

void InitDefaultsLoginLogicRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginLogicResImpl);
}

void InitDefaultsEnterZoneReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EnterZoneReq_default_instance_;
    new (ptr) ::EnterZoneReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnterZoneReq::InitAsDefaultInstance();
}

void InitDefaultsEnterZoneReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterZoneReqImpl);
}

void InitDefaultsEnterZoneResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EnterZoneRes_default_instance_;
    new (ptr) ::EnterZoneRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnterZoneRes::InitAsDefaultInstance();
}

void InitDefaultsEnterZoneRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterZoneResImpl);
}

void InitDefaultsEnterMatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EnterMatch_default_instance_;
    new (ptr) ::EnterMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnterMatch::InitAsDefaultInstance();
}

void InitDefaultsEnterMatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterMatchImpl);
}

void InitDefaultsUserArrivedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserArrived_default_instance_;
    new (ptr) ::UserArrived();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserArrived::InitAsDefaultInstance();
}

void InitDefaultsUserArrived() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserArrivedImpl);
}

void InitDefaultsExitMatchReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ExitMatchReq_default_instance_;
    new (ptr) ::ExitMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExitMatchReq::InitAsDefaultInstance();
}

void InitDefaultsExitMatchReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExitMatchReqImpl);
}

void InitDefaultsExitMatchResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ExitMatchRes_default_instance_;
    new (ptr) ::ExitMatchRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExitMatchRes::InitAsDefaultInstance();
}

void InitDefaultsExitMatchRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExitMatchResImpl);
}

void InitDefaultsUserExitMatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserExitMatch_default_instance_;
    new (ptr) ::UserExitMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserExitMatch::InitAsDefaultInstance();
}

void InitDefaultsUserExitMatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserExitMatchImpl);
}

void InitDefaultsUserRegistReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserRegistReq_default_instance_;
    new (ptr) ::UserRegistReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserRegistReq::InitAsDefaultInstance();
}

void InitDefaultsUserRegistReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserRegistReqImpl);
}

void InitDefaultsUserRegistResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserRegistRes_default_instance_;
    new (ptr) ::UserRegistRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserRegistRes::InitAsDefaultInstance();
}

void InitDefaultsUserRegistRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserRegistResImpl);
}

void InitDefaultsCreateRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CreateRoomReq_default_instance_;
    new (ptr) ::CreateRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateRoomReq::InitAsDefaultInstance();
}

void InitDefaultsCreateRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoomReqImpl);
}

void InitDefaultsCreateRoomResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CreateRoomRes_default_instance_;
    new (ptr) ::CreateRoomRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateRoomRes::InitAsDefaultInstance();
}

void InitDefaultsCreateRoomRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoomResImpl);
}

void InitDefaultsJoinRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_JoinRoomReq_default_instance_;
    new (ptr) ::JoinRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JoinRoomReq::InitAsDefaultInstance();
}

void InitDefaultsJoinRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJoinRoomReqImpl);
}

void InitDefaultsJoinRoomResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_JoinRoomRes_default_instance_;
    new (ptr) ::JoinRoomRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JoinRoomRes::InitAsDefaultInstance();
}

void InitDefaultsJoinRoomRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJoinRoomResImpl);
}

void InitDefaultsExitRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ExitRoomReq_default_instance_;
    new (ptr) ::ExitRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExitRoomReq::InitAsDefaultInstance();
}

void InitDefaultsExitRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExitRoomReqImpl);
}

void InitDefaultsExitRoomResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsUserArrived();
  {
    void* ptr = &::_ExitRoomRes_default_instance_;
    new (ptr) ::ExitRoomRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ExitRoomRes::InitAsDefaultInstance();
}

void InitDefaultsExitRoomRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExitRoomResImpl);
}

void InitDefaultsDessolveReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DessolveReq_default_instance_;
    new (ptr) ::DessolveReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DessolveReq::InitAsDefaultInstance();
}

void InitDefaultsDessolveReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDessolveReqImpl);
}

void InitDefaultsDessolveResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DessolveRes_default_instance_;
    new (ptr) ::DessolveRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DessolveRes::InitAsDefaultInstance();
}

void InitDefaultsDessolveRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDessolveResImpl);
}

void InitDefaultsGetCreateStatusReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetCreateStatusReq_default_instance_;
    new (ptr) ::GetCreateStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetCreateStatusReq::InitAsDefaultInstance();
}

void InitDefaultsGetCreateStatusReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetCreateStatusReqImpl);
}

void InitDefaultsGetCreateStatusResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GetCreateStatusRes_default_instance_;
    new (ptr) ::GetCreateStatusRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetCreateStatusRes::InitAsDefaultInstance();
}

void InitDefaultsGetCreateStatusRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetCreateStatusResImpl);
}

void InitDefaultsBackRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_BackRoomReq_default_instance_;
    new (ptr) ::BackRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BackRoomReq::InitAsDefaultInstance();
}

void InitDefaultsBackRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBackRoomReqImpl);
}

void InitDefaultsBackRoomResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_BackRoomRes_default_instance_;
    new (ptr) ::BackRoomRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BackRoomRes::InitAsDefaultInstance();
}

void InitDefaultsBackRoomRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBackRoomResImpl);
}

void InitDefaultsUserOffLineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsUserArrived();
  {
    void* ptr = &::_UserOffLine_default_instance_;
    new (ptr) ::UserOffLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserOffLine::InitAsDefaultInstance();
}

void InitDefaultsUserOffLine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserOffLineImpl);
}

void InitDefaultsUserReconnectedReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserReconnectedReq_default_instance_;
    new (ptr) ::UserReconnectedReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserReconnectedReq::InitAsDefaultInstance();
}

void InitDefaultsUserReconnectedReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserReconnectedReqImpl);
}

void InitDefaultsUserReconnectedResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserReconnectedRes_default_instance_;
    new (ptr) ::UserReconnectedRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserReconnectedRes::InitAsDefaultInstance();
}

void InitDefaultsUserReconnectedRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserReconnectedResImpl);
}

void InitDefaultsHeartBeatReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HeartBeatReq_default_instance_;
    new (ptr) ::HeartBeatReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HeartBeatReq::InitAsDefaultInstance();
}

void InitDefaultsHeartBeatReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartBeatReqImpl);
}

void InitDefaultsHeartBeatResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HeartBeatRes_default_instance_;
    new (ptr) ::HeartBeatRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HeartBeatRes::InitAsDefaultInstance();
}

void InitDefaultsHeartBeatRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeartBeatResImpl);
}

void InitDefaultsUserReadyReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserReadyReq_default_instance_;
    new (ptr) ::UserReadyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserReadyReq::InitAsDefaultInstance();
}

void InitDefaultsUserReadyReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserReadyReqImpl);
}

void InitDefaultsUserReadyResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserReadyRes_default_instance_;
    new (ptr) ::UserReadyRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserReadyRes::InitAsDefaultInstance();
}

void InitDefaultsUserReadyRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserReadyResImpl);
}

void InitDefaultsGameStartImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GameStart_default_instance_;
    new (ptr) ::GameStart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameStart::InitAsDefaultInstance();
}

void InitDefaultsGameStart() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameStartImpl);
}

void InitDefaultsUdpTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UdpTest_default_instance_;
    new (ptr) ::UdpTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UdpTest::InitAsDefaultInstance();
}

void InitDefaultsUdpTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUdpTestImpl);
}

void InitDefaultsLoginLogicReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_LoginLogicReq_default_instance_;
    new (ptr) ::LoginLogicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginLogicReq::InitAsDefaultInstance();
}

void InitDefaultsLoginLogicReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginLogicReqImpl);
}

void InitDefaultsOptionEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_OptionEvent_default_instance_;
    new (ptr) ::OptionEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OptionEvent::InitAsDefaultInstance();
}

void InitDefaultsOptionEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOptionEventImpl);
}

void InitDefaultsFrameOptsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsOptionEvent();
  {
    void* ptr = &::_FrameOpts_default_instance_;
    new (ptr) ::FrameOpts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FrameOpts::InitAsDefaultInstance();
}

void InitDefaultsFrameOpts() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFrameOptsImpl);
}

void InitDefaultsLogicFrameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsFrameOpts();
  {
    void* ptr = &::_LogicFrame_default_instance_;
    new (ptr) ::LogicFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LogicFrame::InitAsDefaultInstance();
}

void InitDefaultsLogicFrame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogicFrameImpl);
}

void InitDefaultsNextFrameOptsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsOptionEvent();
  {
    void* ptr = &::_NextFrameOpts_default_instance_;
    new (ptr) ::NextFrameOpts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NextFrameOpts::InitAsDefaultInstance();
}

void InitDefaultsNextFrameOpts() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNextFrameOptsImpl);
}

void InitDefaultsCheckLinkGameReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CheckLinkGameReq_default_instance_;
    new (ptr) ::CheckLinkGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CheckLinkGameReq::InitAsDefaultInstance();
}

void InitDefaultsCheckLinkGameReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckLinkGameReqImpl);
}

void InitDefaultsCheckLinkGameResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CheckLinkGameRes_default_instance_;
    new (ptr) ::CheckLinkGameRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CheckLinkGameRes::InitAsDefaultInstance();
}

void InitDefaultsCheckLinkGameRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckLinkGameResImpl);
}

void InitDefaultsRoomInfoResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RoomInfoRes_default_instance_;
    new (ptr) ::RoomInfoRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoomInfoRes::InitAsDefaultInstance();
}

void InitDefaultsRoomInfoRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoomInfoResImpl);
}

void InitDefaultsRoomIdResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RoomIdRes_default_instance_;
    new (ptr) ::RoomIdRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoomIdRes::InitAsDefaultInstance();
}

void InitDefaultsRoomIdRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoomIdResImpl);
}

void InitDefaultsPlayCountResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayCountRes_default_instance_;
    new (ptr) ::PlayCountRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayCountRes::InitAsDefaultInstance();
}

void InitDefaultsPlayCountRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayCountResImpl);
}

void InitDefaultsUserArrivedInfosImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsUserArrived();
  {
    void* ptr = &::_UserArrivedInfos_default_instance_;
    new (ptr) ::UserArrivedInfos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserArrivedInfos::InitAsDefaultInstance();
}

void InitDefaultsUserArrivedInfos() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserArrivedInfosImpl);
}

void InitDefaultsUserStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_UserState_default_instance_;
    new (ptr) ::UserState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UserState::InitAsDefaultInstance();
}

void InitDefaultsUserState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserStateImpl);
}

void InitDefaultsAllUserStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_game_2eproto::InitDefaultsUserState();
  {
    void* ptr = &::_AllUserState_default_instance_;
    new (ptr) ::AllUserState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AllUserState::InitAsDefaultInstance();
}

void InitDefaultsAllUserState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllUserStateImpl);
}

void InitDefaultsGameResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GameResult_default_instance_;
    new (ptr) ::GameResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameResult::InitAsDefaultInstance();
}

void InitDefaultsGameResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameResultImpl);
}

void InitDefaultsGameTotalResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GameTotalResult_default_instance_;
    new (ptr) ::GameTotalResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameTotalResult::InitAsDefaultInstance();
}

void InitDefaultsGameTotalResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameTotalResultImpl);
}

void InitDefaultsClickTouZiNumReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClickTouZiNumReq_default_instance_;
    new (ptr) ::ClickTouZiNumReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClickTouZiNumReq::InitAsDefaultInstance();
}

void InitDefaultsClickTouZiNumReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClickTouZiNumReqImpl);
}

void InitDefaultsTouZiNumResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TouZiNumRes_default_instance_;
    new (ptr) ::TouZiNumRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TouZiNumRes::InitAsDefaultInstance();
}

void InitDefaultsTouZiNumRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTouZiNumResImpl);
}

void InitDefaultsClickTouZiBombResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClickTouZiBombRes_default_instance_;
    new (ptr) ::ClickTouZiBombRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClickTouZiBombRes::InitAsDefaultInstance();
}

void InitDefaultsClickTouZiBombRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClickTouZiBombResImpl);
}

::google::protobuf::Metadata file_level_metadata[71];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginReq, guestkey_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginReq, uname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginReq, upwd_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, unick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, uface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, usex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, uvip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, brandid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, numberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserCenterInfo, areaid_),
  0,
  4,
  5,
  6,
  7,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GuestLoginRes, uinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Relogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Relogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLostConn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserLostConn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnameLoginRes, uinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileReq, unick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileReq, uface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileReq, usex_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EditProfileRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, uname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeReq, upwdmd5_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountUpgradeRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginOutReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginOutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginOutRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginOutRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginOutRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, uchip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, uexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, uvip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, uchip2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, uchip3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, udata1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, udata2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, udata3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, bonuesstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, bonues_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserGameInfo, days_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUgameInfoReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUgameInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUgameInfoRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUgameInfoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUgameInfoRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetUgameInfoRes, uinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvLoginBonuesReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvLoginBonuesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvLoginBonuesRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvLoginBonuesRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RecvLoginBonuesRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldChipRankInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldChipRankInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldChipRankInfo, unick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldChipRankInfo, uface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldChipRankInfo, usex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldChipRankInfo, uvip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WorldChipRankInfo, uchip_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetWorldRankUchipRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetWorldRankUchipRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetWorldRankUchipRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetWorldRankUchipRes, rankinfo_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgReq, versionnum_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgRes, versionnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetSysMsgRes, systemmsgs_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginLogicRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginLogicRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginLogicRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterZoneReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterZoneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterZoneReq, zid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterZoneRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterZoneRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterZoneRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterMatch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterMatch, zid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterMatch, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterMatch, seatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterMatch, side_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, unick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, uface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, usex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, seatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, ishost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, isoffline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, brandid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, numberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, areaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrived, userstate_),
  0,
  5,
  6,
  7,
  8,
  1,
  9,
  10,
  2,
  3,
  4,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitMatchReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitMatchRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitMatchRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitMatchRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserExitMatch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserExitMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserExitMatch, seatid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserRegistReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserRegistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserRegistReq, uname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserRegistReq, upwdmd5_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserRegistRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserRegistRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserRegistRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, roominfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomReq, roomid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitRoomRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitRoomRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitRoomRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ExitRoomRes, userinfo_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DessolveReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DessolveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DessolveRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DessolveRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DessolveRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetCreateStatusReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetCreateStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetCreateStatusRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetCreateStatusRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetCreateStatusRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackRoomRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackRoomRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BackRoomRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserOffLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserOffLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserOffLine, userinfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReconnectedReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReconnectedReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReconnectedRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReconnectedRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReconnectedRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HeartBeatReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HeartBeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HeartBeatRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HeartBeatRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HeartBeatRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyReq, readystate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyRes, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyRes, seatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyRes, brandid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyRes, numberid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserReadyRes, userstate_),
  2,
  3,
  0,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameStart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameStart, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UdpTest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UdpTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UdpTest, content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginLogicReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginLogicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OptionEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OptionEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OptionEvent, seatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OptionEvent, opttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OptionEvent, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OptionEvent, y_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameOpts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameOpts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameOpts, frameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameOpts, opts_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicFrame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicFrame, frameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LogicFrame, unsyncframes_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NextFrameOpts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NextFrameOpts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NextFrameOpts, frameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NextFrameOpts, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NextFrameOpts, seatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NextFrameOpts, opts_),
  1,
  0,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckLinkGameReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckLinkGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckLinkGameRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckLinkGameRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CheckLinkGameRes, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfoRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfoRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfoRes, roominfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomIdRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomIdRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomIdRes, roomid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayCountRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayCountRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayCountRes, playcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayCountRes, totalplaycount_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrivedInfos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrivedInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserArrivedInfos, userinfo_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserState, seatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UserState, userstate_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AllUserState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AllUserState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AllUserState, userstate_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameResult, score_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameTotalResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameTotalResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameTotalResult, score_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClickTouZiNumReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClickTouZiNumReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClickTouZiNumReq, seatid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClickTouZiNumReq, touzinum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TouZiNumRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TouZiNumRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TouZiNumRes, touzinums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TouZiNumRes, bombnums_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClickTouZiBombRes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClickTouZiBombRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClickTouZiBombRes, seatid_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::GuestLoginReq)},
  { 7, 14, sizeof(::UnameLoginReq)},
  { 16, 29, sizeof(::UserCenterInfo)},
  { 37, 44, sizeof(::GuestLoginRes)},
  { 46, 51, sizeof(::Relogin)},
  { 51, 56, sizeof(::UserLostConn)},
  { 56, 63, sizeof(::UnameLoginRes)},
  { 65, 73, sizeof(::EditProfileReq)},
  { 76, 82, sizeof(::EditProfileRes)},
  { 83, 90, sizeof(::AccountUpgradeReq)},
  { 92, 98, sizeof(::AccountUpgradeRes)},
  { 99, 104, sizeof(::LoginOutReq)},
  { 104, 110, sizeof(::LoginOutRes)},
  { 111, 127, sizeof(::UserGameInfo)},
  { 138, 143, sizeof(::GetUgameInfoReq)},
  { 143, 150, sizeof(::GetUgameInfoRes)},
  { 152, 157, sizeof(::RecvLoginBonuesReq)},
  { 157, 163, sizeof(::RecvLoginBonuesRes)},
  { 164, 174, sizeof(::WorldChipRankInfo)},
  { 179, 186, sizeof(::GetWorldRankUchipRes)},
  { 188, 194, sizeof(::GetSysMsgReq)},
  { 195, 203, sizeof(::GetSysMsgRes)},
  { 206, 212, sizeof(::LoginLogicRes)},
  { 213, 219, sizeof(::EnterZoneReq)},
  { 220, 226, sizeof(::EnterZoneRes)},
  { 227, 236, sizeof(::EnterMatch)},
  { 240, 257, sizeof(::UserArrived)},
  { 269, 274, sizeof(::ExitMatchReq)},
  { 274, 280, sizeof(::ExitMatchRes)},
  { 281, 287, sizeof(::UserExitMatch)},
  { 288, 295, sizeof(::UserRegistReq)},
  { 297, 303, sizeof(::UserRegistRes)},
  { 304, 310, sizeof(::CreateRoomReq)},
  { 311, 317, sizeof(::CreateRoomRes)},
  { 318, 324, sizeof(::JoinRoomReq)},
  { 325, 331, sizeof(::JoinRoomRes)},
  { 332, 337, sizeof(::ExitRoomReq)},
  { 337, 344, sizeof(::ExitRoomRes)},
  { 346, 351, sizeof(::DessolveReq)},
  { 351, 357, sizeof(::DessolveRes)},
  { 358, 363, sizeof(::GetCreateStatusReq)},
  { 363, 369, sizeof(::GetCreateStatusRes)},
  { 370, 375, sizeof(::BackRoomReq)},
  { 375, 381, sizeof(::BackRoomRes)},
  { 382, 388, sizeof(::UserOffLine)},
  { 389, 394, sizeof(::UserReconnectedReq)},
  { 394, 400, sizeof(::UserReconnectedRes)},
  { 401, 406, sizeof(::HeartBeatReq)},
  { 406, 412, sizeof(::HeartBeatRes)},
  { 413, 419, sizeof(::UserReadyReq)},
  { 420, 430, sizeof(::UserReadyRes)},
  { 435, 441, sizeof(::GameStart)},
  { 442, 448, sizeof(::UdpTest)},
  { 449, 454, sizeof(::LoginLogicReq)},
  { 454, 463, sizeof(::OptionEvent)},
  { 467, 474, sizeof(::FrameOpts)},
  { 476, 483, sizeof(::LogicFrame)},
  { 485, 494, sizeof(::NextFrameOpts)},
  { 498, 503, sizeof(::CheckLinkGameReq)},
  { 503, 509, sizeof(::CheckLinkGameRes)},
  { 510, 516, sizeof(::RoomInfoRes)},
  { 517, 523, sizeof(::RoomIdRes)},
  { 524, 531, sizeof(::PlayCountRes)},
  { 533, 539, sizeof(::UserArrivedInfos)},
  { 540, 547, sizeof(::UserState)},
  { 549, 555, sizeof(::AllUserState)},
  { 556, 562, sizeof(::GameResult)},
  { 563, 569, sizeof(::GameTotalResult)},
  { 570, 577, sizeof(::ClickTouZiNumReq)},
  { 579, 586, sizeof(::TouZiNumRes)},
  { 588, 594, sizeof(::ClickTouZiBombRes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuestLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnameLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserCenterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GuestLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Relogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserLostConn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnameLoginRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EditProfileReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EditProfileRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountUpgradeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AccountUpgradeRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginOutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginOutRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserGameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetUgameInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetUgameInfoRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RecvLoginBonuesReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RecvLoginBonuesRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WorldChipRankInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetWorldRankUchipRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetSysMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetSysMsgRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginLogicRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnterZoneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnterZoneRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnterMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserArrived_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExitMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExitMatchRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserExitMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserRegistReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserRegistRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateRoomRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_JoinRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_JoinRoomRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExitRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ExitRoomRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DessolveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DessolveRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetCreateStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetCreateStatusRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BackRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BackRoomRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserOffLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserReconnectedReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserReconnectedRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HeartBeatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HeartBeatRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserReadyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserReadyRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameStart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UdpTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LoginLogicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OptionEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FrameOpts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LogicFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NextFrameOpts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CheckLinkGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CheckLinkGameRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoomInfoRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoomIdRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayCountRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserArrivedInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UserState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AllUserState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameTotalResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClickTouZiNumReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TouZiNumRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClickTouZiBombRes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "game.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 71);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ngame.proto\"!\n\rGuestLoginReq\022\020\n\010guestke"
      "y\030\001 \002(\t\",\n\rUnameLoginReq\022\r\n\005uname\030\001 \002(\t\022"
      "\014\n\004upwd\030\002 \002(\t\"\212\001\n\016UserCenterInfo\022\r\n\005unic"
      "k\030\001 \002(\t\022\r\n\005uface\030\002 \002(\021\022\014\n\004usex\030\003 \002(\021\022\014\n\004"
      "uvip\030\004 \002(\021\022\013\n\003uid\030\005 \002(\021\022\017\n\007brandid\030\006 \001(\t"
      "\022\020\n\010numberid\030\007 \001(\t\022\016\n\006areaid\030\010 \001(\t\"\?\n\rGu"
      "estLoginRes\022\016\n\006status\030\001 \002(\021\022\036\n\005uinfo\030\002 \001"
      "(\0132\017.UserCenterInfo\"\t\n\007Relogin\"\016\n\014UserLo"
      "stConn\"\?\n\rUnameLoginRes\022\016\n\006status\030\001 \002(\021\022"
      "\036\n\005uinfo\030\002 \001(\0132\017.UserCenterInfo\"<\n\016EditP"
      "rofileReq\022\r\n\005unick\030\001 \002(\t\022\r\n\005uface\030\002 \002(\021\022"
      "\014\n\004usex\030\003 \002(\021\" \n\016EditProfileRes\022\016\n\006statu"
      "s\030\001 \002(\021\"3\n\021AccountUpgradeReq\022\r\n\005uname\030\001 "
      "\002(\t\022\017\n\007upwdMd5\030\002 \002(\t\"#\n\021AccountUpgradeRe"
      "s\022\016\n\006status\030\001 \002(\021\"\r\n\013LoginOutReq\"\035\n\013Logi"
      "nOutRes\022\016\n\006status\030\001 \002(\021\"\275\001\n\014UserGameInfo"
      "\022\r\n\005uchip\030\001 \002(\021\022\014\n\004uexp\030\002 \002(\021\022\014\n\004uvip\030\003 "
      "\002(\021\022\016\n\006uchip2\030\004 \002(\021\022\016\n\006uchip3\030\005 \002(\021\022\016\n\006u"
      "data1\030\006 \002(\021\022\016\n\006udata2\030\007 \002(\021\022\016\n\006udata3\030\010 "
      "\002(\021\022\024\n\014bonuesstatus\030\t \002(\021\022\016\n\006bonues\030\n \002("
      "\021\022\014\n\004days\030\013 \002(\021\"\021\n\017GetUgameInfoReq\"\?\n\017Ge"
      "tUgameInfoRes\022\016\n\006status\030\001 \002(\021\022\034\n\005uinfo\030\002"
      " \001(\0132\r.UserGameInfo\"\024\n\022RecvLoginBonuesRe"
      "q\"$\n\022RecvLoginBonuesRes\022\016\n\006status\030\001 \002(\021\""
      "\\\n\021WorldChipRankInfo\022\r\n\005unick\030\001 \002(\t\022\r\n\005u"
      "face\030\002 \002(\021\022\014\n\004usex\030\003 \002(\021\022\014\n\004uvip\030\004 \002(\021\022\r"
      "\n\005uchip\030\005 \002(\021\"L\n\024GetWorldRankUchipRes\022\016\n"
      "\006status\030\001 \002(\021\022$\n\010rankinfo\030\002 \003(\0132\022.WorldC"
      "hipRankInfo\"\"\n\014GetSysMsgReq\022\022\n\nversionnu"
      "m\030\001 \002(\021\"F\n\014GetSysMsgRes\022\016\n\006status\030\001 \002(\021\022"
      "\022\n\nversionnum\030\002 \002(\021\022\022\n\nsystemmsgs\030\003 \003(\t\""
      "\037\n\rLoginLogicRes\022\016\n\006status\030\001 \002(\021\"\033\n\014Ente"
      "rZoneReq\022\013\n\003zid\030\001 \002(\021\"\036\n\014EnterZoneRes\022\016\n"
      "\006status\030\001 \002(\021\"H\n\nEnterMatch\022\013\n\003zid\030\001 \002(\021"
      "\022\017\n\007matchid\030\002 \002(\021\022\016\n\006seatid\030\003 \002(\021\022\014\n\004sid"
      "e\030\004 \002(\021\"\320\001\n\013UserArrived\022\r\n\005unick\030\001 \002(\t\022\r"
      "\n\005uface\030\002 \002(\021\022\014\n\004usex\030\003 \002(\021\022\016\n\006seatid\030\004 "
      "\002(\021\022\014\n\004side\030\005 \002(\021\022\016\n\006roomid\030\006 \002(\t\022\016\n\006ish"
      "ost\030\007 \002(\010\022\021\n\tisoffline\030\010 \002(\010\022\017\n\007brandid\030"
      "\t \001(\t\022\020\n\010numberid\030\n \001(\t\022\016\n\006areaid\030\013 \001(\t\022"
      "\021\n\tuserstate\030\014 \001(\021\"\016\n\014ExitMatchReq\"\036\n\014Ex"
      "itMatchRes\022\016\n\006status\030\001 \002(\021\"\037\n\rUserExitMa"
      "tch\022\016\n\006seatid\030\001 \002(\021\"/\n\rUserRegistReq\022\r\n\005"
      "uname\030\001 \002(\t\022\017\n\007upwdmd5\030\002 \002(\t\"\037\n\rUserRegi"
      "stRes\022\016\n\006status\030\001 \002(\021\"!\n\rCreateRoomReq\022\020"
      "\n\010roominfo\030\001 \002(\t\"\037\n\rCreateRoomRes\022\016\n\006sta"
      "tus\030\001 \002(\021\"\035\n\013JoinRoomReq\022\016\n\006roomid\030\001 \002(\t"
      "\"\035\n\013JoinRoomRes\022\016\n\006status\030\001 \002(\021\"\r\n\013ExitR"
      "oomReq\"=\n\013ExitRoomRes\022\016\n\006status\030\001 \002(\021\022\036\n"
      "\010userinfo\030\002 \001(\0132\014.UserArrived\"\r\n\013Dessolv"
      "eReq\"\035\n\013DessolveRes\022\016\n\006status\030\001 \002(\021\"\024\n\022G"
      "etCreateStatusReq\"$\n\022GetCreateStatusRes\022"
      "\016\n\006status\030\001 \002(\021\"\r\n\013BackRoomReq\"\035\n\013BackRo"
      "omRes\022\016\n\006status\030\001 \002(\021\"-\n\013UserOffLine\022\036\n\010"
      "userinfo\030\001 \002(\0132\014.UserArrived\"\024\n\022UserReco"
      "nnectedReq\"$\n\022UserReconnectedRes\022\016\n\006stat"
      "us\030\001 \002(\021\"\016\n\014HeartBeatReq\"\036\n\014HeartBeatRes"
      "\022\016\n\006status\030\001 \001(\021\"\"\n\014UserReadyReq\022\022\n\nread"
      "ystate\030\001 \002(\021\"d\n\014UserReadyRes\022\016\n\006status\030\001"
      " \002(\021\022\016\n\006seatid\030\002 \001(\021\022\017\n\007brandid\030\003 \001(\t\022\020\n"
      "\010numberid\030\004 \001(\t\022\021\n\tuserstate\030\005 \001(\021\"\033\n\tGa"
      "meStart\022\016\n\006status\030\001 \002(\021\"\032\n\007UdpTest\022\017\n\007co"
      "ntent\030\001 \002(\t\"\017\n\rLoginLogicReq\"D\n\013OptionEv"
      "ent\022\016\n\006seatid\030\001 \002(\021\022\017\n\007opttype\030\002 \002(\021\022\t\n\001"
      "x\030\003 \001(\021\022\t\n\001y\030\004 \001(\021\"8\n\tFrameOpts\022\017\n\007frame"
      "id\030\001 \002(\021\022\032\n\004opts\030\002 \003(\0132\014.OptionEvent\"\?\n\n"
      "LogicFrame\022\017\n\007frameid\030\001 \002(\021\022 \n\014unsyncfra"
      "mes\030\002 \003(\0132\n.FrameOpts\"\\\n\rNextFrameOpts\022\017"
      "\n\007frameid\030\001 \002(\021\022\016\n\006roomid\030\002 \002(\t\022\016\n\006seati"
      "d\030\003 \002(\021\022\032\n\004opts\030\004 \003(\0132\014.OptionEvent\"\022\n\020C"
      "heckLinkGameReq\"\"\n\020CheckLinkGameRes\022\016\n\006s"
      "tatus\030\001 \002(\021\"\037\n\013RoomInfoRes\022\020\n\010roominfo\030\001"
      " \002(\t\"\033\n\tRoomIdRes\022\016\n\006roomid\030\001 \002(\t\"9\n\014Pla"
      "yCountRes\022\021\n\tplaycount\030\001 \002(\t\022\026\n\016totalpla"
      "ycount\030\002 \002(\t\"2\n\020UserArrivedInfos\022\036\n\010user"
      "info\030\001 \003(\0132\014.UserArrived\".\n\tUserState\022\016\n"
      "\006seatid\030\001 \002(\021\022\021\n\tuserstate\030\002 \002(\t\"-\n\014AllU"
      "serState\022\035\n\tuserstate\030\001 \003(\0132\n.UserState\""
      "\033\n\nGameResult\022\r\n\005score\030\001 \003(\t\" \n\017GameTota"
      "lResult\022\r\n\005score\030\001 \003(\t\"4\n\020ClickTouZiNumR"
      "eq\022\016\n\006seatid\030\001 \002(\021\022\020\n\010touzinum\030\002 \002(\021\"2\n\013"
      "TouZiNumRes\022\021\n\ttouzinums\030\001 \003(\021\022\020\n\010bombnu"
      "ms\030\002 \003(\021\"#\n\021ClickTouZiBombRes\022\016\n\006seatid\030"
      "\001 \002(\021*:\n\005Stype\022\020\n\014InvalidStype\020\000\022\010\n\004Auth"
      "\020\001\022\n\n\006System\020\002\022\t\n\005Logic\020\003*\323\n\n\003Cmd\022\016\n\nINV"
      "ALIDCMD\020\000\022\022\n\016eGuestLoginReq\020\001\022\022\n\016eGuestL"
      "oginRes\020\002\022\014\n\010eRelogin\020\003\022\021\n\reUserLostConn"
      "\020\004\022\023\n\017eEditProfileReq\020\005\022\023\n\017eEditProfileR"
      "es\020\006\022\026\n\022eAccountUpgradeReq\020\007\022\026\n\022eAccount"
      "UpgradeRes\020\010\022\022\n\016eUnameLoginReq\020\t\022\022\n\016eUna"
      "meLoginRes\020\n\022\020\n\014eLoginOutReq\020\013\022\020\n\014eLogin"
      "OutRes\020\014\022\022\n\016eUserRegistReq\020\r\022\022\n\016eUserReg"
      "istRes\020\016\022\024\n\020eGetUgameInfoReq\020\017\022\024\n\020eGetUg"
      "ameInfoRes\020\020\022\027\n\023eRecvLoginBonuesReq\020\021\022\027\n"
      "\023eRecvLoginBonuesRes\020\022\022\031\n\025eGetWorldRankU"
      "chipReq\020\023\022\031\n\025eGetWorldRankUchipRes\020\024\022\021\n\r"
      "eGetSysMsgReq\020\025\022\021\n\reGetSysMsgRes\020\026\022\022\n\016eL"
      "oginLogicReq\020\027\022\022\n\016eLoginLogicRes\020\030\022\021\n\reE"
      "nterZoneReq\020\031\022\021\n\reEnterZoneRes\020\032\022\017\n\013eEnt"
      "erMatch\020\033\022\020\n\014eUserArrived\020\034\022\021\n\reExitMatc"
      "hReq\020\035\022\021\n\reExitMatchRes\020\036\022\022\n\016eUserExitMa"
      "tch\020\037\022\022\n\016eCreateRoomReq\020 \022\022\n\016eCreateRoom"
      "Res\020!\022\020\n\014eJoinRoomReq\020\"\022\020\n\014eJoinRoomRes\020"
      "#\022\020\n\014eExitRoomReq\020$\022\020\n\014eExitRoomRes\020%\022\020\n"
      "\014eDessolveReq\020&\022\020\n\014eDessolveRes\020\'\022\027\n\023eGe"
      "tCreateStatusReq\020(\022\027\n\023eGetCreateStatusRe"
      "s\020)\022\020\n\014eBackRoomReq\020*\022\020\n\014eBackRoomRes\020+\022"
      "\020\n\014eUserOffLine\020,\022\021\n\reHeartBeatReq\020-\022\021\n\r"
      "eHeartBeatRes\020.\022\027\n\023eUserReconnectedReq\020/"
      "\022\027\n\023eUserReconnectedRes\0200\022\021\n\reUserReadyR"
      "eq\0201\022\021\n\reUserReadyRes\0202\022\016\n\neGameStart\0203\022"
      "\014\n\010eUdpTest\0204\022\017\n\013eLogicFrame\0205\022\022\n\016eNextF"
      "rameOpts\0206\022\025\n\021eCheckLinkGameReq\0207\022\025\n\021eCh"
      "eckLinkGameRes\0208\022\020\n\014eRoomInfoRes\0209\022\016\n\neR"
      "oomIdRes\020:\022\021\n\rePlayCountRes\020;\022\025\n\021eUserAr"
      "rivedInfos\020<\022\016\n\neUserState\020=\022\021\n\reAllUser"
      "State\020>\022\017\n\013eGameResult\020\?\022\024\n\020eGameTotalRe"
      "sult\020@\022\025\n\021eClickTouZiNumReq\020A\022\020\n\014eTouZiN"
      "umRes\020B\022\026\n\022eClickTouZiBombRes\020C"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4751);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_game_2eproto
const ::google::protobuf::EnumDescriptor* Stype_descriptor() {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_game_2eproto::file_level_enum_descriptors[0];
}
bool Stype_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Cmd_descriptor() {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_game_2eproto::file_level_enum_descriptors[1];
}
bool Cmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GuestLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestLoginReq::kGuestkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestLoginReq::GuestLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGuestLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestLoginReq)
}
GuestLoginReq::GuestLoginReq(const GuestLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guestkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guestkey()) {
    guestkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guestkey_);
  }
  // @@protoc_insertion_point(copy_constructor:GuestLoginReq)
}

void GuestLoginReq::SharedCtor() {
  _cached_size_ = 0;
  guestkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GuestLoginReq::~GuestLoginReq() {
  // @@protoc_insertion_point(destructor:GuestLoginReq)
  SharedDtor();
}

void GuestLoginReq::SharedDtor() {
  guestkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GuestLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestLoginReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestLoginReq& GuestLoginReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGuestLoginReq();
  return *internal_default_instance();
}

GuestLoginReq* GuestLoginReq::New(::google::protobuf::Arena* arena) const {
  GuestLoginReq* n = new GuestLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!guestkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*guestkey_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuestLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string guestkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guestkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guestkey().data(), static_cast<int>(this->guestkey().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GuestLoginReq.guestkey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestLoginReq)
  return false;
#undef DO_
}

void GuestLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string guestkey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guestkey().data(), static_cast<int>(this->guestkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestLoginReq.guestkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guestkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestLoginReq)
}

::google::protobuf::uint8* GuestLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuestLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string guestkey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guestkey().data(), static_cast<int>(this->guestkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GuestLoginReq.guestkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guestkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestLoginReq)
  return target;
}

size_t GuestLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string guestkey = 1;
  if (has_guestkey()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guestkey());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestLoginReq)
    MergeFrom(*source);
  }
}

void GuestLoginReq::MergeFrom(const GuestLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guestkey()) {
    set_has_guestkey();
    guestkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guestkey_);
  }
}

void GuestLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestLoginReq::CopyFrom(const GuestLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GuestLoginReq::Swap(GuestLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestLoginReq::InternalSwap(GuestLoginReq* other) {
  using std::swap;
  guestkey_.Swap(&other->guestkey_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestLoginReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnameLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnameLoginReq::kUnameFieldNumber;
const int UnameLoginReq::kUpwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnameLoginReq::UnameLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUnameLoginReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnameLoginReq)
}
UnameLoginReq::UnameLoginReq(const UnameLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uname()) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  upwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upwd()) {
    upwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwd_);
  }
  // @@protoc_insertion_point(copy_constructor:UnameLoginReq)
}

void UnameLoginReq::SharedCtor() {
  _cached_size_ = 0;
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UnameLoginReq::~UnameLoginReq() {
  // @@protoc_insertion_point(destructor:UnameLoginReq)
  SharedDtor();
}

void UnameLoginReq::SharedDtor() {
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnameLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnameLoginReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnameLoginReq& UnameLoginReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUnameLoginReq();
  return *internal_default_instance();
}

UnameLoginReq* UnameLoginReq::New(::google::protobuf::Arena* arena) const {
  UnameLoginReq* n = new UnameLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnameLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnameLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!uname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!upwd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*upwd_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnameLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnameLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uname().data(), static_cast<int>(this->uname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UnameLoginReq.uname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string upwd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upwd().data(), static_cast<int>(this->upwd().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UnameLoginReq.upwd");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnameLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnameLoginReq)
  return false;
#undef DO_
}

void UnameLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnameLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UnameLoginReq.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uname(), output);
  }

  // required string upwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upwd().data(), static_cast<int>(this->upwd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UnameLoginReq.upwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->upwd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UnameLoginReq)
}

::google::protobuf::uint8* UnameLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnameLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UnameLoginReq.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uname(), target);
  }

  // required string upwd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upwd().data(), static_cast<int>(this->upwd().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UnameLoginReq.upwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->upwd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnameLoginReq)
  return target;
}

size_t UnameLoginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UnameLoginReq)
  size_t total_size = 0;

  if (has_uname()) {
    // required string uname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  if (has_upwd()) {
    // required string upwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upwd());
  }

  return total_size;
}
size_t UnameLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnameLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string uname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());

    // required string upwd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upwd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnameLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnameLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnameLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnameLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnameLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnameLoginReq)
    MergeFrom(*source);
  }
}

void UnameLoginReq::MergeFrom(const UnameLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnameLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_uname();
      uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_upwd();
      upwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwd_);
    }
  }
}

void UnameLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnameLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnameLoginReq::CopyFrom(const UnameLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnameLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnameLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UnameLoginReq::Swap(UnameLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnameLoginReq::InternalSwap(UnameLoginReq* other) {
  using std::swap;
  uname_.Swap(&other->uname_);
  upwd_.Swap(&other->upwd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnameLoginReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserCenterInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserCenterInfo::kUnickFieldNumber;
const int UserCenterInfo::kUfaceFieldNumber;
const int UserCenterInfo::kUsexFieldNumber;
const int UserCenterInfo::kUvipFieldNumber;
const int UserCenterInfo::kUidFieldNumber;
const int UserCenterInfo::kBrandidFieldNumber;
const int UserCenterInfo::kNumberidFieldNumber;
const int UserCenterInfo::kAreaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserCenterInfo::UserCenterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserCenterInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserCenterInfo)
}
UserCenterInfo::UserCenterInfo(const UserCenterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unick()) {
    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  brandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_brandid()) {
    brandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandid_);
  }
  numberid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_numberid()) {
    numberid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.numberid_);
  }
  areaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_areaid()) {
    areaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.areaid_);
  }
  ::memcpy(&uface_, &from.uface_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&uface_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:UserCenterInfo)
}

void UserCenterInfo::SharedCtor() {
  _cached_size_ = 0;
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numberid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  areaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(uid_));
}

UserCenterInfo::~UserCenterInfo() {
  // @@protoc_insertion_point(destructor:UserCenterInfo)
  SharedDtor();
}

void UserCenterInfo::SharedDtor() {
  unick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brandid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numberid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  areaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserCenterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserCenterInfo::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserCenterInfo& UserCenterInfo::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserCenterInfo();
  return *internal_default_instance();
}

UserCenterInfo* UserCenterInfo::New(::google::protobuf::Arena* arena) const {
  UserCenterInfo* n = new UserCenterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserCenterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UserCenterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!unick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*unick_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!brandid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*brandid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!numberid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*numberid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!areaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*areaid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&uface_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uid_) -
        reinterpret_cast<char*>(&uface_)) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserCenterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserCenterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string unick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unick().data(), static_cast<int>(this->unick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserCenterInfo.unick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uface();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 usex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &usex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uvip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uvip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uvip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string brandid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brandid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->brandid().data(), static_cast<int>(this->brandid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserCenterInfo.brandid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string numberid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_numberid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->numberid().data(), static_cast<int>(this->numberid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserCenterInfo.numberid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string areaid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_areaid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->areaid().data(), static_cast<int>(this->areaid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserCenterInfo.areaid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserCenterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserCenterInfo)
  return false;
#undef DO_
}

void UserCenterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserCenterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.unick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unick(), output);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->uface(), output);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->usex(), output);
  }

  // required sint32 uvip = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->uvip(), output);
  }

  // required sint32 uid = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->uid(), output);
  }

  // optional string brandid = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brandid().data(), static_cast<int>(this->brandid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.brandid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->brandid(), output);
  }

  // optional string numberid = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->numberid().data(), static_cast<int>(this->numberid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.numberid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->numberid(), output);
  }

  // optional string areaid = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->areaid().data(), static_cast<int>(this->areaid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.areaid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->areaid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserCenterInfo)
}

::google::protobuf::uint8* UserCenterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserCenterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.unick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unick(), target);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->uface(), target);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->usex(), target);
  }

  // required sint32 uvip = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->uvip(), target);
  }

  // required sint32 uid = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->uid(), target);
  }

  // optional string brandid = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brandid().data(), static_cast<int>(this->brandid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.brandid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->brandid(), target);
  }

  // optional string numberid = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->numberid().data(), static_cast<int>(this->numberid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.numberid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->numberid(), target);
  }

  // optional string areaid = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->areaid().data(), static_cast<int>(this->areaid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserCenterInfo.areaid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->areaid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserCenterInfo)
  return target;
}

size_t UserCenterInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UserCenterInfo)
  size_t total_size = 0;

  if (has_unick()) {
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());
  }

  if (has_uface()) {
    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());
  }

  if (has_usex()) {
    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());
  }

  if (has_uvip()) {
    // required sint32 uvip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uvip());
  }

  if (has_uid()) {
    // required sint32 uid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uid());
  }

  return total_size;
}
size_t UserCenterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserCenterInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000f1) ^ 0x000000f1) == 0) {  // All required fields are present.
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());

    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());

    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());

    // required sint32 uvip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uvip());

    // required sint32 uid = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional string brandid = 6;
    if (has_brandid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->brandid());
    }

    // optional string numberid = 7;
    if (has_numberid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->numberid());
    }

    // optional string areaid = 8;
    if (has_areaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->areaid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserCenterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserCenterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserCenterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserCenterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserCenterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserCenterInfo)
    MergeFrom(*source);
  }
}

void UserCenterInfo::MergeFrom(const UserCenterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserCenterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_unick();
      unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_brandid();
      brandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_numberid();
      numberid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.numberid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_areaid();
      areaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.areaid_);
    }
    if (cached_has_bits & 0x00000010u) {
      uface_ = from.uface_;
    }
    if (cached_has_bits & 0x00000020u) {
      usex_ = from.usex_;
    }
    if (cached_has_bits & 0x00000040u) {
      uvip_ = from.uvip_;
    }
    if (cached_has_bits & 0x00000080u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserCenterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserCenterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserCenterInfo::CopyFrom(const UserCenterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserCenterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserCenterInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000f1) != 0x000000f1) return false;
  return true;
}

void UserCenterInfo::Swap(UserCenterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserCenterInfo::InternalSwap(UserCenterInfo* other) {
  using std::swap;
  unick_.Swap(&other->unick_);
  brandid_.Swap(&other->brandid_);
  numberid_.Swap(&other->numberid_);
  areaid_.Swap(&other->areaid_);
  swap(uface_, other->uface_);
  swap(usex_, other->usex_);
  swap(uvip_, other->uvip_);
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserCenterInfo::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GuestLoginRes::InitAsDefaultInstance() {
  ::_GuestLoginRes_default_instance_._instance.get_mutable()->uinfo_ = const_cast< ::UserCenterInfo*>(
      ::UserCenterInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestLoginRes::kStatusFieldNumber;
const int GuestLoginRes::kUinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestLoginRes::GuestLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGuestLoginRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GuestLoginRes)
}
GuestLoginRes::GuestLoginRes(const GuestLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uinfo()) {
    uinfo_ = new ::UserCenterInfo(*from.uinfo_);
  } else {
    uinfo_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:GuestLoginRes)
}

void GuestLoginRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&uinfo_)) + sizeof(status_));
}

GuestLoginRes::~GuestLoginRes() {
  // @@protoc_insertion_point(destructor:GuestLoginRes)
  SharedDtor();
}

void GuestLoginRes::SharedDtor() {
  if (this != internal_default_instance()) delete uinfo_;
}

void GuestLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestLoginRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestLoginRes& GuestLoginRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGuestLoginRes();
  return *internal_default_instance();
}

GuestLoginRes* GuestLoginRes::New(::google::protobuf::Arena* arena) const {
  GuestLoginRes* n = new GuestLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(uinfo_ != NULL);
    uinfo_->Clear();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GuestLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GuestLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .UserCenterInfo uinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GuestLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GuestLoginRes)
  return false;
#undef DO_
}

void GuestLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  // optional .UserCenterInfo uinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->uinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GuestLoginRes)
}

::google::protobuf::uint8* GuestLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GuestLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  // optional .UserCenterInfo uinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->uinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GuestLoginRes)
  return target;
}

size_t GuestLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GuestLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  // optional .UserCenterInfo uinfo = 2;
  if (has_uinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GuestLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GuestLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GuestLoginRes)
    MergeFrom(*source);
  }
}

void GuestLoginRes::MergeFrom(const GuestLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GuestLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_uinfo()->::UserCenterInfo::MergeFrom(from.uinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GuestLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GuestLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestLoginRes::CopyFrom(const GuestLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GuestLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_uinfo()) {
    if (!this->uinfo_->IsInitialized()) return false;
  }
  return true;
}

void GuestLoginRes::Swap(GuestLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestLoginRes::InternalSwap(GuestLoginRes* other) {
  using std::swap;
  swap(uinfo_, other->uinfo_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestLoginRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Relogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Relogin::Relogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRelogin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Relogin)
}
Relogin::Relogin(const Relogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Relogin)
}

void Relogin::SharedCtor() {
  _cached_size_ = 0;
}

Relogin::~Relogin() {
  // @@protoc_insertion_point(destructor:Relogin)
  SharedDtor();
}

void Relogin::SharedDtor() {
}

void Relogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Relogin::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Relogin& Relogin::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRelogin();
  return *internal_default_instance();
}

Relogin* Relogin::New(::google::protobuf::Arena* arena) const {
  Relogin* n = new Relogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Relogin::Clear() {
// @@protoc_insertion_point(message_clear_start:Relogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Relogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Relogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Relogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Relogin)
  return false;
#undef DO_
}

void Relogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Relogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Relogin)
}

::google::protobuf::uint8* Relogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Relogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Relogin)
  return target;
}

size_t Relogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Relogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Relogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Relogin)
  GOOGLE_DCHECK_NE(&from, this);
  const Relogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Relogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Relogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Relogin)
    MergeFrom(*source);
  }
}

void Relogin::MergeFrom(const Relogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Relogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Relogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Relogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Relogin::CopyFrom(const Relogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Relogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Relogin::IsInitialized() const {
  return true;
}

void Relogin::Swap(Relogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Relogin::InternalSwap(Relogin* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Relogin::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserLostConn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLostConn::UserLostConn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserLostConn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserLostConn)
}
UserLostConn::UserLostConn(const UserLostConn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UserLostConn)
}

void UserLostConn::SharedCtor() {
  _cached_size_ = 0;
}

UserLostConn::~UserLostConn() {
  // @@protoc_insertion_point(destructor:UserLostConn)
  SharedDtor();
}

void UserLostConn::SharedDtor() {
}

void UserLostConn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLostConn::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLostConn& UserLostConn::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserLostConn();
  return *internal_default_instance();
}

UserLostConn* UserLostConn::New(::google::protobuf::Arena* arena) const {
  UserLostConn* n = new UserLostConn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLostConn::Clear() {
// @@protoc_insertion_point(message_clear_start:UserLostConn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserLostConn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserLostConn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:UserLostConn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserLostConn)
  return false;
#undef DO_
}

void UserLostConn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserLostConn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserLostConn)
}

::google::protobuf::uint8* UserLostConn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserLostConn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserLostConn)
  return target;
}

size_t UserLostConn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserLostConn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLostConn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserLostConn)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLostConn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLostConn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserLostConn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserLostConn)
    MergeFrom(*source);
  }
}

void UserLostConn::MergeFrom(const UserLostConn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserLostConn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UserLostConn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserLostConn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLostConn::CopyFrom(const UserLostConn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserLostConn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLostConn::IsInitialized() const {
  return true;
}

void UserLostConn::Swap(UserLostConn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLostConn::InternalSwap(UserLostConn* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLostConn::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnameLoginRes::InitAsDefaultInstance() {
  ::_UnameLoginRes_default_instance_._instance.get_mutable()->uinfo_ = const_cast< ::UserCenterInfo*>(
      ::UserCenterInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnameLoginRes::kStatusFieldNumber;
const int UnameLoginRes::kUinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnameLoginRes::UnameLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUnameLoginRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnameLoginRes)
}
UnameLoginRes::UnameLoginRes(const UnameLoginRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uinfo()) {
    uinfo_ = new ::UserCenterInfo(*from.uinfo_);
  } else {
    uinfo_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UnameLoginRes)
}

void UnameLoginRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&uinfo_)) + sizeof(status_));
}

UnameLoginRes::~UnameLoginRes() {
  // @@protoc_insertion_point(destructor:UnameLoginRes)
  SharedDtor();
}

void UnameLoginRes::SharedDtor() {
  if (this != internal_default_instance()) delete uinfo_;
}

void UnameLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnameLoginRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnameLoginRes& UnameLoginRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUnameLoginRes();
  return *internal_default_instance();
}

UnameLoginRes* UnameLoginRes::New(::google::protobuf::Arena* arena) const {
  UnameLoginRes* n = new UnameLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnameLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:UnameLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(uinfo_ != NULL);
    uinfo_->Clear();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnameLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnameLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .UserCenterInfo uinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnameLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnameLoginRes)
  return false;
#undef DO_
}

void UnameLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnameLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  // optional .UserCenterInfo uinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->uinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UnameLoginRes)
}

::google::protobuf::uint8* UnameLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnameLoginRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  // optional .UserCenterInfo uinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->uinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnameLoginRes)
  return target;
}

size_t UnameLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnameLoginRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  // optional .UserCenterInfo uinfo = 2;
  if (has_uinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnameLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnameLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const UnameLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnameLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnameLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnameLoginRes)
    MergeFrom(*source);
  }
}

void UnameLoginRes::MergeFrom(const UnameLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnameLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_uinfo()->::UserCenterInfo::MergeFrom(from.uinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UnameLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnameLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnameLoginRes::CopyFrom(const UnameLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnameLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnameLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_uinfo()) {
    if (!this->uinfo_->IsInitialized()) return false;
  }
  return true;
}

void UnameLoginRes::Swap(UnameLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnameLoginRes::InternalSwap(UnameLoginRes* other) {
  using std::swap;
  swap(uinfo_, other->uinfo_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnameLoginRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EditProfileReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditProfileReq::kUnickFieldNumber;
const int EditProfileReq::kUfaceFieldNumber;
const int EditProfileReq::kUsexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditProfileReq::EditProfileReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsEditProfileReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EditProfileReq)
}
EditProfileReq::EditProfileReq(const EditProfileReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unick()) {
    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  ::memcpy(&uface_, &from.uface_,
    static_cast<size_t>(reinterpret_cast<char*>(&usex_) -
    reinterpret_cast<char*>(&uface_)) + sizeof(usex_));
  // @@protoc_insertion_point(copy_constructor:EditProfileReq)
}

void EditProfileReq::SharedCtor() {
  _cached_size_ = 0;
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usex_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(usex_));
}

EditProfileReq::~EditProfileReq() {
  // @@protoc_insertion_point(destructor:EditProfileReq)
  SharedDtor();
}

void EditProfileReq::SharedDtor() {
  unick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EditProfileReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditProfileReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EditProfileReq& EditProfileReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsEditProfileReq();
  return *internal_default_instance();
}

EditProfileReq* EditProfileReq::New(::google::protobuf::Arena* arena) const {
  EditProfileReq* n = new EditProfileReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditProfileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EditProfileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!unick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*unick_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&uface_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&usex_) -
        reinterpret_cast<char*>(&uface_)) + sizeof(usex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EditProfileReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EditProfileReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string unick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unick().data(), static_cast<int>(this->unick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "EditProfileReq.unick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uface();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 usex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &usex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EditProfileReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EditProfileReq)
  return false;
#undef DO_
}

void EditProfileReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EditProfileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "EditProfileReq.unick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unick(), output);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->uface(), output);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->usex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EditProfileReq)
}

::google::protobuf::uint8* EditProfileReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EditProfileReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "EditProfileReq.unick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unick(), target);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->uface(), target);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->usex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EditProfileReq)
  return target;
}

size_t EditProfileReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:EditProfileReq)
  size_t total_size = 0;

  if (has_unick()) {
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());
  }

  if (has_uface()) {
    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());
  }

  if (has_usex()) {
    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());
  }

  return total_size;
}
size_t EditProfileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EditProfileReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());

    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());

    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditProfileReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EditProfileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EditProfileReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EditProfileReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EditProfileReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EditProfileReq)
    MergeFrom(*source);
  }
}

void EditProfileReq::MergeFrom(const EditProfileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EditProfileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_unick();
      unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
    }
    if (cached_has_bits & 0x00000002u) {
      uface_ = from.uface_;
    }
    if (cached_has_bits & 0x00000004u) {
      usex_ = from.usex_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EditProfileReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EditProfileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditProfileReq::CopyFrom(const EditProfileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EditProfileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditProfileReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void EditProfileReq::Swap(EditProfileReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditProfileReq::InternalSwap(EditProfileReq* other) {
  using std::swap;
  unick_.Swap(&other->unick_);
  swap(uface_, other->uface_);
  swap(usex_, other->usex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EditProfileReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EditProfileRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditProfileRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditProfileRes::EditProfileRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsEditProfileRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EditProfileRes)
}
EditProfileRes::EditProfileRes(const EditProfileRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:EditProfileRes)
}

void EditProfileRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

EditProfileRes::~EditProfileRes() {
  // @@protoc_insertion_point(destructor:EditProfileRes)
  SharedDtor();
}

void EditProfileRes::SharedDtor() {
}

void EditProfileRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditProfileRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EditProfileRes& EditProfileRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsEditProfileRes();
  return *internal_default_instance();
}

EditProfileRes* EditProfileRes::New(::google::protobuf::Arena* arena) const {
  EditProfileRes* n = new EditProfileRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditProfileRes::Clear() {
// @@protoc_insertion_point(message_clear_start:EditProfileRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EditProfileRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EditProfileRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EditProfileRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EditProfileRes)
  return false;
#undef DO_
}

void EditProfileRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EditProfileRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EditProfileRes)
}

::google::protobuf::uint8* EditProfileRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EditProfileRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EditProfileRes)
  return target;
}

size_t EditProfileRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EditProfileRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditProfileRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EditProfileRes)
  GOOGLE_DCHECK_NE(&from, this);
  const EditProfileRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EditProfileRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EditProfileRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EditProfileRes)
    MergeFrom(*source);
  }
}

void EditProfileRes::MergeFrom(const EditProfileRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EditProfileRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void EditProfileRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EditProfileRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditProfileRes::CopyFrom(const EditProfileRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EditProfileRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EditProfileRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void EditProfileRes::Swap(EditProfileRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditProfileRes::InternalSwap(EditProfileRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EditProfileRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountUpgradeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountUpgradeReq::kUnameFieldNumber;
const int AccountUpgradeReq::kUpwdMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountUpgradeReq::AccountUpgradeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsAccountUpgradeReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountUpgradeReq)
}
AccountUpgradeReq::AccountUpgradeReq(const AccountUpgradeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uname()) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  upwdmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upwdmd5()) {
    upwdmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwdmd5_);
  }
  // @@protoc_insertion_point(copy_constructor:AccountUpgradeReq)
}

void AccountUpgradeReq::SharedCtor() {
  _cached_size_ = 0;
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwdmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountUpgradeReq::~AccountUpgradeReq() {
  // @@protoc_insertion_point(destructor:AccountUpgradeReq)
  SharedDtor();
}

void AccountUpgradeReq::SharedDtor() {
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwdmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountUpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountUpgradeReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountUpgradeReq& AccountUpgradeReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsAccountUpgradeReq();
  return *internal_default_instance();
}

AccountUpgradeReq* AccountUpgradeReq::New(::google::protobuf::Arena* arena) const {
  AccountUpgradeReq* n = new AccountUpgradeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountUpgradeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!uname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!upwdmd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*upwdmd5_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountUpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountUpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uname().data(), static_cast<int>(this->uname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountUpgradeReq.uname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string upwdMd5 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upwdmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upwdmd5().data(), static_cast<int>(this->upwdmd5().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountUpgradeReq.upwdMd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountUpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountUpgradeReq)
  return false;
#undef DO_
}

void AccountUpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uname(), output);
  }

  // required string upwdMd5 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upwdmd5().data(), static_cast<int>(this->upwdmd5().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.upwdMd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->upwdmd5(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountUpgradeReq)
}

::google::protobuf::uint8* AccountUpgradeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountUpgradeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uname(), target);
  }

  // required string upwdMd5 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upwdmd5().data(), static_cast<int>(this->upwdmd5().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountUpgradeReq.upwdMd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->upwdmd5(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountUpgradeReq)
  return target;
}

size_t AccountUpgradeReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountUpgradeReq)
  size_t total_size = 0;

  if (has_uname()) {
    // required string uname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  if (has_upwdmd5()) {
    // required string upwdMd5 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upwdmd5());
  }

  return total_size;
}
size_t AccountUpgradeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountUpgradeReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string uname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());

    // required string upwdMd5 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upwdmd5());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountUpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountUpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountUpgradeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountUpgradeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountUpgradeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountUpgradeReq)
    MergeFrom(*source);
  }
}

void AccountUpgradeReq::MergeFrom(const AccountUpgradeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountUpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_uname();
      uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_upwdmd5();
      upwdmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwdmd5_);
    }
  }
}

void AccountUpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountUpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountUpgradeReq::CopyFrom(const AccountUpgradeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountUpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountUpgradeReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AccountUpgradeReq::Swap(AccountUpgradeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountUpgradeReq::InternalSwap(AccountUpgradeReq* other) {
  using std::swap;
  uname_.Swap(&other->uname_);
  upwdmd5_.Swap(&other->upwdmd5_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountUpgradeReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountUpgradeRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountUpgradeRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountUpgradeRes::AccountUpgradeRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsAccountUpgradeRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountUpgradeRes)
}
AccountUpgradeRes::AccountUpgradeRes(const AccountUpgradeRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:AccountUpgradeRes)
}

void AccountUpgradeRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

AccountUpgradeRes::~AccountUpgradeRes() {
  // @@protoc_insertion_point(destructor:AccountUpgradeRes)
  SharedDtor();
}

void AccountUpgradeRes::SharedDtor() {
}

void AccountUpgradeRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountUpgradeRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountUpgradeRes& AccountUpgradeRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsAccountUpgradeRes();
  return *internal_default_instance();
}

AccountUpgradeRes* AccountUpgradeRes::New(::google::protobuf::Arena* arena) const {
  AccountUpgradeRes* n = new AccountUpgradeRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountUpgradeRes::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountUpgradeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountUpgradeRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountUpgradeRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountUpgradeRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountUpgradeRes)
  return false;
#undef DO_
}

void AccountUpgradeRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountUpgradeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountUpgradeRes)
}

::google::protobuf::uint8* AccountUpgradeRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountUpgradeRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountUpgradeRes)
  return target;
}

size_t AccountUpgradeRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountUpgradeRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountUpgradeRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountUpgradeRes)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountUpgradeRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountUpgradeRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountUpgradeRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountUpgradeRes)
    MergeFrom(*source);
  }
}

void AccountUpgradeRes::MergeFrom(const AccountUpgradeRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountUpgradeRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void AccountUpgradeRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountUpgradeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountUpgradeRes::CopyFrom(const AccountUpgradeRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountUpgradeRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountUpgradeRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void AccountUpgradeRes::Swap(AccountUpgradeRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountUpgradeRes::InternalSwap(AccountUpgradeRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountUpgradeRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginOutReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginOutReq::LoginOutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsLoginOutReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginOutReq)
}
LoginOutReq::LoginOutReq(const LoginOutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LoginOutReq)
}

void LoginOutReq::SharedCtor() {
  _cached_size_ = 0;
}

LoginOutReq::~LoginOutReq() {
  // @@protoc_insertion_point(destructor:LoginOutReq)
  SharedDtor();
}

void LoginOutReq::SharedDtor() {
}

void LoginOutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginOutReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginOutReq& LoginOutReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsLoginOutReq();
  return *internal_default_instance();
}

LoginOutReq* LoginOutReq::New(::google::protobuf::Arena* arena) const {
  LoginOutReq* n = new LoginOutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginOutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginOutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginOutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginOutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:LoginOutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginOutReq)
  return false;
#undef DO_
}

void LoginOutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginOutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginOutReq)
}

::google::protobuf::uint8* LoginOutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginOutReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginOutReq)
  return target;
}

size_t LoginOutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginOutReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginOutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginOutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginOutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginOutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginOutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginOutReq)
    MergeFrom(*source);
  }
}

void LoginOutReq::MergeFrom(const LoginOutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginOutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LoginOutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginOutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginOutReq::CopyFrom(const LoginOutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginOutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginOutReq::IsInitialized() const {
  return true;
}

void LoginOutReq::Swap(LoginOutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginOutReq::InternalSwap(LoginOutReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginOutReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginOutRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginOutRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginOutRes::LoginOutRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsLoginOutRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginOutRes)
}
LoginOutRes::LoginOutRes(const LoginOutRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:LoginOutRes)
}

void LoginOutRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

LoginOutRes::~LoginOutRes() {
  // @@protoc_insertion_point(destructor:LoginOutRes)
  SharedDtor();
}

void LoginOutRes::SharedDtor() {
}

void LoginOutRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginOutRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginOutRes& LoginOutRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsLoginOutRes();
  return *internal_default_instance();
}

LoginOutRes* LoginOutRes::New(::google::protobuf::Arena* arena) const {
  LoginOutRes* n = new LoginOutRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginOutRes::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginOutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginOutRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginOutRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginOutRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginOutRes)
  return false;
#undef DO_
}

void LoginOutRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginOutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginOutRes)
}

::google::protobuf::uint8* LoginOutRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginOutRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginOutRes)
  return target;
}

size_t LoginOutRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginOutRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginOutRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginOutRes)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginOutRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginOutRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginOutRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginOutRes)
    MergeFrom(*source);
  }
}

void LoginOutRes::MergeFrom(const LoginOutRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginOutRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void LoginOutRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginOutRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginOutRes::CopyFrom(const LoginOutRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginOutRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginOutRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LoginOutRes::Swap(LoginOutRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginOutRes::InternalSwap(LoginOutRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginOutRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserGameInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGameInfo::kUchipFieldNumber;
const int UserGameInfo::kUexpFieldNumber;
const int UserGameInfo::kUvipFieldNumber;
const int UserGameInfo::kUchip2FieldNumber;
const int UserGameInfo::kUchip3FieldNumber;
const int UserGameInfo::kUdata1FieldNumber;
const int UserGameInfo::kUdata2FieldNumber;
const int UserGameInfo::kUdata3FieldNumber;
const int UserGameInfo::kBonuesstatusFieldNumber;
const int UserGameInfo::kBonuesFieldNumber;
const int UserGameInfo::kDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGameInfo::UserGameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserGameInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserGameInfo)
}
UserGameInfo::UserGameInfo(const UserGameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uchip_, &from.uchip_,
    static_cast<size_t>(reinterpret_cast<char*>(&days_) -
    reinterpret_cast<char*>(&uchip_)) + sizeof(days_));
  // @@protoc_insertion_point(copy_constructor:UserGameInfo)
}

void UserGameInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uchip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_) -
      reinterpret_cast<char*>(&uchip_)) + sizeof(days_));
}

UserGameInfo::~UserGameInfo() {
  // @@protoc_insertion_point(destructor:UserGameInfo)
  SharedDtor();
}

void UserGameInfo::SharedDtor() {
}

void UserGameInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserGameInfo::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserGameInfo& UserGameInfo::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserGameInfo();
  return *internal_default_instance();
}

UserGameInfo* UserGameInfo::New(::google::protobuf::Arena* arena) const {
  UserGameInfo* n = new UserGameInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&uchip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&udata3_) -
        reinterpret_cast<char*>(&uchip_)) + sizeof(udata3_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&bonuesstatus_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&days_) -
        reinterpret_cast<char*>(&bonuesstatus_)) + sizeof(days_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserGameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserGameInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 uchip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_uchip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uchip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uexp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uexp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uvip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_uvip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uvip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uchip2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uchip2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uchip2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uchip3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_uchip3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uchip3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 udata1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_udata1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &udata1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 udata2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_udata2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &udata2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 udata3 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_udata3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &udata3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 bonuesstatus = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_bonuesstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bonuesstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 bonues = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_bonues();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &bonues_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 days = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserGameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserGameInfo)
  return false;
#undef DO_
}

void UserGameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 uchip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->uchip(), output);
  }

  // required sint32 uexp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->uexp(), output);
  }

  // required sint32 uvip = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->uvip(), output);
  }

  // required sint32 uchip2 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->uchip2(), output);
  }

  // required sint32 uchip3 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->uchip3(), output);
  }

  // required sint32 udata1 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->udata1(), output);
  }

  // required sint32 udata2 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->udata2(), output);
  }

  // required sint32 udata3 = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->udata3(), output);
  }

  // required sint32 bonuesstatus = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->bonuesstatus(), output);
  }

  // required sint32 bonues = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->bonues(), output);
  }

  // required sint32 days = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->days(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserGameInfo)
}

::google::protobuf::uint8* UserGameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 uchip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->uchip(), target);
  }

  // required sint32 uexp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->uexp(), target);
  }

  // required sint32 uvip = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->uvip(), target);
  }

  // required sint32 uchip2 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->uchip2(), target);
  }

  // required sint32 uchip3 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->uchip3(), target);
  }

  // required sint32 udata1 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(6, this->udata1(), target);
  }

  // required sint32 udata2 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->udata2(), target);
  }

  // required sint32 udata3 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(8, this->udata3(), target);
  }

  // required sint32 bonuesstatus = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(9, this->bonuesstatus(), target);
  }

  // required sint32 bonues = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->bonues(), target);
  }

  // required sint32 days = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->days(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserGameInfo)
  return target;
}

size_t UserGameInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UserGameInfo)
  size_t total_size = 0;

  if (has_uchip()) {
    // required sint32 uchip = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip());
  }

  if (has_uexp()) {
    // required sint32 uexp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uexp());
  }

  if (has_uvip()) {
    // required sint32 uvip = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uvip());
  }

  if (has_uchip2()) {
    // required sint32 uchip2 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip2());
  }

  if (has_uchip3()) {
    // required sint32 uchip3 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip3());
  }

  if (has_udata1()) {
    // required sint32 udata1 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->udata1());
  }

  if (has_udata2()) {
    // required sint32 udata2 = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->udata2());
  }

  if (has_udata3()) {
    // required sint32 udata3 = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->udata3());
  }

  if (has_bonuesstatus()) {
    // required sint32 bonuesstatus = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bonuesstatus());
  }

  if (has_bonues()) {
    // required sint32 bonues = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bonues());
  }

  if (has_days()) {
    // required sint32 days = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->days());
  }

  return total_size;
}
size_t UserGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserGameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required sint32 uchip = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip());

    // required sint32 uexp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uexp());

    // required sint32 uvip = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uvip());

    // required sint32 uchip2 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip2());

    // required sint32 uchip3 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip3());

    // required sint32 udata1 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->udata1());

    // required sint32 udata2 = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->udata2());

    // required sint32 udata3 = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->udata3());

    // required sint32 bonuesstatus = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bonuesstatus());

    // required sint32 bonues = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->bonues());

    // required sint32 days = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->days());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserGameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserGameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserGameInfo)
    MergeFrom(*source);
  }
}

void UserGameInfo::MergeFrom(const UserGameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      uchip_ = from.uchip_;
    }
    if (cached_has_bits & 0x00000002u) {
      uexp_ = from.uexp_;
    }
    if (cached_has_bits & 0x00000004u) {
      uvip_ = from.uvip_;
    }
    if (cached_has_bits & 0x00000008u) {
      uchip2_ = from.uchip2_;
    }
    if (cached_has_bits & 0x00000010u) {
      uchip3_ = from.uchip3_;
    }
    if (cached_has_bits & 0x00000020u) {
      udata1_ = from.udata1_;
    }
    if (cached_has_bits & 0x00000040u) {
      udata2_ = from.udata2_;
    }
    if (cached_has_bits & 0x00000080u) {
      udata3_ = from.udata3_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      bonuesstatus_ = from.bonuesstatus_;
    }
    if (cached_has_bits & 0x00000200u) {
      bonues_ = from.bonues_;
    }
    if (cached_has_bits & 0x00000400u) {
      days_ = from.days_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserGameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGameInfo::CopyFrom(const UserGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGameInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  return true;
}

void UserGameInfo::Swap(UserGameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserGameInfo::InternalSwap(UserGameInfo* other) {
  using std::swap;
  swap(uchip_, other->uchip_);
  swap(uexp_, other->uexp_);
  swap(uvip_, other->uvip_);
  swap(uchip2_, other->uchip2_);
  swap(uchip3_, other->uchip3_);
  swap(udata1_, other->udata1_);
  swap(udata2_, other->udata2_);
  swap(udata3_, other->udata3_);
  swap(bonuesstatus_, other->bonuesstatus_);
  swap(bonues_, other->bonues_);
  swap(days_, other->days_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserGameInfo::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUgameInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUgameInfoReq::GetUgameInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetUgameInfoReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetUgameInfoReq)
}
GetUgameInfoReq::GetUgameInfoReq(const GetUgameInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetUgameInfoReq)
}

void GetUgameInfoReq::SharedCtor() {
  _cached_size_ = 0;
}

GetUgameInfoReq::~GetUgameInfoReq() {
  // @@protoc_insertion_point(destructor:GetUgameInfoReq)
  SharedDtor();
}

void GetUgameInfoReq::SharedDtor() {
}

void GetUgameInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUgameInfoReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUgameInfoReq& GetUgameInfoReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetUgameInfoReq();
  return *internal_default_instance();
}

GetUgameInfoReq* GetUgameInfoReq::New(::google::protobuf::Arena* arena) const {
  GetUgameInfoReq* n = new GetUgameInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUgameInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetUgameInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUgameInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetUgameInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GetUgameInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetUgameInfoReq)
  return false;
#undef DO_
}

void GetUgameInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetUgameInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetUgameInfoReq)
}

::google::protobuf::uint8* GetUgameInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetUgameInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetUgameInfoReq)
  return target;
}

size_t GetUgameInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetUgameInfoReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUgameInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetUgameInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUgameInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUgameInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetUgameInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetUgameInfoReq)
    MergeFrom(*source);
  }
}

void GetUgameInfoReq::MergeFrom(const GetUgameInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetUgameInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetUgameInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetUgameInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUgameInfoReq::CopyFrom(const GetUgameInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetUgameInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUgameInfoReq::IsInitialized() const {
  return true;
}

void GetUgameInfoReq::Swap(GetUgameInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUgameInfoReq::InternalSwap(GetUgameInfoReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUgameInfoReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetUgameInfoRes::InitAsDefaultInstance() {
  ::_GetUgameInfoRes_default_instance_._instance.get_mutable()->uinfo_ = const_cast< ::UserGameInfo*>(
      ::UserGameInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUgameInfoRes::kStatusFieldNumber;
const int GetUgameInfoRes::kUinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUgameInfoRes::GetUgameInfoRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetUgameInfoRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetUgameInfoRes)
}
GetUgameInfoRes::GetUgameInfoRes(const GetUgameInfoRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uinfo()) {
    uinfo_ = new ::UserGameInfo(*from.uinfo_);
  } else {
    uinfo_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:GetUgameInfoRes)
}

void GetUgameInfoRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&uinfo_)) + sizeof(status_));
}

GetUgameInfoRes::~GetUgameInfoRes() {
  // @@protoc_insertion_point(destructor:GetUgameInfoRes)
  SharedDtor();
}

void GetUgameInfoRes::SharedDtor() {
  if (this != internal_default_instance()) delete uinfo_;
}

void GetUgameInfoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUgameInfoRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUgameInfoRes& GetUgameInfoRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetUgameInfoRes();
  return *internal_default_instance();
}

GetUgameInfoRes* GetUgameInfoRes::New(::google::protobuf::Arena* arena) const {
  GetUgameInfoRes* n = new GetUgameInfoRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUgameInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GetUgameInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(uinfo_ != NULL);
    uinfo_->Clear();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUgameInfoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetUgameInfoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .UserGameInfo uinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetUgameInfoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetUgameInfoRes)
  return false;
#undef DO_
}

void GetUgameInfoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetUgameInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  // optional .UserGameInfo uinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->uinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetUgameInfoRes)
}

::google::protobuf::uint8* GetUgameInfoRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetUgameInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  // optional .UserGameInfo uinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->uinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetUgameInfoRes)
  return target;
}

size_t GetUgameInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetUgameInfoRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  // optional .UserGameInfo uinfo = 2;
  if (has_uinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUgameInfoRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetUgameInfoRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUgameInfoRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUgameInfoRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetUgameInfoRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetUgameInfoRes)
    MergeFrom(*source);
  }
}

void GetUgameInfoRes::MergeFrom(const GetUgameInfoRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetUgameInfoRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_uinfo()->::UserGameInfo::MergeFrom(from.uinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetUgameInfoRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetUgameInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUgameInfoRes::CopyFrom(const GetUgameInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetUgameInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUgameInfoRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_uinfo()) {
    if (!this->uinfo_->IsInitialized()) return false;
  }
  return true;
}

void GetUgameInfoRes::Swap(GetUgameInfoRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUgameInfoRes::InternalSwap(GetUgameInfoRes* other) {
  using std::swap;
  swap(uinfo_, other->uinfo_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUgameInfoRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvLoginBonuesReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvLoginBonuesReq::RecvLoginBonuesReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRecvLoginBonuesReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RecvLoginBonuesReq)
}
RecvLoginBonuesReq::RecvLoginBonuesReq(const RecvLoginBonuesReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RecvLoginBonuesReq)
}

void RecvLoginBonuesReq::SharedCtor() {
  _cached_size_ = 0;
}

RecvLoginBonuesReq::~RecvLoginBonuesReq() {
  // @@protoc_insertion_point(destructor:RecvLoginBonuesReq)
  SharedDtor();
}

void RecvLoginBonuesReq::SharedDtor() {
}

void RecvLoginBonuesReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvLoginBonuesReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvLoginBonuesReq& RecvLoginBonuesReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRecvLoginBonuesReq();
  return *internal_default_instance();
}

RecvLoginBonuesReq* RecvLoginBonuesReq::New(::google::protobuf::Arena* arena) const {
  RecvLoginBonuesReq* n = new RecvLoginBonuesReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvLoginBonuesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RecvLoginBonuesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecvLoginBonuesReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RecvLoginBonuesReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:RecvLoginBonuesReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RecvLoginBonuesReq)
  return false;
#undef DO_
}

void RecvLoginBonuesReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RecvLoginBonuesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RecvLoginBonuesReq)
}

::google::protobuf::uint8* RecvLoginBonuesReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RecvLoginBonuesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RecvLoginBonuesReq)
  return target;
}

size_t RecvLoginBonuesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RecvLoginBonuesReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvLoginBonuesReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RecvLoginBonuesReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvLoginBonuesReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvLoginBonuesReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RecvLoginBonuesReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RecvLoginBonuesReq)
    MergeFrom(*source);
  }
}

void RecvLoginBonuesReq::MergeFrom(const RecvLoginBonuesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RecvLoginBonuesReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RecvLoginBonuesReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RecvLoginBonuesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvLoginBonuesReq::CopyFrom(const RecvLoginBonuesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RecvLoginBonuesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvLoginBonuesReq::IsInitialized() const {
  return true;
}

void RecvLoginBonuesReq::Swap(RecvLoginBonuesReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvLoginBonuesReq::InternalSwap(RecvLoginBonuesReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvLoginBonuesReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecvLoginBonuesRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvLoginBonuesRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvLoginBonuesRes::RecvLoginBonuesRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRecvLoginBonuesRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RecvLoginBonuesRes)
}
RecvLoginBonuesRes::RecvLoginBonuesRes(const RecvLoginBonuesRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:RecvLoginBonuesRes)
}

void RecvLoginBonuesRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

RecvLoginBonuesRes::~RecvLoginBonuesRes() {
  // @@protoc_insertion_point(destructor:RecvLoginBonuesRes)
  SharedDtor();
}

void RecvLoginBonuesRes::SharedDtor() {
}

void RecvLoginBonuesRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecvLoginBonuesRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecvLoginBonuesRes& RecvLoginBonuesRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRecvLoginBonuesRes();
  return *internal_default_instance();
}

RecvLoginBonuesRes* RecvLoginBonuesRes::New(::google::protobuf::Arena* arena) const {
  RecvLoginBonuesRes* n = new RecvLoginBonuesRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecvLoginBonuesRes::Clear() {
// @@protoc_insertion_point(message_clear_start:RecvLoginBonuesRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RecvLoginBonuesRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RecvLoginBonuesRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RecvLoginBonuesRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RecvLoginBonuesRes)
  return false;
#undef DO_
}

void RecvLoginBonuesRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RecvLoginBonuesRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RecvLoginBonuesRes)
}

::google::protobuf::uint8* RecvLoginBonuesRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RecvLoginBonuesRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RecvLoginBonuesRes)
  return target;
}

size_t RecvLoginBonuesRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RecvLoginBonuesRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecvLoginBonuesRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RecvLoginBonuesRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvLoginBonuesRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecvLoginBonuesRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RecvLoginBonuesRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RecvLoginBonuesRes)
    MergeFrom(*source);
  }
}

void RecvLoginBonuesRes::MergeFrom(const RecvLoginBonuesRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RecvLoginBonuesRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void RecvLoginBonuesRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RecvLoginBonuesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvLoginBonuesRes::CopyFrom(const RecvLoginBonuesRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RecvLoginBonuesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvLoginBonuesRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RecvLoginBonuesRes::Swap(RecvLoginBonuesRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvLoginBonuesRes::InternalSwap(RecvLoginBonuesRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecvLoginBonuesRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorldChipRankInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldChipRankInfo::kUnickFieldNumber;
const int WorldChipRankInfo::kUfaceFieldNumber;
const int WorldChipRankInfo::kUsexFieldNumber;
const int WorldChipRankInfo::kUvipFieldNumber;
const int WorldChipRankInfo::kUchipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldChipRankInfo::WorldChipRankInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsWorldChipRankInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WorldChipRankInfo)
}
WorldChipRankInfo::WorldChipRankInfo(const WorldChipRankInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unick()) {
    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  ::memcpy(&uface_, &from.uface_,
    static_cast<size_t>(reinterpret_cast<char*>(&uchip_) -
    reinterpret_cast<char*>(&uface_)) + sizeof(uchip_));
  // @@protoc_insertion_point(copy_constructor:WorldChipRankInfo)
}

void WorldChipRankInfo::SharedCtor() {
  _cached_size_ = 0;
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uchip_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(uchip_));
}

WorldChipRankInfo::~WorldChipRankInfo() {
  // @@protoc_insertion_point(destructor:WorldChipRankInfo)
  SharedDtor();
}

void WorldChipRankInfo::SharedDtor() {
  unick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorldChipRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldChipRankInfo::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldChipRankInfo& WorldChipRankInfo::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsWorldChipRankInfo();
  return *internal_default_instance();
}

WorldChipRankInfo* WorldChipRankInfo::New(::google::protobuf::Arena* arena) const {
  WorldChipRankInfo* n = new WorldChipRankInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldChipRankInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:WorldChipRankInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!unick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*unick_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&uface_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uchip_) -
        reinterpret_cast<char*>(&uface_)) + sizeof(uchip_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WorldChipRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WorldChipRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string unick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unick().data(), static_cast<int>(this->unick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "WorldChipRankInfo.unick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uface();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 usex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &usex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uvip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_uvip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uvip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uchip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_uchip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uchip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WorldChipRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WorldChipRankInfo)
  return false;
#undef DO_
}

void WorldChipRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WorldChipRankInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WorldChipRankInfo.unick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unick(), output);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->uface(), output);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->usex(), output);
  }

  // required sint32 uvip = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->uvip(), output);
  }

  // required sint32 uchip = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->uchip(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WorldChipRankInfo)
}

::google::protobuf::uint8* WorldChipRankInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WorldChipRankInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "WorldChipRankInfo.unick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unick(), target);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->uface(), target);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->usex(), target);
  }

  // required sint32 uvip = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->uvip(), target);
  }

  // required sint32 uchip = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->uchip(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WorldChipRankInfo)
  return target;
}

size_t WorldChipRankInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WorldChipRankInfo)
  size_t total_size = 0;

  if (has_unick()) {
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());
  }

  if (has_uface()) {
    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());
  }

  if (has_usex()) {
    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());
  }

  if (has_uvip()) {
    // required sint32 uvip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uvip());
  }

  if (has_uchip()) {
    // required sint32 uchip = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip());
  }

  return total_size;
}
size_t WorldChipRankInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WorldChipRankInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());

    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());

    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());

    // required sint32 uvip = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uvip());

    // required sint32 uchip = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uchip());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldChipRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WorldChipRankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldChipRankInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldChipRankInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WorldChipRankInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WorldChipRankInfo)
    MergeFrom(*source);
  }
}

void WorldChipRankInfo::MergeFrom(const WorldChipRankInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WorldChipRankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_unick();
      unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
    }
    if (cached_has_bits & 0x00000002u) {
      uface_ = from.uface_;
    }
    if (cached_has_bits & 0x00000004u) {
      usex_ = from.usex_;
    }
    if (cached_has_bits & 0x00000008u) {
      uvip_ = from.uvip_;
    }
    if (cached_has_bits & 0x00000010u) {
      uchip_ = from.uchip_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WorldChipRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WorldChipRankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldChipRankInfo::CopyFrom(const WorldChipRankInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WorldChipRankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldChipRankInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void WorldChipRankInfo::Swap(WorldChipRankInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldChipRankInfo::InternalSwap(WorldChipRankInfo* other) {
  using std::swap;
  unick_.Swap(&other->unick_);
  swap(uface_, other->uface_);
  swap(usex_, other->usex_);
  swap(uvip_, other->uvip_);
  swap(uchip_, other->uchip_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldChipRankInfo::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetWorldRankUchipRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetWorldRankUchipRes::kStatusFieldNumber;
const int GetWorldRankUchipRes::kRankinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetWorldRankUchipRes::GetWorldRankUchipRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetWorldRankUchipRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetWorldRankUchipRes)
}
GetWorldRankUchipRes::GetWorldRankUchipRes(const GetWorldRankUchipRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rankinfo_(from.rankinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:GetWorldRankUchipRes)
}

void GetWorldRankUchipRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

GetWorldRankUchipRes::~GetWorldRankUchipRes() {
  // @@protoc_insertion_point(destructor:GetWorldRankUchipRes)
  SharedDtor();
}

void GetWorldRankUchipRes::SharedDtor() {
}

void GetWorldRankUchipRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetWorldRankUchipRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetWorldRankUchipRes& GetWorldRankUchipRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetWorldRankUchipRes();
  return *internal_default_instance();
}

GetWorldRankUchipRes* GetWorldRankUchipRes::New(::google::protobuf::Arena* arena) const {
  GetWorldRankUchipRes* n = new GetWorldRankUchipRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetWorldRankUchipRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GetWorldRankUchipRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankinfo_.Clear();
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetWorldRankUchipRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetWorldRankUchipRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WorldChipRankInfo rankinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rankinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetWorldRankUchipRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetWorldRankUchipRes)
  return false;
#undef DO_
}

void GetWorldRankUchipRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetWorldRankUchipRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  // repeated .WorldChipRankInfo rankinfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rankinfo(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetWorldRankUchipRes)
}

::google::protobuf::uint8* GetWorldRankUchipRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetWorldRankUchipRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  // repeated .WorldChipRankInfo rankinfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->rankinfo(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetWorldRankUchipRes)
  return target;
}

size_t GetWorldRankUchipRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetWorldRankUchipRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  // repeated .WorldChipRankInfo rankinfo = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->rankinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rankinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetWorldRankUchipRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetWorldRankUchipRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetWorldRankUchipRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetWorldRankUchipRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetWorldRankUchipRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetWorldRankUchipRes)
    MergeFrom(*source);
  }
}

void GetWorldRankUchipRes::MergeFrom(const GetWorldRankUchipRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetWorldRankUchipRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rankinfo_.MergeFrom(from.rankinfo_);
  if (from.has_status()) {
    set_status(from.status());
  }
}

void GetWorldRankUchipRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetWorldRankUchipRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetWorldRankUchipRes::CopyFrom(const GetWorldRankUchipRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetWorldRankUchipRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetWorldRankUchipRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rankinfo())) return false;
  return true;
}

void GetWorldRankUchipRes::Swap(GetWorldRankUchipRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetWorldRankUchipRes::InternalSwap(GetWorldRankUchipRes* other) {
  using std::swap;
  rankinfo_.InternalSwap(&other->rankinfo_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetWorldRankUchipRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSysMsgReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSysMsgReq::kVersionnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSysMsgReq::GetSysMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetSysMsgReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetSysMsgReq)
}
GetSysMsgReq::GetSysMsgReq(const GetSysMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  versionnum_ = from.versionnum_;
  // @@protoc_insertion_point(copy_constructor:GetSysMsgReq)
}

void GetSysMsgReq::SharedCtor() {
  _cached_size_ = 0;
  versionnum_ = 0;
}

GetSysMsgReq::~GetSysMsgReq() {
  // @@protoc_insertion_point(destructor:GetSysMsgReq)
  SharedDtor();
}

void GetSysMsgReq::SharedDtor() {
}

void GetSysMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSysMsgReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSysMsgReq& GetSysMsgReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetSysMsgReq();
  return *internal_default_instance();
}

GetSysMsgReq* GetSysMsgReq::New(::google::protobuf::Arena* arena) const {
  GetSysMsgReq* n = new GetSysMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSysMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSysMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  versionnum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSysMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetSysMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 versionnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_versionnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &versionnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetSysMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetSysMsgReq)
  return false;
#undef DO_
}

void GetSysMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetSysMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 versionnum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->versionnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetSysMsgReq)
}

::google::protobuf::uint8* GetSysMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetSysMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 versionnum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->versionnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSysMsgReq)
  return target;
}

size_t GetSysMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSysMsgReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 versionnum = 1;
  if (has_versionnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->versionnum());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSysMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSysMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSysMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSysMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSysMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSysMsgReq)
    MergeFrom(*source);
  }
}

void GetSysMsgReq::MergeFrom(const GetSysMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSysMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_versionnum()) {
    set_versionnum(from.versionnum());
  }
}

void GetSysMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSysMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSysMsgReq::CopyFrom(const GetSysMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSysMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSysMsgReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetSysMsgReq::Swap(GetSysMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSysMsgReq::InternalSwap(GetSysMsgReq* other) {
  using std::swap;
  swap(versionnum_, other->versionnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSysMsgReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetSysMsgRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSysMsgRes::kStatusFieldNumber;
const int GetSysMsgRes::kVersionnumFieldNumber;
const int GetSysMsgRes::kSystemmsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSysMsgRes::GetSysMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetSysMsgRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetSysMsgRes)
}
GetSysMsgRes::GetSysMsgRes(const GetSysMsgRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      systemmsgs_(from.systemmsgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&versionnum_) -
    reinterpret_cast<char*>(&status_)) + sizeof(versionnum_));
  // @@protoc_insertion_point(copy_constructor:GetSysMsgRes)
}

void GetSysMsgRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&versionnum_) -
      reinterpret_cast<char*>(&status_)) + sizeof(versionnum_));
}

GetSysMsgRes::~GetSysMsgRes() {
  // @@protoc_insertion_point(destructor:GetSysMsgRes)
  SharedDtor();
}

void GetSysMsgRes::SharedDtor() {
}

void GetSysMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSysMsgRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSysMsgRes& GetSysMsgRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetSysMsgRes();
  return *internal_default_instance();
}

GetSysMsgRes* GetSysMsgRes::New(::google::protobuf::Arena* arena) const {
  GetSysMsgRes* n = new GetSysMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSysMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSysMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  systemmsgs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&versionnum_) -
        reinterpret_cast<char*>(&status_)) + sizeof(versionnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSysMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetSysMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 versionnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_versionnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &versionnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string systemmsgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_systemmsgs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->systemmsgs(this->systemmsgs_size() - 1).data(),
            static_cast<int>(this->systemmsgs(this->systemmsgs_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GetSysMsgRes.systemmsgs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetSysMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetSysMsgRes)
  return false;
#undef DO_
}

void GetSysMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetSysMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  // required sint32 versionnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->versionnum(), output);
  }

  // repeated string systemmsgs = 3;
  for (int i = 0, n = this->systemmsgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->systemmsgs(i).data(), static_cast<int>(this->systemmsgs(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetSysMsgRes.systemmsgs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->systemmsgs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetSysMsgRes)
}

::google::protobuf::uint8* GetSysMsgRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetSysMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  // required sint32 versionnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->versionnum(), target);
  }

  // repeated string systemmsgs = 3;
  for (int i = 0, n = this->systemmsgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->systemmsgs(i).data(), static_cast<int>(this->systemmsgs(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GetSysMsgRes.systemmsgs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->systemmsgs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSysMsgRes)
  return target;
}

size_t GetSysMsgRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:GetSysMsgRes)
  size_t total_size = 0;

  if (has_status()) {
    // required sint32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }

  if (has_versionnum()) {
    // required sint32 versionnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->versionnum());
  }

  return total_size;
}
size_t GetSysMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSysMsgRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required sint32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());

    // required sint32 versionnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->versionnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string systemmsgs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->systemmsgs_size());
  for (int i = 0, n = this->systemmsgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->systemmsgs(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSysMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetSysMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSysMsgRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSysMsgRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetSysMsgRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetSysMsgRes)
    MergeFrom(*source);
  }
}

void GetSysMsgRes::MergeFrom(const GetSysMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetSysMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  systemmsgs_.MergeFrom(from.systemmsgs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000002u) {
      versionnum_ = from.versionnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetSysMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetSysMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSysMsgRes::CopyFrom(const GetSysMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSysMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSysMsgRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void GetSysMsgRes::Swap(GetSysMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSysMsgRes::InternalSwap(GetSysMsgRes* other) {
  using std::swap;
  systemmsgs_.InternalSwap(&other->systemmsgs_);
  swap(status_, other->status_);
  swap(versionnum_, other->versionnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSysMsgRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginLogicRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginLogicRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginLogicRes::LoginLogicRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsLoginLogicRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginLogicRes)
}
LoginLogicRes::LoginLogicRes(const LoginLogicRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:LoginLogicRes)
}

void LoginLogicRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

LoginLogicRes::~LoginLogicRes() {
  // @@protoc_insertion_point(destructor:LoginLogicRes)
  SharedDtor();
}

void LoginLogicRes::SharedDtor() {
}

void LoginLogicRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginLogicRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginLogicRes& LoginLogicRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsLoginLogicRes();
  return *internal_default_instance();
}

LoginLogicRes* LoginLogicRes::New(::google::protobuf::Arena* arena) const {
  LoginLogicRes* n = new LoginLogicRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginLogicRes::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginLogicRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginLogicRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginLogicRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginLogicRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginLogicRes)
  return false;
#undef DO_
}

void LoginLogicRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginLogicRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginLogicRes)
}

::google::protobuf::uint8* LoginLogicRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginLogicRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginLogicRes)
  return target;
}

size_t LoginLogicRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginLogicRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginLogicRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginLogicRes)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginLogicRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginLogicRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginLogicRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginLogicRes)
    MergeFrom(*source);
  }
}

void LoginLogicRes::MergeFrom(const LoginLogicRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginLogicRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void LoginLogicRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginLogicRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginLogicRes::CopyFrom(const LoginLogicRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginLogicRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginLogicRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LoginLogicRes::Swap(LoginLogicRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginLogicRes::InternalSwap(LoginLogicRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginLogicRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterZoneReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterZoneReq::kZidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterZoneReq::EnterZoneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsEnterZoneReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterZoneReq)
}
EnterZoneReq::EnterZoneReq(const EnterZoneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  zid_ = from.zid_;
  // @@protoc_insertion_point(copy_constructor:EnterZoneReq)
}

void EnterZoneReq::SharedCtor() {
  _cached_size_ = 0;
  zid_ = 0;
}

EnterZoneReq::~EnterZoneReq() {
  // @@protoc_insertion_point(destructor:EnterZoneReq)
  SharedDtor();
}

void EnterZoneReq::SharedDtor() {
}

void EnterZoneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterZoneReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterZoneReq& EnterZoneReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsEnterZoneReq();
  return *internal_default_instance();
}

EnterZoneReq* EnterZoneReq::New(::google::protobuf::Arena* arena) const {
  EnterZoneReq* n = new EnterZoneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterZoneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterZoneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  zid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterZoneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterZoneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 zid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_zid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &zid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterZoneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterZoneReq)
  return false;
#undef DO_
}

void EnterZoneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterZoneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 zid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->zid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnterZoneReq)
}

::google::protobuf::uint8* EnterZoneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterZoneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 zid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->zid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterZoneReq)
  return target;
}

size_t EnterZoneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterZoneReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 zid = 1;
  if (has_zid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->zid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterZoneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterZoneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterZoneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterZoneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterZoneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterZoneReq)
    MergeFrom(*source);
  }
}

void EnterZoneReq::MergeFrom(const EnterZoneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterZoneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_zid()) {
    set_zid(from.zid());
  }
}

void EnterZoneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterZoneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterZoneReq::CopyFrom(const EnterZoneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterZoneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterZoneReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void EnterZoneReq::Swap(EnterZoneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterZoneReq::InternalSwap(EnterZoneReq* other) {
  using std::swap;
  swap(zid_, other->zid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterZoneReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterZoneRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterZoneRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterZoneRes::EnterZoneRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsEnterZoneRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterZoneRes)
}
EnterZoneRes::EnterZoneRes(const EnterZoneRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:EnterZoneRes)
}

void EnterZoneRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

EnterZoneRes::~EnterZoneRes() {
  // @@protoc_insertion_point(destructor:EnterZoneRes)
  SharedDtor();
}

void EnterZoneRes::SharedDtor() {
}

void EnterZoneRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterZoneRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterZoneRes& EnterZoneRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsEnterZoneRes();
  return *internal_default_instance();
}

EnterZoneRes* EnterZoneRes::New(::google::protobuf::Arena* arena) const {
  EnterZoneRes* n = new EnterZoneRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterZoneRes::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterZoneRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterZoneRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterZoneRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterZoneRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterZoneRes)
  return false;
#undef DO_
}

void EnterZoneRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterZoneRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnterZoneRes)
}

::google::protobuf::uint8* EnterZoneRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterZoneRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterZoneRes)
  return target;
}

size_t EnterZoneRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterZoneRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterZoneRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterZoneRes)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterZoneRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterZoneRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterZoneRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterZoneRes)
    MergeFrom(*source);
  }
}

void EnterZoneRes::MergeFrom(const EnterZoneRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterZoneRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void EnterZoneRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterZoneRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterZoneRes::CopyFrom(const EnterZoneRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterZoneRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterZoneRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void EnterZoneRes::Swap(EnterZoneRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterZoneRes::InternalSwap(EnterZoneRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterZoneRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterMatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterMatch::kZidFieldNumber;
const int EnterMatch::kMatchidFieldNumber;
const int EnterMatch::kSeatidFieldNumber;
const int EnterMatch::kSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterMatch::EnterMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsEnterMatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterMatch)
}
EnterMatch::EnterMatch(const EnterMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&zid_, &from.zid_,
    static_cast<size_t>(reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&zid_)) + sizeof(side_));
  // @@protoc_insertion_point(copy_constructor:EnterMatch)
}

void EnterMatch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&zid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&side_) -
      reinterpret_cast<char*>(&zid_)) + sizeof(side_));
}

EnterMatch::~EnterMatch() {
  // @@protoc_insertion_point(destructor:EnterMatch)
  SharedDtor();
}

void EnterMatch::SharedDtor() {
}

void EnterMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterMatch::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterMatch& EnterMatch::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsEnterMatch();
  return *internal_default_instance();
}

EnterMatch* EnterMatch::New(::google::protobuf::Arena* arena) const {
  EnterMatch* n = new EnterMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&zid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&side_) -
        reinterpret_cast<char*>(&zid_)) + sizeof(side_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 zid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_zid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &zid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 matchid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_matchid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 seatid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 side = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterMatch)
  return false;
#undef DO_
}

void EnterMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 zid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->zid(), output);
  }

  // required sint32 matchid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->matchid(), output);
  }

  // required sint32 seatid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->seatid(), output);
  }

  // required sint32 side = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->side(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnterMatch)
}

::google::protobuf::uint8* EnterMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 zid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->zid(), target);
  }

  // required sint32 matchid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->matchid(), target);
  }

  // required sint32 seatid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->seatid(), target);
  }

  // required sint32 side = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->side(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterMatch)
  return target;
}

size_t EnterMatch::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:EnterMatch)
  size_t total_size = 0;

  if (has_zid()) {
    // required sint32 zid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->zid());
  }

  if (has_matchid()) {
    // required sint32 matchid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->matchid());
  }

  if (has_seatid()) {
    // required sint32 seatid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }

  if (has_side()) {
    // required sint32 side = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->side());
  }

  return total_size;
}
size_t EnterMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterMatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required sint32 zid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->zid());

    // required sint32 matchid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->matchid());

    // required sint32 seatid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());

    // required sint32 side = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->side());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterMatch)
    MergeFrom(*source);
  }
}

void EnterMatch::MergeFrom(const EnterMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      zid_ = from.zid_;
    }
    if (cached_has_bits & 0x00000002u) {
      matchid_ = from.matchid_;
    }
    if (cached_has_bits & 0x00000004u) {
      seatid_ = from.seatid_;
    }
    if (cached_has_bits & 0x00000008u) {
      side_ = from.side_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnterMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterMatch::CopyFrom(const EnterMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterMatch::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void EnterMatch::Swap(EnterMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterMatch::InternalSwap(EnterMatch* other) {
  using std::swap;
  swap(zid_, other->zid_);
  swap(matchid_, other->matchid_);
  swap(seatid_, other->seatid_);
  swap(side_, other->side_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterMatch::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserArrived::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserArrived::kUnickFieldNumber;
const int UserArrived::kUfaceFieldNumber;
const int UserArrived::kUsexFieldNumber;
const int UserArrived::kSeatidFieldNumber;
const int UserArrived::kSideFieldNumber;
const int UserArrived::kRoomidFieldNumber;
const int UserArrived::kIshostFieldNumber;
const int UserArrived::kIsofflineFieldNumber;
const int UserArrived::kBrandidFieldNumber;
const int UserArrived::kNumberidFieldNumber;
const int UserArrived::kAreaidFieldNumber;
const int UserArrived::kUserstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserArrived::UserArrived()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserArrived();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserArrived)
}
UserArrived::UserArrived(const UserArrived& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unick()) {
    unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
  }
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomid()) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  brandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_brandid()) {
    brandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandid_);
  }
  numberid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_numberid()) {
    numberid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.numberid_);
  }
  areaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_areaid()) {
    areaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.areaid_);
  }
  ::memcpy(&uface_, &from.uface_,
    static_cast<size_t>(reinterpret_cast<char*>(&userstate_) -
    reinterpret_cast<char*>(&uface_)) + sizeof(userstate_));
  // @@protoc_insertion_point(copy_constructor:UserArrived)
}

void UserArrived::SharedCtor() {
  _cached_size_ = 0;
  unick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numberid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  areaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userstate_) -
      reinterpret_cast<char*>(&uface_)) + sizeof(userstate_));
}

UserArrived::~UserArrived() {
  // @@protoc_insertion_point(destructor:UserArrived)
  SharedDtor();
}

void UserArrived::SharedDtor() {
  unick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  brandid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numberid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  areaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserArrived::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserArrived::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserArrived& UserArrived::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserArrived();
  return *internal_default_instance();
}

UserArrived* UserArrived::New(::google::protobuf::Arena* arena) const {
  UserArrived* n = new UserArrived;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserArrived::Clear() {
// @@protoc_insertion_point(message_clear_start:UserArrived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!unick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*unick_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!roomid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!brandid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*brandid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!numberid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*numberid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!areaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*areaid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&uface_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seatid_) -
        reinterpret_cast<char*>(&uface_)) + sizeof(seatid_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&side_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userstate_) -
        reinterpret_cast<char*>(&side_)) + sizeof(userstate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserArrived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserArrived)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string unick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unick().data(), static_cast<int>(this->unick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserArrived.unick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 uface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uface();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &uface_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 usex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_usex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &usex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 seatid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 side = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_side();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &side_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string roomid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserArrived.roomid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool ishost = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_ishost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ishost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isoffline = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_isoffline();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isoffline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string brandid = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brandid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->brandid().data(), static_cast<int>(this->brandid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserArrived.brandid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string numberid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_numberid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->numberid().data(), static_cast<int>(this->numberid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserArrived.numberid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string areaid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_areaid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->areaid().data(), static_cast<int>(this->areaid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserArrived.areaid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 userstate = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_userstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &userstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserArrived)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserArrived)
  return false;
#undef DO_
}

void UserArrived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserArrived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.unick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unick(), output);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->uface(), output);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->usex(), output);
  }

  // required sint32 seatid = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->seatid(), output);
  }

  // required sint32 side = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->side(), output);
  }

  // required string roomid = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->roomid(), output);
  }

  // required bool ishost = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->ishost(), output);
  }

  // required bool isoffline = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isoffline(), output);
  }

  // optional string brandid = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brandid().data(), static_cast<int>(this->brandid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.brandid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->brandid(), output);
  }

  // optional string numberid = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->numberid().data(), static_cast<int>(this->numberid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.numberid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->numberid(), output);
  }

  // optional string areaid = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->areaid().data(), static_cast<int>(this->areaid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.areaid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->areaid(), output);
  }

  // optional sint32 userstate = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->userstate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserArrived)
}

::google::protobuf::uint8* UserArrived::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserArrived)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string unick = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unick().data(), static_cast<int>(this->unick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.unick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unick(), target);
  }

  // required sint32 uface = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->uface(), target);
  }

  // required sint32 usex = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->usex(), target);
  }

  // required sint32 seatid = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->seatid(), target);
  }

  // required sint32 side = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->side(), target);
  }

  // required string roomid = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->roomid(), target);
  }

  // required bool ishost = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->ishost(), target);
  }

  // required bool isoffline = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->isoffline(), target);
  }

  // optional string brandid = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brandid().data(), static_cast<int>(this->brandid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.brandid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->brandid(), target);
  }

  // optional string numberid = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->numberid().data(), static_cast<int>(this->numberid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.numberid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->numberid(), target);
  }

  // optional string areaid = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->areaid().data(), static_cast<int>(this->areaid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserArrived.areaid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->areaid(), target);
  }

  // optional sint32 userstate = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->userstate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserArrived)
  return target;
}

size_t UserArrived::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UserArrived)
  size_t total_size = 0;

  if (has_unick()) {
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());
  }

  if (has_roomid()) {
    // required string roomid = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  if (has_uface()) {
    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());
  }

  if (has_usex()) {
    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());
  }

  if (has_seatid()) {
    // required sint32 seatid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }

  if (has_side()) {
    // required sint32 side = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->side());
  }

  if (has_ishost()) {
    // required bool ishost = 7;
    total_size += 1 + 1;
  }

  if (has_isoffline()) {
    // required bool isoffline = 8;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t UserArrived::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserArrived)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007e3) ^ 0x000007e3) == 0) {  // All required fields are present.
    // required string unick = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unick());

    // required string roomid = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());

    // required sint32 uface = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->uface());

    // required sint32 usex = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->usex());

    // required sint32 seatid = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());

    // required sint32 side = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->side());

    // required bool ishost = 7;
    total_size += 1 + 1;

    // required bool isoffline = 8;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 28u) {
    // optional string brandid = 9;
    if (has_brandid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->brandid());
    }

    // optional string numberid = 10;
    if (has_numberid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->numberid());
    }

    // optional string areaid = 11;
    if (has_areaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->areaid());
    }

  }
  // optional sint32 userstate = 12;
  if (has_userstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->userstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserArrived::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserArrived)
  GOOGLE_DCHECK_NE(&from, this);
  const UserArrived* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserArrived>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserArrived)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserArrived)
    MergeFrom(*source);
  }
}

void UserArrived::MergeFrom(const UserArrived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserArrived)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_unick();
      unick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unick_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_roomid();
      roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_brandid();
      brandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_numberid();
      numberid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.numberid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_areaid();
      areaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.areaid_);
    }
    if (cached_has_bits & 0x00000020u) {
      uface_ = from.uface_;
    }
    if (cached_has_bits & 0x00000040u) {
      usex_ = from.usex_;
    }
    if (cached_has_bits & 0x00000080u) {
      seatid_ = from.seatid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      side_ = from.side_;
    }
    if (cached_has_bits & 0x00000200u) {
      ishost_ = from.ishost_;
    }
    if (cached_has_bits & 0x00000400u) {
      isoffline_ = from.isoffline_;
    }
    if (cached_has_bits & 0x00000800u) {
      userstate_ = from.userstate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserArrived::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserArrived::CopyFrom(const UserArrived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserArrived::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007e3) != 0x000007e3) return false;
  return true;
}

void UserArrived::Swap(UserArrived* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserArrived::InternalSwap(UserArrived* other) {
  using std::swap;
  unick_.Swap(&other->unick_);
  roomid_.Swap(&other->roomid_);
  brandid_.Swap(&other->brandid_);
  numberid_.Swap(&other->numberid_);
  areaid_.Swap(&other->areaid_);
  swap(uface_, other->uface_);
  swap(usex_, other->usex_);
  swap(seatid_, other->seatid_);
  swap(side_, other->side_);
  swap(ishost_, other->ishost_);
  swap(isoffline_, other->isoffline_);
  swap(userstate_, other->userstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserArrived::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitMatchReq::ExitMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsExitMatchReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExitMatchReq)
}
ExitMatchReq::ExitMatchReq(const ExitMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ExitMatchReq)
}

void ExitMatchReq::SharedCtor() {
  _cached_size_ = 0;
}

ExitMatchReq::~ExitMatchReq() {
  // @@protoc_insertion_point(destructor:ExitMatchReq)
  SharedDtor();
}

void ExitMatchReq::SharedDtor() {
}

void ExitMatchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitMatchReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitMatchReq& ExitMatchReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsExitMatchReq();
  return *internal_default_instance();
}

ExitMatchReq* ExitMatchReq::New(::google::protobuf::Arena* arena) const {
  ExitMatchReq* n = new ExitMatchReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ExitMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExitMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExitMatchReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ExitMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExitMatchReq)
  return false;
#undef DO_
}

void ExitMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExitMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ExitMatchReq)
}

::google::protobuf::uint8* ExitMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExitMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExitMatchReq)
  return target;
}

size_t ExitMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExitMatchReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExitMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExitMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExitMatchReq)
    MergeFrom(*source);
  }
}

void ExitMatchReq::MergeFrom(const ExitMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExitMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExitMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExitMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitMatchReq::CopyFrom(const ExitMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExitMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitMatchReq::IsInitialized() const {
  return true;
}

void ExitMatchReq::Swap(ExitMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitMatchReq::InternalSwap(ExitMatchReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitMatchReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitMatchRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitMatchRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitMatchRes::ExitMatchRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsExitMatchRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExitMatchRes)
}
ExitMatchRes::ExitMatchRes(const ExitMatchRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:ExitMatchRes)
}

void ExitMatchRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

ExitMatchRes::~ExitMatchRes() {
  // @@protoc_insertion_point(destructor:ExitMatchRes)
  SharedDtor();
}

void ExitMatchRes::SharedDtor() {
}

void ExitMatchRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitMatchRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitMatchRes& ExitMatchRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsExitMatchRes();
  return *internal_default_instance();
}

ExitMatchRes* ExitMatchRes::New(::google::protobuf::Arena* arena) const {
  ExitMatchRes* n = new ExitMatchRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitMatchRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ExitMatchRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExitMatchRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExitMatchRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExitMatchRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExitMatchRes)
  return false;
#undef DO_
}

void ExitMatchRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExitMatchRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ExitMatchRes)
}

::google::protobuf::uint8* ExitMatchRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExitMatchRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExitMatchRes)
  return target;
}

size_t ExitMatchRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExitMatchRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitMatchRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExitMatchRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitMatchRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitMatchRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExitMatchRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExitMatchRes)
    MergeFrom(*source);
  }
}

void ExitMatchRes::MergeFrom(const ExitMatchRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExitMatchRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void ExitMatchRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExitMatchRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitMatchRes::CopyFrom(const ExitMatchRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExitMatchRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitMatchRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ExitMatchRes::Swap(ExitMatchRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitMatchRes::InternalSwap(ExitMatchRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitMatchRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserExitMatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserExitMatch::kSeatidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserExitMatch::UserExitMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserExitMatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserExitMatch)
}
UserExitMatch::UserExitMatch(const UserExitMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seatid_ = from.seatid_;
  // @@protoc_insertion_point(copy_constructor:UserExitMatch)
}

void UserExitMatch::SharedCtor() {
  _cached_size_ = 0;
  seatid_ = 0;
}

UserExitMatch::~UserExitMatch() {
  // @@protoc_insertion_point(destructor:UserExitMatch)
  SharedDtor();
}

void UserExitMatch::SharedDtor() {
}

void UserExitMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserExitMatch::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserExitMatch& UserExitMatch::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserExitMatch();
  return *internal_default_instance();
}

UserExitMatch* UserExitMatch::New(::google::protobuf::Arena* arena) const {
  UserExitMatch* n = new UserExitMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserExitMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:UserExitMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seatid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserExitMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserExitMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 seatid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserExitMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserExitMatch)
  return false;
#undef DO_
}

void UserExitMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserExitMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->seatid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserExitMatch)
}

::google::protobuf::uint8* UserExitMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserExitMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->seatid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserExitMatch)
  return target;
}

size_t UserExitMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserExitMatch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 seatid = 1;
  if (has_seatid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserExitMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserExitMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const UserExitMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserExitMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserExitMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserExitMatch)
    MergeFrom(*source);
  }
}

void UserExitMatch::MergeFrom(const UserExitMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserExitMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_seatid()) {
    set_seatid(from.seatid());
  }
}

void UserExitMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserExitMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserExitMatch::CopyFrom(const UserExitMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserExitMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserExitMatch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserExitMatch::Swap(UserExitMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserExitMatch::InternalSwap(UserExitMatch* other) {
  using std::swap;
  swap(seatid_, other->seatid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserExitMatch::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegistReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegistReq::kUnameFieldNumber;
const int UserRegistReq::kUpwdmd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegistReq::UserRegistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserRegistReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserRegistReq)
}
UserRegistReq::UserRegistReq(const UserRegistReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uname()) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  upwdmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_upwdmd5()) {
    upwdmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwdmd5_);
  }
  // @@protoc_insertion_point(copy_constructor:UserRegistReq)
}

void UserRegistReq::SharedCtor() {
  _cached_size_ = 0;
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwdmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserRegistReq::~UserRegistReq() {
  // @@protoc_insertion_point(destructor:UserRegistReq)
  SharedDtor();
}

void UserRegistReq::SharedDtor() {
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  upwdmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRegistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRegistReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegistReq& UserRegistReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserRegistReq();
  return *internal_default_instance();
}

UserRegistReq* UserRegistReq::New(::google::protobuf::Arena* arena) const {
  UserRegistReq* n = new UserRegistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRegistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UserRegistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!uname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*uname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!upwdmd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*upwdmd5_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRegistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserRegistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uname().data(), static_cast<int>(this->uname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserRegistReq.uname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string upwdmd5 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_upwdmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->upwdmd5().data(), static_cast<int>(this->upwdmd5().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserRegistReq.upwdmd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserRegistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserRegistReq)
  return false;
#undef DO_
}

void UserRegistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserRegistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserRegistReq.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uname(), output);
  }

  // required string upwdmd5 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upwdmd5().data(), static_cast<int>(this->upwdmd5().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserRegistReq.upwdmd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->upwdmd5(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserRegistReq)
}

::google::protobuf::uint8* UserRegistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserRegistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string uname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uname().data(), static_cast<int>(this->uname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserRegistReq.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uname(), target);
  }

  // required string upwdmd5 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->upwdmd5().data(), static_cast<int>(this->upwdmd5().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserRegistReq.upwdmd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->upwdmd5(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserRegistReq)
  return target;
}

size_t UserRegistReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UserRegistReq)
  size_t total_size = 0;

  if (has_uname()) {
    // required string uname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  if (has_upwdmd5()) {
    // required string upwdmd5 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upwdmd5());
  }

  return total_size;
}
size_t UserRegistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserRegistReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string uname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());

    // required string upwdmd5 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->upwdmd5());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRegistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserRegistReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegistReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserRegistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserRegistReq)
    MergeFrom(*source);
  }
}

void UserRegistReq::MergeFrom(const UserRegistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserRegistReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_uname();
      uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_upwdmd5();
      upwdmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.upwdmd5_);
    }
  }
}

void UserRegistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserRegistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegistReq::CopyFrom(const UserRegistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserRegistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegistReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserRegistReq::Swap(UserRegistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegistReq::InternalSwap(UserRegistReq* other) {
  using std::swap;
  uname_.Swap(&other->uname_);
  upwdmd5_.Swap(&other->upwdmd5_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRegistReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRegistRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRegistRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRegistRes::UserRegistRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserRegistRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserRegistRes)
}
UserRegistRes::UserRegistRes(const UserRegistRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UserRegistRes)
}

void UserRegistRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

UserRegistRes::~UserRegistRes() {
  // @@protoc_insertion_point(destructor:UserRegistRes)
  SharedDtor();
}

void UserRegistRes::SharedDtor() {
}

void UserRegistRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRegistRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRegistRes& UserRegistRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserRegistRes();
  return *internal_default_instance();
}

UserRegistRes* UserRegistRes::New(::google::protobuf::Arena* arena) const {
  UserRegistRes* n = new UserRegistRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRegistRes::Clear() {
// @@protoc_insertion_point(message_clear_start:UserRegistRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserRegistRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserRegistRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserRegistRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserRegistRes)
  return false;
#undef DO_
}

void UserRegistRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserRegistRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserRegistRes)
}

::google::protobuf::uint8* UserRegistRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserRegistRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserRegistRes)
  return target;
}

size_t UserRegistRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserRegistRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRegistRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserRegistRes)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRegistRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRegistRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserRegistRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserRegistRes)
    MergeFrom(*source);
  }
}

void UserRegistRes::MergeFrom(const UserRegistRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserRegistRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void UserRegistRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserRegistRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRegistRes::CopyFrom(const UserRegistRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserRegistRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRegistRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserRegistRes::Swap(UserRegistRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRegistRes::InternalSwap(UserRegistRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRegistRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomReq::kRoominfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomReq::CreateRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsCreateRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRoomReq)
}
CreateRoomReq::CreateRoomReq(const CreateRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roominfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roominfo()) {
    roominfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roominfo_);
  }
  // @@protoc_insertion_point(copy_constructor:CreateRoomReq)
}

void CreateRoomReq::SharedCtor() {
  _cached_size_ = 0;
  roominfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateRoomReq::~CreateRoomReq() {
  // @@protoc_insertion_point(destructor:CreateRoomReq)
  SharedDtor();
}

void CreateRoomReq::SharedDtor() {
  roominfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomReq& CreateRoomReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsCreateRoomReq();
  return *internal_default_instance();
}

CreateRoomReq* CreateRoomReq::New(::google::protobuf::Arena* arena) const {
  CreateRoomReq* n = new CreateRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!roominfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roominfo_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roominfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roominfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roominfo().data(), static_cast<int>(this->roominfo().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CreateRoomReq.roominfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRoomReq)
  return false;
#undef DO_
}

void CreateRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roominfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roominfo().data(), static_cast<int>(this->roominfo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRoomReq.roominfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roominfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRoomReq)
}

::google::protobuf::uint8* CreateRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roominfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roominfo().data(), static_cast<int>(this->roominfo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRoomReq.roominfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roominfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRoomReq)
  return target;
}

size_t CreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string roominfo = 1;
  if (has_roominfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roominfo());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRoomReq)
    MergeFrom(*source);
  }
}

void CreateRoomReq::MergeFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roominfo()) {
    set_has_roominfo();
    roominfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roominfo_);
  }
}

void CreateRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomReq::CopyFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CreateRoomReq::Swap(CreateRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomReq::InternalSwap(CreateRoomReq* other) {
  using std::swap;
  roominfo_.Swap(&other->roominfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoomRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomRes::CreateRoomRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsCreateRoomRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRoomRes)
}
CreateRoomRes::CreateRoomRes(const CreateRoomRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:CreateRoomRes)
}

void CreateRoomRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

CreateRoomRes::~CreateRoomRes() {
  // @@protoc_insertion_point(destructor:CreateRoomRes)
  SharedDtor();
}

void CreateRoomRes::SharedDtor() {
}

void CreateRoomRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomRes& CreateRoomRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsCreateRoomRes();
  return *internal_default_instance();
}

CreateRoomRes* CreateRoomRes::New(::google::protobuf::Arena* arena) const {
  CreateRoomRes* n = new CreateRoomRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoomRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRoomRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRoomRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRoomRes)
  return false;
#undef DO_
}

void CreateRoomRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRoomRes)
}

::google::protobuf::uint8* CreateRoomRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRoomRes)
  return target;
}

size_t CreateRoomRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRoomRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRoomRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRoomRes)
    MergeFrom(*source);
  }
}

void CreateRoomRes::MergeFrom(const CreateRoomRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void CreateRoomRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomRes::CopyFrom(const CreateRoomRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CreateRoomRes::Swap(CreateRoomRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomRes::InternalSwap(CreateRoomRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoinRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRoomReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRoomReq::JoinRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsJoinRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:JoinRoomReq)
}
JoinRoomReq::JoinRoomReq(const JoinRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomid()) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  // @@protoc_insertion_point(copy_constructor:JoinRoomReq)
}

void JoinRoomReq::SharedCtor() {
  _cached_size_ = 0;
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JoinRoomReq::~JoinRoomReq() {
  // @@protoc_insertion_point(destructor:JoinRoomReq)
  SharedDtor();
}

void JoinRoomReq::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRoomReq& JoinRoomReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsJoinRoomReq();
  return *internal_default_instance();
}

JoinRoomReq* JoinRoomReq::New(::google::protobuf::Arena* arena) const {
  JoinRoomReq* n = new JoinRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!roomid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roomid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JoinRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "JoinRoomReq.roomid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JoinRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JoinRoomReq)
  return false;
#undef DO_
}

void JoinRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roomid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "JoinRoomReq.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JoinRoomReq)
}

::google::protobuf::uint8* JoinRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roomid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "JoinRoomReq.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JoinRoomReq)
  return target;
}

size_t JoinRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JoinRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string roomid = 1;
  if (has_roomid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JoinRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JoinRoomReq)
    MergeFrom(*source);
  }
}

void JoinRoomReq::MergeFrom(const JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roomid()) {
    set_has_roomid();
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
}

void JoinRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomReq::CopyFrom(const JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void JoinRoomReq::Swap(JoinRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRoomReq::InternalSwap(JoinRoomReq* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRoomReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoinRoomRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRoomRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRoomRes::JoinRoomRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsJoinRoomRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:JoinRoomRes)
}
JoinRoomRes::JoinRoomRes(const JoinRoomRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:JoinRoomRes)
}

void JoinRoomRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

JoinRoomRes::~JoinRoomRes() {
  // @@protoc_insertion_point(destructor:JoinRoomRes)
  SharedDtor();
}

void JoinRoomRes::SharedDtor() {
}

void JoinRoomRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRoomRes& JoinRoomRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsJoinRoomRes();
  return *internal_default_instance();
}

JoinRoomRes* JoinRoomRes::New(::google::protobuf::Arena* arena) const {
  JoinRoomRes* n = new JoinRoomRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRoomRes::Clear() {
// @@protoc_insertion_point(message_clear_start:JoinRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinRoomRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JoinRoomRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JoinRoomRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JoinRoomRes)
  return false;
#undef DO_
}

void JoinRoomRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JoinRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JoinRoomRes)
}

::google::protobuf::uint8* JoinRoomRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:JoinRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JoinRoomRes)
  return target;
}

size_t JoinRoomRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JoinRoomRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JoinRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRoomRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRoomRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JoinRoomRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JoinRoomRes)
    MergeFrom(*source);
  }
}

void JoinRoomRes::MergeFrom(const JoinRoomRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JoinRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void JoinRoomRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JoinRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomRes::CopyFrom(const JoinRoomRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JoinRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void JoinRoomRes::Swap(JoinRoomRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRoomRes::InternalSwap(JoinRoomRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRoomRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitRoomReq::ExitRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsExitRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExitRoomReq)
}
ExitRoomReq::ExitRoomReq(const ExitRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ExitRoomReq)
}

void ExitRoomReq::SharedCtor() {
  _cached_size_ = 0;
}

ExitRoomReq::~ExitRoomReq() {
  // @@protoc_insertion_point(destructor:ExitRoomReq)
  SharedDtor();
}

void ExitRoomReq::SharedDtor() {
}

void ExitRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitRoomReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitRoomReq& ExitRoomReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsExitRoomReq();
  return *internal_default_instance();
}

ExitRoomReq* ExitRoomReq::New(::google::protobuf::Arena* arena) const {
  ExitRoomReq* n = new ExitRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ExitRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExitRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExitRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ExitRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExitRoomReq)
  return false;
#undef DO_
}

void ExitRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExitRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ExitRoomReq)
}

::google::protobuf::uint8* ExitRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExitRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExitRoomReq)
  return target;
}

size_t ExitRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExitRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExitRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExitRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExitRoomReq)
    MergeFrom(*source);
  }
}

void ExitRoomReq::MergeFrom(const ExitRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExitRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExitRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExitRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitRoomReq::CopyFrom(const ExitRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExitRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitRoomReq::IsInitialized() const {
  return true;
}

void ExitRoomReq::Swap(ExitRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitRoomReq::InternalSwap(ExitRoomReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitRoomReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitRoomRes::InitAsDefaultInstance() {
  ::_ExitRoomRes_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::UserArrived*>(
      ::UserArrived::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitRoomRes::kStatusFieldNumber;
const int ExitRoomRes::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitRoomRes::ExitRoomRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsExitRoomRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExitRoomRes)
}
ExitRoomRes::ExitRoomRes(const ExitRoomRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userinfo()) {
    userinfo_ = new ::UserArrived(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:ExitRoomRes)
}

void ExitRoomRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&userinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&userinfo_)) + sizeof(status_));
}

ExitRoomRes::~ExitRoomRes() {
  // @@protoc_insertion_point(destructor:ExitRoomRes)
  SharedDtor();
}

void ExitRoomRes::SharedDtor() {
  if (this != internal_default_instance()) delete userinfo_;
}

void ExitRoomRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitRoomRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitRoomRes& ExitRoomRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsExitRoomRes();
  return *internal_default_instance();
}

ExitRoomRes* ExitRoomRes::New(::google::protobuf::Arena* arena) const {
  ExitRoomRes* n = new ExitRoomRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitRoomRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ExitRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(userinfo_ != NULL);
    userinfo_->Clear();
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExitRoomRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExitRoomRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .UserArrived userinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExitRoomRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExitRoomRes)
  return false;
#undef DO_
}

void ExitRoomRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExitRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  // optional .UserArrived userinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->userinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ExitRoomRes)
}

::google::protobuf::uint8* ExitRoomRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ExitRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  // optional .UserArrived userinfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->userinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExitRoomRes)
  return target;
}

size_t ExitRoomRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ExitRoomRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  // optional .UserArrived userinfo = 2;
  if (has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitRoomRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExitRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitRoomRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitRoomRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExitRoomRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExitRoomRes)
    MergeFrom(*source);
  }
}

void ExitRoomRes::MergeFrom(const ExitRoomRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExitRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_userinfo()->::UserArrived::MergeFrom(from.userinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExitRoomRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExitRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitRoomRes::CopyFrom(const ExitRoomRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExitRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitRoomRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_userinfo()) {
    if (!this->userinfo_->IsInitialized()) return false;
  }
  return true;
}

void ExitRoomRes::Swap(ExitRoomRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitRoomRes::InternalSwap(ExitRoomRes* other) {
  using std::swap;
  swap(userinfo_, other->userinfo_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitRoomRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DessolveReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DessolveReq::DessolveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsDessolveReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DessolveReq)
}
DessolveReq::DessolveReq(const DessolveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DessolveReq)
}

void DessolveReq::SharedCtor() {
  _cached_size_ = 0;
}

DessolveReq::~DessolveReq() {
  // @@protoc_insertion_point(destructor:DessolveReq)
  SharedDtor();
}

void DessolveReq::SharedDtor() {
}

void DessolveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DessolveReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DessolveReq& DessolveReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsDessolveReq();
  return *internal_default_instance();
}

DessolveReq* DessolveReq::New(::google::protobuf::Arena* arena) const {
  DessolveReq* n = new DessolveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DessolveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:DessolveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DessolveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DessolveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:DessolveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DessolveReq)
  return false;
#undef DO_
}

void DessolveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DessolveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DessolveReq)
}

::google::protobuf::uint8* DessolveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DessolveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DessolveReq)
  return target;
}

size_t DessolveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DessolveReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DessolveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DessolveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DessolveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DessolveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DessolveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DessolveReq)
    MergeFrom(*source);
  }
}

void DessolveReq::MergeFrom(const DessolveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DessolveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DessolveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DessolveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DessolveReq::CopyFrom(const DessolveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DessolveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DessolveReq::IsInitialized() const {
  return true;
}

void DessolveReq::Swap(DessolveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DessolveReq::InternalSwap(DessolveReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DessolveReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DessolveRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DessolveRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DessolveRes::DessolveRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsDessolveRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DessolveRes)
}
DessolveRes::DessolveRes(const DessolveRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:DessolveRes)
}

void DessolveRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

DessolveRes::~DessolveRes() {
  // @@protoc_insertion_point(destructor:DessolveRes)
  SharedDtor();
}

void DessolveRes::SharedDtor() {
}

void DessolveRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DessolveRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DessolveRes& DessolveRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsDessolveRes();
  return *internal_default_instance();
}

DessolveRes* DessolveRes::New(::google::protobuf::Arena* arena) const {
  DessolveRes* n = new DessolveRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DessolveRes::Clear() {
// @@protoc_insertion_point(message_clear_start:DessolveRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DessolveRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DessolveRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DessolveRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DessolveRes)
  return false;
#undef DO_
}

void DessolveRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DessolveRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DessolveRes)
}

::google::protobuf::uint8* DessolveRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DessolveRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DessolveRes)
  return target;
}

size_t DessolveRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DessolveRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DessolveRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DessolveRes)
  GOOGLE_DCHECK_NE(&from, this);
  const DessolveRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DessolveRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DessolveRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DessolveRes)
    MergeFrom(*source);
  }
}

void DessolveRes::MergeFrom(const DessolveRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DessolveRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void DessolveRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DessolveRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DessolveRes::CopyFrom(const DessolveRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DessolveRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DessolveRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DessolveRes::Swap(DessolveRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DessolveRes::InternalSwap(DessolveRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DessolveRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetCreateStatusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCreateStatusReq::GetCreateStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetCreateStatusReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetCreateStatusReq)
}
GetCreateStatusReq::GetCreateStatusReq(const GetCreateStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetCreateStatusReq)
}

void GetCreateStatusReq::SharedCtor() {
  _cached_size_ = 0;
}

GetCreateStatusReq::~GetCreateStatusReq() {
  // @@protoc_insertion_point(destructor:GetCreateStatusReq)
  SharedDtor();
}

void GetCreateStatusReq::SharedDtor() {
}

void GetCreateStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCreateStatusReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCreateStatusReq& GetCreateStatusReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetCreateStatusReq();
  return *internal_default_instance();
}

GetCreateStatusReq* GetCreateStatusReq::New(::google::protobuf::Arena* arena) const {
  GetCreateStatusReq* n = new GetCreateStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCreateStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetCreateStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetCreateStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetCreateStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:GetCreateStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetCreateStatusReq)
  return false;
#undef DO_
}

void GetCreateStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetCreateStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetCreateStatusReq)
}

::google::protobuf::uint8* GetCreateStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetCreateStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetCreateStatusReq)
  return target;
}

size_t GetCreateStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetCreateStatusReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCreateStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetCreateStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCreateStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCreateStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetCreateStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetCreateStatusReq)
    MergeFrom(*source);
  }
}

void GetCreateStatusReq::MergeFrom(const GetCreateStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetCreateStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetCreateStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetCreateStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCreateStatusReq::CopyFrom(const GetCreateStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetCreateStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCreateStatusReq::IsInitialized() const {
  return true;
}

void GetCreateStatusReq::Swap(GetCreateStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCreateStatusReq::InternalSwap(GetCreateStatusReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCreateStatusReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetCreateStatusRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCreateStatusRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCreateStatusRes::GetCreateStatusRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGetCreateStatusRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetCreateStatusRes)
}
GetCreateStatusRes::GetCreateStatusRes(const GetCreateStatusRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:GetCreateStatusRes)
}

void GetCreateStatusRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

GetCreateStatusRes::~GetCreateStatusRes() {
  // @@protoc_insertion_point(destructor:GetCreateStatusRes)
  SharedDtor();
}

void GetCreateStatusRes::SharedDtor() {
}

void GetCreateStatusRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCreateStatusRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCreateStatusRes& GetCreateStatusRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGetCreateStatusRes();
  return *internal_default_instance();
}

GetCreateStatusRes* GetCreateStatusRes::New(::google::protobuf::Arena* arena) const {
  GetCreateStatusRes* n = new GetCreateStatusRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCreateStatusRes::Clear() {
// @@protoc_insertion_point(message_clear_start:GetCreateStatusRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetCreateStatusRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetCreateStatusRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetCreateStatusRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetCreateStatusRes)
  return false;
#undef DO_
}

void GetCreateStatusRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetCreateStatusRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetCreateStatusRes)
}

::google::protobuf::uint8* GetCreateStatusRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetCreateStatusRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetCreateStatusRes)
  return target;
}

size_t GetCreateStatusRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetCreateStatusRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCreateStatusRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetCreateStatusRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCreateStatusRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCreateStatusRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetCreateStatusRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetCreateStatusRes)
    MergeFrom(*source);
  }
}

void GetCreateStatusRes::MergeFrom(const GetCreateStatusRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetCreateStatusRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void GetCreateStatusRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetCreateStatusRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCreateStatusRes::CopyFrom(const GetCreateStatusRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetCreateStatusRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCreateStatusRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetCreateStatusRes::Swap(GetCreateStatusRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCreateStatusRes::InternalSwap(GetCreateStatusRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCreateStatusRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BackRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackRoomReq::BackRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsBackRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BackRoomReq)
}
BackRoomReq::BackRoomReq(const BackRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BackRoomReq)
}

void BackRoomReq::SharedCtor() {
  _cached_size_ = 0;
}

BackRoomReq::~BackRoomReq() {
  // @@protoc_insertion_point(destructor:BackRoomReq)
  SharedDtor();
}

void BackRoomReq::SharedDtor() {
}

void BackRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackRoomReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackRoomReq& BackRoomReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsBackRoomReq();
  return *internal_default_instance();
}

BackRoomReq* BackRoomReq::New(::google::protobuf::Arena* arena) const {
  BackRoomReq* n = new BackRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BackRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BackRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BackRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:BackRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BackRoomReq)
  return false;
#undef DO_
}

void BackRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BackRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BackRoomReq)
}

::google::protobuf::uint8* BackRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BackRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BackRoomReq)
  return target;
}

size_t BackRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BackRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BackRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BackRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BackRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BackRoomReq)
    MergeFrom(*source);
  }
}

void BackRoomReq::MergeFrom(const BackRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BackRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BackRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BackRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackRoomReq::CopyFrom(const BackRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BackRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackRoomReq::IsInitialized() const {
  return true;
}

void BackRoomReq::Swap(BackRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackRoomReq::InternalSwap(BackRoomReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackRoomReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BackRoomRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackRoomRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackRoomRes::BackRoomRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsBackRoomRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BackRoomRes)
}
BackRoomRes::BackRoomRes(const BackRoomRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:BackRoomRes)
}

void BackRoomRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

BackRoomRes::~BackRoomRes() {
  // @@protoc_insertion_point(destructor:BackRoomRes)
  SharedDtor();
}

void BackRoomRes::SharedDtor() {
}

void BackRoomRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackRoomRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackRoomRes& BackRoomRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsBackRoomRes();
  return *internal_default_instance();
}

BackRoomRes* BackRoomRes::New(::google::protobuf::Arena* arena) const {
  BackRoomRes* n = new BackRoomRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackRoomRes::Clear() {
// @@protoc_insertion_point(message_clear_start:BackRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BackRoomRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BackRoomRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BackRoomRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BackRoomRes)
  return false;
#undef DO_
}

void BackRoomRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BackRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BackRoomRes)
}

::google::protobuf::uint8* BackRoomRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BackRoomRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BackRoomRes)
  return target;
}

size_t BackRoomRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BackRoomRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackRoomRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BackRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  const BackRoomRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackRoomRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BackRoomRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BackRoomRes)
    MergeFrom(*source);
  }
}

void BackRoomRes::MergeFrom(const BackRoomRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BackRoomRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void BackRoomRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BackRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackRoomRes::CopyFrom(const BackRoomRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BackRoomRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackRoomRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void BackRoomRes::Swap(BackRoomRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackRoomRes::InternalSwap(BackRoomRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackRoomRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserOffLine::InitAsDefaultInstance() {
  ::_UserOffLine_default_instance_._instance.get_mutable()->userinfo_ = const_cast< ::UserArrived*>(
      ::UserArrived::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserOffLine::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserOffLine::UserOffLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserOffLine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserOffLine)
}
UserOffLine::UserOffLine(const UserOffLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_userinfo()) {
    userinfo_ = new ::UserArrived(*from.userinfo_);
  } else {
    userinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:UserOffLine)
}

void UserOffLine::SharedCtor() {
  _cached_size_ = 0;
  userinfo_ = NULL;
}

UserOffLine::~UserOffLine() {
  // @@protoc_insertion_point(destructor:UserOffLine)
  SharedDtor();
}

void UserOffLine::SharedDtor() {
  if (this != internal_default_instance()) delete userinfo_;
}

void UserOffLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserOffLine::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserOffLine& UserOffLine::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserOffLine();
  return *internal_default_instance();
}

UserOffLine* UserOffLine::New(::google::protobuf::Arena* arena) const {
  UserOffLine* n = new UserOffLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserOffLine::Clear() {
// @@protoc_insertion_point(message_clear_start:UserOffLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(userinfo_ != NULL);
    userinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserOffLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserOffLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .UserArrived userinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserOffLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserOffLine)
  return false;
#undef DO_
}

void UserOffLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserOffLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .UserArrived userinfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->userinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserOffLine)
}

::google::protobuf::uint8* UserOffLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserOffLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .UserArrived userinfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->userinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserOffLine)
  return target;
}

size_t UserOffLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserOffLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .UserArrived userinfo = 1;
  if (has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->userinfo_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserOffLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserOffLine)
  GOOGLE_DCHECK_NE(&from, this);
  const UserOffLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserOffLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserOffLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserOffLine)
    MergeFrom(*source);
  }
}

void UserOffLine::MergeFrom(const UserOffLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserOffLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userinfo()) {
    mutable_userinfo()->::UserArrived::MergeFrom(from.userinfo());
  }
}

void UserOffLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserOffLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserOffLine::CopyFrom(const UserOffLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserOffLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserOffLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_userinfo()) {
    if (!this->userinfo_->IsInitialized()) return false;
  }
  return true;
}

void UserOffLine::Swap(UserOffLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserOffLine::InternalSwap(UserOffLine* other) {
  using std::swap;
  swap(userinfo_, other->userinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserOffLine::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserReconnectedReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserReconnectedReq::UserReconnectedReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserReconnectedReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserReconnectedReq)
}
UserReconnectedReq::UserReconnectedReq(const UserReconnectedReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UserReconnectedReq)
}

void UserReconnectedReq::SharedCtor() {
  _cached_size_ = 0;
}

UserReconnectedReq::~UserReconnectedReq() {
  // @@protoc_insertion_point(destructor:UserReconnectedReq)
  SharedDtor();
}

void UserReconnectedReq::SharedDtor() {
}

void UserReconnectedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserReconnectedReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserReconnectedReq& UserReconnectedReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserReconnectedReq();
  return *internal_default_instance();
}

UserReconnectedReq* UserReconnectedReq::New(::google::protobuf::Arena* arena) const {
  UserReconnectedReq* n = new UserReconnectedReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserReconnectedReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UserReconnectedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserReconnectedReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserReconnectedReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:UserReconnectedReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserReconnectedReq)
  return false;
#undef DO_
}

void UserReconnectedReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserReconnectedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserReconnectedReq)
}

::google::protobuf::uint8* UserReconnectedReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserReconnectedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserReconnectedReq)
  return target;
}

size_t UserReconnectedReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserReconnectedReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserReconnectedReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserReconnectedReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UserReconnectedReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserReconnectedReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserReconnectedReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserReconnectedReq)
    MergeFrom(*source);
  }
}

void UserReconnectedReq::MergeFrom(const UserReconnectedReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserReconnectedReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UserReconnectedReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserReconnectedReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserReconnectedReq::CopyFrom(const UserReconnectedReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserReconnectedReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserReconnectedReq::IsInitialized() const {
  return true;
}

void UserReconnectedReq::Swap(UserReconnectedReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserReconnectedReq::InternalSwap(UserReconnectedReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserReconnectedReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserReconnectedRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserReconnectedRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserReconnectedRes::UserReconnectedRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserReconnectedRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserReconnectedRes)
}
UserReconnectedRes::UserReconnectedRes(const UserReconnectedRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:UserReconnectedRes)
}

void UserReconnectedRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

UserReconnectedRes::~UserReconnectedRes() {
  // @@protoc_insertion_point(destructor:UserReconnectedRes)
  SharedDtor();
}

void UserReconnectedRes::SharedDtor() {
}

void UserReconnectedRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserReconnectedRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserReconnectedRes& UserReconnectedRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserReconnectedRes();
  return *internal_default_instance();
}

UserReconnectedRes* UserReconnectedRes::New(::google::protobuf::Arena* arena) const {
  UserReconnectedRes* n = new UserReconnectedRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserReconnectedRes::Clear() {
// @@protoc_insertion_point(message_clear_start:UserReconnectedRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserReconnectedRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserReconnectedRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserReconnectedRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserReconnectedRes)
  return false;
#undef DO_
}

void UserReconnectedRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserReconnectedRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserReconnectedRes)
}

::google::protobuf::uint8* UserReconnectedRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserReconnectedRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserReconnectedRes)
  return target;
}

size_t UserReconnectedRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserReconnectedRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserReconnectedRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserReconnectedRes)
  GOOGLE_DCHECK_NE(&from, this);
  const UserReconnectedRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserReconnectedRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserReconnectedRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserReconnectedRes)
    MergeFrom(*source);
  }
}

void UserReconnectedRes::MergeFrom(const UserReconnectedRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserReconnectedRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void UserReconnectedRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserReconnectedRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserReconnectedRes::CopyFrom(const UserReconnectedRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserReconnectedRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserReconnectedRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserReconnectedRes::Swap(UserReconnectedRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserReconnectedRes::InternalSwap(UserReconnectedRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserReconnectedRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartBeatReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeatReq::HeartBeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsHeartBeatReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeartBeatReq)
}
HeartBeatReq::HeartBeatReq(const HeartBeatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HeartBeatReq)
}

void HeartBeatReq::SharedCtor() {
  _cached_size_ = 0;
}

HeartBeatReq::~HeartBeatReq() {
  // @@protoc_insertion_point(destructor:HeartBeatReq)
  SharedDtor();
}

void HeartBeatReq::SharedDtor() {
}

void HeartBeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartBeatReq& HeartBeatReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsHeartBeatReq();
  return *internal_default_instance();
}

HeartBeatReq* HeartBeatReq::New(::google::protobuf::Arena* arena) const {
  HeartBeatReq* n = new HeartBeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartBeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:HeartBeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeartBeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeartBeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HeartBeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeartBeatReq)
  return false;
#undef DO_
}

void HeartBeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeartBeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeartBeatReq)
}

::google::protobuf::uint8* HeartBeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HeartBeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeartBeatReq)
  return target;
}

size_t HeartBeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HeartBeatReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartBeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HeartBeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HeartBeatReq)
    MergeFrom(*source);
  }
}

void HeartBeatReq::MergeFrom(const HeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartBeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatReq::CopyFrom(const HeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatReq::IsInitialized() const {
  return true;
}

void HeartBeatReq::Swap(HeartBeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatReq::InternalSwap(HeartBeatReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeatReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartBeatRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartBeatRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeatRes::HeartBeatRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsHeartBeatRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HeartBeatRes)
}
HeartBeatRes::HeartBeatRes(const HeartBeatRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:HeartBeatRes)
}

void HeartBeatRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

HeartBeatRes::~HeartBeatRes() {
  // @@protoc_insertion_point(destructor:HeartBeatRes)
  SharedDtor();
}

void HeartBeatRes::SharedDtor() {
}

void HeartBeatRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartBeatRes& HeartBeatRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsHeartBeatRes();
  return *internal_default_instance();
}

HeartBeatRes* HeartBeatRes::New(::google::protobuf::Arena* arena) const {
  HeartBeatRes* n = new HeartBeatRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartBeatRes::Clear() {
// @@protoc_insertion_point(message_clear_start:HeartBeatRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeartBeatRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HeartBeatRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HeartBeatRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HeartBeatRes)
  return false;
#undef DO_
}

void HeartBeatRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HeartBeatRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HeartBeatRes)
}

::google::protobuf::uint8* HeartBeatRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HeartBeatRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HeartBeatRes)
  return target;
}

size_t HeartBeatRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HeartBeatRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HeartBeatRes)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeatRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartBeatRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HeartBeatRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HeartBeatRes)
    MergeFrom(*source);
  }
}

void HeartBeatRes::MergeFrom(const HeartBeatRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HeartBeatRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void HeartBeatRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HeartBeatRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatRes::CopyFrom(const HeartBeatRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HeartBeatRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatRes::IsInitialized() const {
  return true;
}

void HeartBeatRes::Swap(HeartBeatRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatRes::InternalSwap(HeartBeatRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeatRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserReadyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserReadyReq::kReadystateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserReadyReq::UserReadyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserReadyReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserReadyReq)
}
UserReadyReq::UserReadyReq(const UserReadyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  readystate_ = from.readystate_;
  // @@protoc_insertion_point(copy_constructor:UserReadyReq)
}

void UserReadyReq::SharedCtor() {
  _cached_size_ = 0;
  readystate_ = 0;
}

UserReadyReq::~UserReadyReq() {
  // @@protoc_insertion_point(destructor:UserReadyReq)
  SharedDtor();
}

void UserReadyReq::SharedDtor() {
}

void UserReadyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserReadyReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserReadyReq& UserReadyReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserReadyReq();
  return *internal_default_instance();
}

UserReadyReq* UserReadyReq::New(::google::protobuf::Arena* arena) const {
  UserReadyReq* n = new UserReadyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserReadyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UserReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  readystate_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserReadyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserReadyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 readystate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_readystate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &readystate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserReadyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserReadyReq)
  return false;
#undef DO_
}

void UserReadyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 readystate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->readystate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserReadyReq)
}

::google::protobuf::uint8* UserReadyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 readystate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->readystate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserReadyReq)
  return target;
}

size_t UserReadyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserReadyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 readystate = 1;
  if (has_readystate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->readystate());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserReadyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserReadyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UserReadyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserReadyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserReadyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserReadyReq)
    MergeFrom(*source);
  }
}

void UserReadyReq::MergeFrom(const UserReadyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserReadyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_readystate()) {
    set_readystate(from.readystate());
  }
}

void UserReadyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserReadyReq::CopyFrom(const UserReadyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserReadyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UserReadyReq::Swap(UserReadyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserReadyReq::InternalSwap(UserReadyReq* other) {
  using std::swap;
  swap(readystate_, other->readystate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserReadyReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserReadyRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserReadyRes::kStatusFieldNumber;
const int UserReadyRes::kSeatidFieldNumber;
const int UserReadyRes::kBrandidFieldNumber;
const int UserReadyRes::kNumberidFieldNumber;
const int UserReadyRes::kUserstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserReadyRes::UserReadyRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserReadyRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserReadyRes)
}
UserReadyRes::UserReadyRes(const UserReadyRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  brandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_brandid()) {
    brandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandid_);
  }
  numberid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_numberid()) {
    numberid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.numberid_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&userstate_) -
    reinterpret_cast<char*>(&status_)) + sizeof(userstate_));
  // @@protoc_insertion_point(copy_constructor:UserReadyRes)
}

void UserReadyRes::SharedCtor() {
  _cached_size_ = 0;
  brandid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numberid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userstate_) -
      reinterpret_cast<char*>(&status_)) + sizeof(userstate_));
}

UserReadyRes::~UserReadyRes() {
  // @@protoc_insertion_point(destructor:UserReadyRes)
  SharedDtor();
}

void UserReadyRes::SharedDtor() {
  brandid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  numberid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserReadyRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserReadyRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserReadyRes& UserReadyRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserReadyRes();
  return *internal_default_instance();
}

UserReadyRes* UserReadyRes::New(::google::protobuf::Arena* arena) const {
  UserReadyRes* n = new UserReadyRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserReadyRes::Clear() {
// @@protoc_insertion_point(message_clear_start:UserReadyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!brandid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*brandid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!numberid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*numberid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userstate_) -
        reinterpret_cast<char*>(&status_)) + sizeof(userstate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserReadyRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserReadyRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 seatid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string brandid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brandid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->brandid().data(), static_cast<int>(this->brandid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserReadyRes.brandid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string numberid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_numberid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->numberid().data(), static_cast<int>(this->numberid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserReadyRes.numberid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 userstate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_userstate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &userstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserReadyRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserReadyRes)
  return false;
#undef DO_
}

void UserReadyRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserReadyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  // optional sint32 seatid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->seatid(), output);
  }

  // optional string brandid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brandid().data(), static_cast<int>(this->brandid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserReadyRes.brandid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->brandid(), output);
  }

  // optional string numberid = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->numberid().data(), static_cast<int>(this->numberid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserReadyRes.numberid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->numberid(), output);
  }

  // optional sint32 userstate = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->userstate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserReadyRes)
}

::google::protobuf::uint8* UserReadyRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserReadyRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  // optional sint32 seatid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->seatid(), target);
  }

  // optional string brandid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->brandid().data(), static_cast<int>(this->brandid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserReadyRes.brandid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->brandid(), target);
  }

  // optional string numberid = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->numberid().data(), static_cast<int>(this->numberid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserReadyRes.numberid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->numberid(), target);
  }

  // optional sint32 userstate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->userstate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserReadyRes)
  return target;
}

size_t UserReadyRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserReadyRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string brandid = 3;
    if (has_brandid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->brandid());
    }

    // optional string numberid = 4;
    if (has_numberid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->numberid());
    }

  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional sint32 seatid = 2;
    if (has_seatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->seatid());
    }

    // optional sint32 userstate = 5;
    if (has_userstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->userstate());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserReadyRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserReadyRes)
  GOOGLE_DCHECK_NE(&from, this);
  const UserReadyRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserReadyRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserReadyRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserReadyRes)
    MergeFrom(*source);
  }
}

void UserReadyRes::MergeFrom(const UserReadyRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserReadyRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_brandid();
      brandid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brandid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_numberid();
      numberid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.numberid_);
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000008u) {
      seatid_ = from.seatid_;
    }
    if (cached_has_bits & 0x00000010u) {
      userstate_ = from.userstate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserReadyRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserReadyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserReadyRes::CopyFrom(const UserReadyRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserReadyRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserReadyRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void UserReadyRes::Swap(UserReadyRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserReadyRes::InternalSwap(UserReadyRes* other) {
  using std::swap;
  brandid_.Swap(&other->brandid_);
  numberid_.Swap(&other->numberid_);
  swap(status_, other->status_);
  swap(seatid_, other->seatid_);
  swap(userstate_, other->userstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserReadyRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameStart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStart::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStart::GameStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGameStart();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameStart)
}
GameStart::GameStart(const GameStart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:GameStart)
}

void GameStart::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

GameStart::~GameStart() {
  // @@protoc_insertion_point(destructor:GameStart)
  SharedDtor();
}

void GameStart::SharedDtor() {
}

void GameStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameStart::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameStart& GameStart::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGameStart();
  return *internal_default_instance();
}

GameStart* GameStart::New(::google::protobuf::Arena* arena) const {
  GameStart* n = new GameStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameStart::Clear() {
// @@protoc_insertion_point(message_clear_start:GameStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameStart)
  return false;
#undef DO_
}

void GameStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameStart)
}

::google::protobuf::uint8* GameStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameStart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameStart)
  return target;
}

size_t GameStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameStart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameStart)
  GOOGLE_DCHECK_NE(&from, this);
  const GameStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameStart)
    MergeFrom(*source);
  }
}

void GameStart::MergeFrom(const GameStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameStart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void GameStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStart::CopyFrom(const GameStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameStart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GameStart::Swap(GameStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameStart::InternalSwap(GameStart* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameStart::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UdpTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UdpTest::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UdpTest::UdpTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUdpTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UdpTest)
}
UdpTest::UdpTest(const UdpTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:UdpTest)
}

void UdpTest::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UdpTest::~UdpTest() {
  // @@protoc_insertion_point(destructor:UdpTest)
  SharedDtor();
}

void UdpTest::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UdpTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UdpTest::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UdpTest& UdpTest::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUdpTest();
  return *internal_default_instance();
}

UdpTest* UdpTest::New(::google::protobuf::Arena* arena) const {
  UdpTest* n = new UdpTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UdpTest::Clear() {
// @@protoc_insertion_point(message_clear_start:UdpTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UdpTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UdpTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UdpTest.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UdpTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UdpTest)
  return false;
#undef DO_
}

void UdpTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UdpTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UdpTest.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UdpTest)
}

::google::protobuf::uint8* UdpTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UdpTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UdpTest.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UdpTest)
  return target;
}

size_t UdpTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UdpTest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string content = 1;
  if (has_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UdpTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UdpTest)
  GOOGLE_DCHECK_NE(&from, this);
  const UdpTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UdpTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UdpTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UdpTest)
    MergeFrom(*source);
  }
}

void UdpTest::MergeFrom(const UdpTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UdpTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_content()) {
    set_has_content();
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void UdpTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UdpTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UdpTest::CopyFrom(const UdpTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UdpTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UdpTest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UdpTest::Swap(UdpTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UdpTest::InternalSwap(UdpTest* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UdpTest::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginLogicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginLogicReq::LoginLogicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsLoginLogicReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginLogicReq)
}
LoginLogicReq::LoginLogicReq(const LoginLogicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LoginLogicReq)
}

void LoginLogicReq::SharedCtor() {
  _cached_size_ = 0;
}

LoginLogicReq::~LoginLogicReq() {
  // @@protoc_insertion_point(destructor:LoginLogicReq)
  SharedDtor();
}

void LoginLogicReq::SharedDtor() {
}

void LoginLogicReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginLogicReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginLogicReq& LoginLogicReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsLoginLogicReq();
  return *internal_default_instance();
}

LoginLogicReq* LoginLogicReq::New(::google::protobuf::Arena* arena) const {
  LoginLogicReq* n = new LoginLogicReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginLogicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginLogicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginLogicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginLogicReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:LoginLogicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginLogicReq)
  return false;
#undef DO_
}

void LoginLogicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginLogicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginLogicReq)
}

::google::protobuf::uint8* LoginLogicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginLogicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginLogicReq)
  return target;
}

size_t LoginLogicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginLogicReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginLogicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginLogicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginLogicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginLogicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginLogicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginLogicReq)
    MergeFrom(*source);
  }
}

void LoginLogicReq::MergeFrom(const LoginLogicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginLogicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LoginLogicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginLogicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginLogicReq::CopyFrom(const LoginLogicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginLogicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginLogicReq::IsInitialized() const {
  return true;
}

void LoginLogicReq::Swap(LoginLogicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginLogicReq::InternalSwap(LoginLogicReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginLogicReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionEvent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionEvent::kSeatidFieldNumber;
const int OptionEvent::kOpttypeFieldNumber;
const int OptionEvent::kXFieldNumber;
const int OptionEvent::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionEvent::OptionEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsOptionEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OptionEvent)
}
OptionEvent::OptionEvent(const OptionEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seatid_, &from.seatid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&seatid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:OptionEvent)
}

void OptionEvent::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seatid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&seatid_)) + sizeof(y_));
}

OptionEvent::~OptionEvent() {
  // @@protoc_insertion_point(destructor:OptionEvent)
  SharedDtor();
}

void OptionEvent::SharedDtor() {
}

void OptionEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptionEvent::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionEvent& OptionEvent::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsOptionEvent();
  return *internal_default_instance();
}

OptionEvent* OptionEvent::New(::google::protobuf::Arena* arena) const {
  OptionEvent* n = new OptionEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:OptionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&seatid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&seatid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OptionEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OptionEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 seatid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 opttype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_opttype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &opttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional sint32 y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OptionEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OptionEvent)
  return false;
#undef DO_
}

void OptionEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OptionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->seatid(), output);
  }

  // required sint32 opttype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->opttype(), output);
  }

  // optional sint32 x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->x(), output);
  }

  // optional sint32 y = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OptionEvent)
}

::google::protobuf::uint8* OptionEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OptionEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->seatid(), target);
  }

  // required sint32 opttype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->opttype(), target);
  }

  // optional sint32 x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->x(), target);
  }

  // optional sint32 y = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OptionEvent)
  return target;
}

size_t OptionEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:OptionEvent)
  size_t total_size = 0;

  if (has_seatid()) {
    // required sint32 seatid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }

  if (has_opttype()) {
    // required sint32 opttype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->opttype());
  }

  return total_size;
}
size_t OptionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OptionEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required sint32 seatid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());

    // required sint32 opttype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->opttype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 12u) {
    // optional sint32 x = 3;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->x());
    }

    // optional sint32 y = 4;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OptionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OptionEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OptionEvent)
    MergeFrom(*source);
  }
}

void OptionEvent::MergeFrom(const OptionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OptionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      seatid_ = from.seatid_;
    }
    if (cached_has_bits & 0x00000002u) {
      opttype_ = from.opttype_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OptionEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OptionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionEvent::CopyFrom(const OptionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OptionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void OptionEvent::Swap(OptionEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionEvent::InternalSwap(OptionEvent* other) {
  using std::swap;
  swap(seatid_, other->seatid_);
  swap(opttype_, other->opttype_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptionEvent::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrameOpts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameOpts::kFrameidFieldNumber;
const int FrameOpts::kOptsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameOpts::FrameOpts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsFrameOpts();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FrameOpts)
}
FrameOpts::FrameOpts(const FrameOpts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      opts_(from.opts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frameid_ = from.frameid_;
  // @@protoc_insertion_point(copy_constructor:FrameOpts)
}

void FrameOpts::SharedCtor() {
  _cached_size_ = 0;
  frameid_ = 0;
}

FrameOpts::~FrameOpts() {
  // @@protoc_insertion_point(destructor:FrameOpts)
  SharedDtor();
}

void FrameOpts::SharedDtor() {
}

void FrameOpts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameOpts::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrameOpts& FrameOpts::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsFrameOpts();
  return *internal_default_instance();
}

FrameOpts* FrameOpts::New(::google::protobuf::Arena* arena) const {
  FrameOpts* n = new FrameOpts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameOpts::Clear() {
// @@protoc_insertion_point(message_clear_start:FrameOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  opts_.Clear();
  frameid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FrameOpts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FrameOpts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 frameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_frameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &frameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OptionEvent opts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_opts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FrameOpts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FrameOpts)
  return false;
#undef DO_
}

void FrameOpts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FrameOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 frameid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->frameid(), output);
  }

  // repeated .OptionEvent opts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->opts(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FrameOpts)
}

::google::protobuf::uint8* FrameOpts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FrameOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 frameid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->frameid(), target);
  }

  // repeated .OptionEvent opts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->opts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrameOpts)
  return target;
}

size_t FrameOpts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrameOpts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 frameid = 1;
  if (has_frameid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->frameid());
  }
  // repeated .OptionEvent opts = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->opts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->opts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameOpts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FrameOpts)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameOpts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameOpts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FrameOpts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FrameOpts)
    MergeFrom(*source);
  }
}

void FrameOpts::MergeFrom(const FrameOpts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FrameOpts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  opts_.MergeFrom(from.opts_);
  if (from.has_frameid()) {
    set_frameid(from.frameid());
  }
}

void FrameOpts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FrameOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameOpts::CopyFrom(const FrameOpts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrameOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameOpts::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->opts())) return false;
  return true;
}

void FrameOpts::Swap(FrameOpts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameOpts::InternalSwap(FrameOpts* other) {
  using std::swap;
  opts_.InternalSwap(&other->opts_);
  swap(frameid_, other->frameid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameOpts::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogicFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicFrame::kFrameidFieldNumber;
const int LogicFrame::kUnsyncframesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicFrame::LogicFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsLogicFrame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicFrame)
}
LogicFrame::LogicFrame(const LogicFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      unsyncframes_(from.unsyncframes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frameid_ = from.frameid_;
  // @@protoc_insertion_point(copy_constructor:LogicFrame)
}

void LogicFrame::SharedCtor() {
  _cached_size_ = 0;
  frameid_ = 0;
}

LogicFrame::~LogicFrame() {
  // @@protoc_insertion_point(destructor:LogicFrame)
  SharedDtor();
}

void LogicFrame::SharedDtor() {
}

void LogicFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicFrame::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogicFrame& LogicFrame::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsLogicFrame();
  return *internal_default_instance();
}

LogicFrame* LogicFrame::New(::google::protobuf::Arena* arena) const {
  LogicFrame* n = new LogicFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unsyncframes_.Clear();
  frameid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogicFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 frameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_frameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &frameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .FrameOpts unsyncframes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_unsyncframes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicFrame)
  return false;
#undef DO_
}

void LogicFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 frameid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->frameid(), output);
  }

  // repeated .FrameOpts unsyncframes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unsyncframes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->unsyncframes(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogicFrame)
}

::google::protobuf::uint8* LogicFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 frameid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->frameid(), target);
  }

  // repeated .FrameOpts unsyncframes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->unsyncframes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->unsyncframes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogicFrame)
  return target;
}

size_t LogicFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LogicFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 frameid = 1;
  if (has_frameid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->frameid());
  }
  // repeated .FrameOpts unsyncframes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->unsyncframes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->unsyncframes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const LogicFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicFrame)
    MergeFrom(*source);
  }
}

void LogicFrame::MergeFrom(const LogicFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unsyncframes_.MergeFrom(from.unsyncframes_);
  if (from.has_frameid()) {
    set_frameid(from.frameid());
  }
}

void LogicFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicFrame::CopyFrom(const LogicFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicFrame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->unsyncframes())) return false;
  return true;
}

void LogicFrame::Swap(LogicFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicFrame::InternalSwap(LogicFrame* other) {
  using std::swap;
  unsyncframes_.InternalSwap(&other->unsyncframes_);
  swap(frameid_, other->frameid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicFrame::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NextFrameOpts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NextFrameOpts::kFrameidFieldNumber;
const int NextFrameOpts::kRoomidFieldNumber;
const int NextFrameOpts::kSeatidFieldNumber;
const int NextFrameOpts::kOptsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NextFrameOpts::NextFrameOpts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsNextFrameOpts();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NextFrameOpts)
}
NextFrameOpts::NextFrameOpts(const NextFrameOpts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      opts_(from.opts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomid()) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  ::memcpy(&frameid_, &from.frameid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seatid_) -
    reinterpret_cast<char*>(&frameid_)) + sizeof(seatid_));
  // @@protoc_insertion_point(copy_constructor:NextFrameOpts)
}

void NextFrameOpts::SharedCtor() {
  _cached_size_ = 0;
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seatid_) -
      reinterpret_cast<char*>(&frameid_)) + sizeof(seatid_));
}

NextFrameOpts::~NextFrameOpts() {
  // @@protoc_insertion_point(destructor:NextFrameOpts)
  SharedDtor();
}

void NextFrameOpts::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NextFrameOpts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NextFrameOpts::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NextFrameOpts& NextFrameOpts::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsNextFrameOpts();
  return *internal_default_instance();
}

NextFrameOpts* NextFrameOpts::New(::google::protobuf::Arena* arena) const {
  NextFrameOpts* n = new NextFrameOpts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NextFrameOpts::Clear() {
// @@protoc_insertion_point(message_clear_start:NextFrameOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  opts_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!roomid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roomid_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&frameid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seatid_) -
        reinterpret_cast<char*>(&frameid_)) + sizeof(seatid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NextFrameOpts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NextFrameOpts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 frameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_frameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &frameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NextFrameOpts.roomid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 seatid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .OptionEvent opts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_opts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NextFrameOpts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NextFrameOpts)
  return false;
#undef DO_
}

void NextFrameOpts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NextFrameOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 frameid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->frameid(), output);
  }

  // required string roomid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NextFrameOpts.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomid(), output);
  }

  // required sint32 seatid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->seatid(), output);
  }

  // repeated .OptionEvent opts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->opts(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NextFrameOpts)
}

::google::protobuf::uint8* NextFrameOpts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NextFrameOpts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 frameid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->frameid(), target);
  }

  // required string roomid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NextFrameOpts.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomid(), target);
  }

  // required sint32 seatid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(3, this->seatid(), target);
  }

  // repeated .OptionEvent opts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->opts(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NextFrameOpts)
  return target;
}

size_t NextFrameOpts::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NextFrameOpts)
  size_t total_size = 0;

  if (has_roomid()) {
    // required string roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }

  if (has_frameid()) {
    // required sint32 frameid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->frameid());
  }

  if (has_seatid()) {
    // required sint32 seatid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }

  return total_size;
}
size_t NextFrameOpts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NextFrameOpts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string roomid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());

    // required sint32 frameid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->frameid());

    // required sint32 seatid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .OptionEvent opts = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->opts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->opts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NextFrameOpts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NextFrameOpts)
  GOOGLE_DCHECK_NE(&from, this);
  const NextFrameOpts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NextFrameOpts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NextFrameOpts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NextFrameOpts)
    MergeFrom(*source);
  }
}

void NextFrameOpts::MergeFrom(const NextFrameOpts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NextFrameOpts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  opts_.MergeFrom(from.opts_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomid();
      roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
    }
    if (cached_has_bits & 0x00000002u) {
      frameid_ = from.frameid_;
    }
    if (cached_has_bits & 0x00000004u) {
      seatid_ = from.seatid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NextFrameOpts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NextFrameOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NextFrameOpts::CopyFrom(const NextFrameOpts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NextFrameOpts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NextFrameOpts::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->opts())) return false;
  return true;
}

void NextFrameOpts::Swap(NextFrameOpts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NextFrameOpts::InternalSwap(NextFrameOpts* other) {
  using std::swap;
  opts_.InternalSwap(&other->opts_);
  roomid_.Swap(&other->roomid_);
  swap(frameid_, other->frameid_);
  swap(seatid_, other->seatid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NextFrameOpts::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckLinkGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckLinkGameReq::CheckLinkGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsCheckLinkGameReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckLinkGameReq)
}
CheckLinkGameReq::CheckLinkGameReq(const CheckLinkGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CheckLinkGameReq)
}

void CheckLinkGameReq::SharedCtor() {
  _cached_size_ = 0;
}

CheckLinkGameReq::~CheckLinkGameReq() {
  // @@protoc_insertion_point(destructor:CheckLinkGameReq)
  SharedDtor();
}

void CheckLinkGameReq::SharedDtor() {
}

void CheckLinkGameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckLinkGameReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckLinkGameReq& CheckLinkGameReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsCheckLinkGameReq();
  return *internal_default_instance();
}

CheckLinkGameReq* CheckLinkGameReq::New(::google::protobuf::Arena* arena) const {
  CheckLinkGameReq* n = new CheckLinkGameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckLinkGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckLinkGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckLinkGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckLinkGameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CheckLinkGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckLinkGameReq)
  return false;
#undef DO_
}

void CheckLinkGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckLinkGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CheckLinkGameReq)
}

::google::protobuf::uint8* CheckLinkGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CheckLinkGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CheckLinkGameReq)
  return target;
}

size_t CheckLinkGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckLinkGameReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckLinkGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckLinkGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckLinkGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckLinkGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckLinkGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckLinkGameReq)
    MergeFrom(*source);
  }
}

void CheckLinkGameReq::MergeFrom(const CheckLinkGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckLinkGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CheckLinkGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckLinkGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckLinkGameReq::CopyFrom(const CheckLinkGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckLinkGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckLinkGameReq::IsInitialized() const {
  return true;
}

void CheckLinkGameReq::Swap(CheckLinkGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckLinkGameReq::InternalSwap(CheckLinkGameReq* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckLinkGameReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckLinkGameRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckLinkGameRes::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckLinkGameRes::CheckLinkGameRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsCheckLinkGameRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckLinkGameRes)
}
CheckLinkGameRes::CheckLinkGameRes(const CheckLinkGameRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:CheckLinkGameRes)
}

void CheckLinkGameRes::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
}

CheckLinkGameRes::~CheckLinkGameRes() {
  // @@protoc_insertion_point(destructor:CheckLinkGameRes)
  SharedDtor();
}

void CheckLinkGameRes::SharedDtor() {
}

void CheckLinkGameRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckLinkGameRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckLinkGameRes& CheckLinkGameRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsCheckLinkGameRes();
  return *internal_default_instance();
}

CheckLinkGameRes* CheckLinkGameRes::New(::google::protobuf::Arena* arena) const {
  CheckLinkGameRes* n = new CheckLinkGameRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckLinkGameRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckLinkGameRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckLinkGameRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckLinkGameRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckLinkGameRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckLinkGameRes)
  return false;
#undef DO_
}

void CheckLinkGameRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckLinkGameRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CheckLinkGameRes)
}

::google::protobuf::uint8* CheckLinkGameRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CheckLinkGameRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CheckLinkGameRes)
  return target;
}

size_t CheckLinkGameRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CheckLinkGameRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->status());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckLinkGameRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckLinkGameRes)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckLinkGameRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckLinkGameRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckLinkGameRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckLinkGameRes)
    MergeFrom(*source);
  }
}

void CheckLinkGameRes::MergeFrom(const CheckLinkGameRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckLinkGameRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void CheckLinkGameRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckLinkGameRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckLinkGameRes::CopyFrom(const CheckLinkGameRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckLinkGameRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckLinkGameRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CheckLinkGameRes::Swap(CheckLinkGameRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckLinkGameRes::InternalSwap(CheckLinkGameRes* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckLinkGameRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomInfoRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfoRes::kRoominfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfoRes::RoomInfoRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRoomInfoRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomInfoRes)
}
RoomInfoRes::RoomInfoRes(const RoomInfoRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roominfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roominfo()) {
    roominfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roominfo_);
  }
  // @@protoc_insertion_point(copy_constructor:RoomInfoRes)
}

void RoomInfoRes::SharedCtor() {
  _cached_size_ = 0;
  roominfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RoomInfoRes::~RoomInfoRes() {
  // @@protoc_insertion_point(destructor:RoomInfoRes)
  SharedDtor();
}

void RoomInfoRes::SharedDtor() {
  roominfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomInfoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomInfoRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomInfoRes& RoomInfoRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRoomInfoRes();
  return *internal_default_instance();
}

RoomInfoRes* RoomInfoRes::New(::google::protobuf::Arena* arena) const {
  RoomInfoRes* n = new RoomInfoRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomInfoRes::Clear() {
// @@protoc_insertion_point(message_clear_start:RoomInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!roominfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roominfo_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoomInfoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomInfoRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roominfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roominfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roominfo().data(), static_cast<int>(this->roominfo().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RoomInfoRes.roominfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomInfoRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomInfoRes)
  return false;
#undef DO_
}

void RoomInfoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roominfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roominfo().data(), static_cast<int>(this->roominfo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RoomInfoRes.roominfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roominfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomInfoRes)
}

::google::protobuf::uint8* RoomInfoRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoomInfoRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roominfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roominfo().data(), static_cast<int>(this->roominfo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RoomInfoRes.roominfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roominfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomInfoRes)
  return target;
}

size_t RoomInfoRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoomInfoRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string roominfo = 1;
  if (has_roominfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roominfo());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomInfoRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoomInfoRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfoRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfoRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoomInfoRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoomInfoRes)
    MergeFrom(*source);
  }
}

void RoomInfoRes::MergeFrom(const RoomInfoRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoomInfoRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roominfo()) {
    set_has_roominfo();
    roominfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roominfo_);
  }
}

void RoomInfoRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoomInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfoRes::CopyFrom(const RoomInfoRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoomInfoRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfoRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RoomInfoRes::Swap(RoomInfoRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfoRes::InternalSwap(RoomInfoRes* other) {
  using std::swap;
  roominfo_.Swap(&other->roominfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomInfoRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomIdRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomIdRes::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomIdRes::RoomIdRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsRoomIdRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomIdRes)
}
RoomIdRes::RoomIdRes(const RoomIdRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomid()) {
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
  // @@protoc_insertion_point(copy_constructor:RoomIdRes)
}

void RoomIdRes::SharedCtor() {
  _cached_size_ = 0;
  roomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RoomIdRes::~RoomIdRes() {
  // @@protoc_insertion_point(destructor:RoomIdRes)
  SharedDtor();
}

void RoomIdRes::SharedDtor() {
  roomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomIdRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomIdRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomIdRes& RoomIdRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsRoomIdRes();
  return *internal_default_instance();
}

RoomIdRes* RoomIdRes::New(::google::protobuf::Arena* arena) const {
  RoomIdRes* n = new RoomIdRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomIdRes::Clear() {
// @@protoc_insertion_point(message_clear_start:RoomIdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!roomid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roomid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoomIdRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomIdRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomid().data(), static_cast<int>(this->roomid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RoomIdRes.roomid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomIdRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomIdRes)
  return false;
#undef DO_
}

void RoomIdRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomIdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roomid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RoomIdRes.roomid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomIdRes)
}

::google::protobuf::uint8* RoomIdRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoomIdRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string roomid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomid().data(), static_cast<int>(this->roomid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RoomIdRes.roomid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomIdRes)
  return target;
}

size_t RoomIdRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoomIdRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string roomid = 1;
  if (has_roomid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomIdRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoomIdRes)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomIdRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomIdRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoomIdRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoomIdRes)
    MergeFrom(*source);
  }
}

void RoomIdRes::MergeFrom(const RoomIdRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoomIdRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roomid()) {
    set_has_roomid();
    roomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomid_);
  }
}

void RoomIdRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoomIdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomIdRes::CopyFrom(const RoomIdRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoomIdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomIdRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RoomIdRes::Swap(RoomIdRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomIdRes::InternalSwap(RoomIdRes* other) {
  using std::swap;
  roomid_.Swap(&other->roomid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomIdRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayCountRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayCountRes::kPlaycountFieldNumber;
const int PlayCountRes::kTotalplaycountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayCountRes::PlayCountRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsPlayCountRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayCountRes)
}
PlayCountRes::PlayCountRes(const PlayCountRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playcount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playcount()) {
    playcount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playcount_);
  }
  totalplaycount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_totalplaycount()) {
    totalplaycount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.totalplaycount_);
  }
  // @@protoc_insertion_point(copy_constructor:PlayCountRes)
}

void PlayCountRes::SharedCtor() {
  _cached_size_ = 0;
  playcount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalplaycount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayCountRes::~PlayCountRes() {
  // @@protoc_insertion_point(destructor:PlayCountRes)
  SharedDtor();
}

void PlayCountRes::SharedDtor() {
  playcount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totalplaycount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayCountRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayCountRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayCountRes& PlayCountRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsPlayCountRes();
  return *internal_default_instance();
}

PlayCountRes* PlayCountRes::New(::google::protobuf::Arena* arena) const {
  PlayCountRes* n = new PlayCountRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayCountRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayCountRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playcount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playcount_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!totalplaycount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*totalplaycount_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayCountRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayCountRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string playcount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playcount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playcount().data(), static_cast<int>(this->playcount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayCountRes.playcount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string totalplaycount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalplaycount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totalplaycount().data(), static_cast<int>(this->totalplaycount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PlayCountRes.totalplaycount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayCountRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayCountRes)
  return false;
#undef DO_
}

void PlayCountRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayCountRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string playcount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playcount().data(), static_cast<int>(this->playcount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayCountRes.playcount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playcount(), output);
  }

  // required string totalplaycount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalplaycount().data(), static_cast<int>(this->totalplaycount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayCountRes.totalplaycount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->totalplaycount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayCountRes)
}

::google::protobuf::uint8* PlayCountRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayCountRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string playcount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playcount().data(), static_cast<int>(this->playcount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayCountRes.playcount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playcount(), target);
  }

  // required string totalplaycount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totalplaycount().data(), static_cast<int>(this->totalplaycount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PlayCountRes.totalplaycount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->totalplaycount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayCountRes)
  return target;
}

size_t PlayCountRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PlayCountRes)
  size_t total_size = 0;

  if (has_playcount()) {
    // required string playcount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playcount());
  }

  if (has_totalplaycount()) {
    // required string totalplaycount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->totalplaycount());
  }

  return total_size;
}
size_t PlayCountRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayCountRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string playcount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playcount());

    // required string totalplaycount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->totalplaycount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayCountRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayCountRes)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayCountRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayCountRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayCountRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayCountRes)
    MergeFrom(*source);
  }
}

void PlayCountRes::MergeFrom(const PlayCountRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayCountRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playcount();
      playcount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playcount_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_totalplaycount();
      totalplaycount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.totalplaycount_);
    }
  }
}

void PlayCountRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayCountRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayCountRes::CopyFrom(const PlayCountRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayCountRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayCountRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PlayCountRes::Swap(PlayCountRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayCountRes::InternalSwap(PlayCountRes* other) {
  using std::swap;
  playcount_.Swap(&other->playcount_);
  totalplaycount_.Swap(&other->totalplaycount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayCountRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserArrivedInfos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserArrivedInfos::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserArrivedInfos::UserArrivedInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserArrivedInfos();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserArrivedInfos)
}
UserArrivedInfos::UserArrivedInfos(const UserArrivedInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      userinfo_(from.userinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UserArrivedInfos)
}

void UserArrivedInfos::SharedCtor() {
  _cached_size_ = 0;
}

UserArrivedInfos::~UserArrivedInfos() {
  // @@protoc_insertion_point(destructor:UserArrivedInfos)
  SharedDtor();
}

void UserArrivedInfos::SharedDtor() {
}

void UserArrivedInfos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserArrivedInfos::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserArrivedInfos& UserArrivedInfos::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserArrivedInfos();
  return *internal_default_instance();
}

UserArrivedInfos* UserArrivedInfos::New(::google::protobuf::Arena* arena) const {
  UserArrivedInfos* n = new UserArrivedInfos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserArrivedInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:UserArrivedInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userinfo_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserArrivedInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserArrivedInfos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UserArrived userinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_userinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserArrivedInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserArrivedInfos)
  return false;
#undef DO_
}

void UserArrivedInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserArrivedInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserArrived userinfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userinfo(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserArrivedInfos)
}

::google::protobuf::uint8* UserArrivedInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserArrivedInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserArrived userinfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->userinfo(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserArrivedInfos)
  return target;
}

size_t UserArrivedInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserArrivedInfos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UserArrived userinfo = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->userinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->userinfo(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserArrivedInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserArrivedInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const UserArrivedInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserArrivedInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserArrivedInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserArrivedInfos)
    MergeFrom(*source);
  }
}

void UserArrivedInfos::MergeFrom(const UserArrivedInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserArrivedInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userinfo_.MergeFrom(from.userinfo_);
}

void UserArrivedInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserArrivedInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserArrivedInfos::CopyFrom(const UserArrivedInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserArrivedInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserArrivedInfos::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->userinfo())) return false;
  return true;
}

void UserArrivedInfos::Swap(UserArrivedInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserArrivedInfos::InternalSwap(UserArrivedInfos* other) {
  using std::swap;
  userinfo_.InternalSwap(&other->userinfo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserArrivedInfos::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserState::kSeatidFieldNumber;
const int UserState::kUserstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserState::UserState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsUserState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserState)
}
UserState::UserState(const UserState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_userstate()) {
    userstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userstate_);
  }
  seatid_ = from.seatid_;
  // @@protoc_insertion_point(copy_constructor:UserState)
}

void UserState::SharedCtor() {
  _cached_size_ = 0;
  userstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seatid_ = 0;
}

UserState::~UserState() {
  // @@protoc_insertion_point(destructor:UserState)
  SharedDtor();
}

void UserState::SharedDtor() {
  userstate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserState::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserState& UserState::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsUserState();
  return *internal_default_instance();
}

UserState* UserState::New(::google::protobuf::Arena* arena) const {
  UserState* n = new UserState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserState::Clear() {
// @@protoc_insertion_point(message_clear_start:UserState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!userstate_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*userstate_.UnsafeRawStringPointer())->clear();
  }
  seatid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 seatid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string userstate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userstate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userstate().data(), static_cast<int>(this->userstate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UserState.userstate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserState)
  return false;
#undef DO_
}

void UserState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->seatid(), output);
  }

  // required string userstate = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userstate().data(), static_cast<int>(this->userstate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserState.userstate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userstate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UserState)
}

::google::protobuf::uint8* UserState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->seatid(), target);
  }

  // required string userstate = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userstate().data(), static_cast<int>(this->userstate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UserState.userstate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userstate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserState)
  return target;
}

size_t UserState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UserState)
  size_t total_size = 0;

  if (has_userstate()) {
    // required string userstate = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userstate());
  }

  if (has_seatid()) {
    // required sint32 seatid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }

  return total_size;
}
size_t UserState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userstate = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userstate());

    // required sint32 seatid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserState)
  GOOGLE_DCHECK_NE(&from, this);
  const UserState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserState)
    MergeFrom(*source);
  }
}

void UserState::MergeFrom(const UserState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_userstate();
      userstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userstate_);
    }
    if (cached_has_bits & 0x00000002u) {
      seatid_ = from.seatid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserState::CopyFrom(const UserState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UserState::Swap(UserState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserState::InternalSwap(UserState* other) {
  using std::swap;
  userstate_.Swap(&other->userstate_);
  swap(seatid_, other->seatid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserState::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllUserState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllUserState::kUserstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllUserState::AllUserState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsAllUserState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AllUserState)
}
AllUserState::AllUserState(const AllUserState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      userstate_(from.userstate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AllUserState)
}

void AllUserState::SharedCtor() {
  _cached_size_ = 0;
}

AllUserState::~AllUserState() {
  // @@protoc_insertion_point(destructor:AllUserState)
  SharedDtor();
}

void AllUserState::SharedDtor() {
}

void AllUserState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllUserState::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllUserState& AllUserState::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsAllUserState();
  return *internal_default_instance();
}

AllUserState* AllUserState::New(::google::protobuf::Arena* arena) const {
  AllUserState* n = new AllUserState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllUserState::Clear() {
// @@protoc_insertion_point(message_clear_start:AllUserState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userstate_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllUserState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AllUserState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UserState userstate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_userstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AllUserState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AllUserState)
  return false;
#undef DO_
}

void AllUserState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AllUserState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserState userstate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userstate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->userstate(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AllUserState)
}

::google::protobuf::uint8* AllUserState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AllUserState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UserState userstate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->userstate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->userstate(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AllUserState)
  return target;
}

size_t AllUserState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AllUserState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UserState userstate = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->userstate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->userstate(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllUserState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AllUserState)
  GOOGLE_DCHECK_NE(&from, this);
  const AllUserState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllUserState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AllUserState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AllUserState)
    MergeFrom(*source);
  }
}

void AllUserState::MergeFrom(const AllUserState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AllUserState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userstate_.MergeFrom(from.userstate_);
}

void AllUserState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AllUserState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllUserState::CopyFrom(const AllUserState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AllUserState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllUserState::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->userstate())) return false;
  return true;
}

void AllUserState::Swap(AllUserState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllUserState::InternalSwap(AllUserState* other) {
  using std::swap;
  userstate_.InternalSwap(&other->userstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllUserState::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameResult::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameResult::GameResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGameResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameResult)
}
GameResult::GameResult(const GameResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      score_(from.score_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GameResult)
}

void GameResult::SharedCtor() {
  _cached_size_ = 0;
}

GameResult::~GameResult() {
  // @@protoc_insertion_point(destructor:GameResult)
  SharedDtor();
}

void GameResult::SharedDtor() {
}

void GameResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameResult::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameResult& GameResult::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGameResult();
  return *internal_default_instance();
}

GameResult* GameResult::New(::google::protobuf::Arena* arena) const {
  GameResult* n = new GameResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameResult::Clear() {
// @@protoc_insertion_point(message_clear_start:GameResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_score()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->score(this->score_size() - 1).data(),
            static_cast<int>(this->score(this->score_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GameResult.score");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameResult)
  return false;
#undef DO_
}

void GameResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string score = 1;
  for (int i = 0, n = this->score_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score(i).data(), static_cast<int>(this->score(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameResult.score");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->score(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameResult)
}

::google::protobuf::uint8* GameResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string score = 1;
  for (int i = 0, n = this->score_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score(i).data(), static_cast<int>(this->score(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameResult.score");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->score(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameResult)
  return target;
}

size_t GameResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string score = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->score_size());
  for (int i = 0, n = this->score_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->score(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GameResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameResult)
    MergeFrom(*source);
  }
}

void GameResult::MergeFrom(const GameResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  score_.MergeFrom(from.score_);
}

void GameResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameResult::CopyFrom(const GameResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameResult::IsInitialized() const {
  return true;
}

void GameResult::Swap(GameResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameResult::InternalSwap(GameResult* other) {
  using std::swap;
  score_.InternalSwap(&other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameResult::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameTotalResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameTotalResult::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameTotalResult::GameTotalResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsGameTotalResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameTotalResult)
}
GameTotalResult::GameTotalResult(const GameTotalResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      score_(from.score_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GameTotalResult)
}

void GameTotalResult::SharedCtor() {
  _cached_size_ = 0;
}

GameTotalResult::~GameTotalResult() {
  // @@protoc_insertion_point(destructor:GameTotalResult)
  SharedDtor();
}

void GameTotalResult::SharedDtor() {
}

void GameTotalResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameTotalResult::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameTotalResult& GameTotalResult::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsGameTotalResult();
  return *internal_default_instance();
}

GameTotalResult* GameTotalResult::New(::google::protobuf::Arena* arena) const {
  GameTotalResult* n = new GameTotalResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameTotalResult::Clear() {
// @@protoc_insertion_point(message_clear_start:GameTotalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameTotalResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameTotalResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_score()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->score(this->score_size() - 1).data(),
            static_cast<int>(this->score(this->score_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "GameTotalResult.score");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameTotalResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameTotalResult)
  return false;
#undef DO_
}

void GameTotalResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameTotalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string score = 1;
  for (int i = 0, n = this->score_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score(i).data(), static_cast<int>(this->score(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameTotalResult.score");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->score(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GameTotalResult)
}

::google::protobuf::uint8* GameTotalResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameTotalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string score = 1;
  for (int i = 0, n = this->score_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->score(i).data(), static_cast<int>(this->score(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "GameTotalResult.score");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->score(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameTotalResult)
  return target;
}

size_t GameTotalResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameTotalResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string score = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->score_size());
  for (int i = 0, n = this->score_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->score(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameTotalResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameTotalResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GameTotalResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameTotalResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameTotalResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameTotalResult)
    MergeFrom(*source);
  }
}

void GameTotalResult::MergeFrom(const GameTotalResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameTotalResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  score_.MergeFrom(from.score_);
}

void GameTotalResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameTotalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameTotalResult::CopyFrom(const GameTotalResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameTotalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameTotalResult::IsInitialized() const {
  return true;
}

void GameTotalResult::Swap(GameTotalResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameTotalResult::InternalSwap(GameTotalResult* other) {
  using std::swap;
  score_.InternalSwap(&other->score_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameTotalResult::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClickTouZiNumReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClickTouZiNumReq::kSeatidFieldNumber;
const int ClickTouZiNumReq::kTouzinumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClickTouZiNumReq::ClickTouZiNumReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsClickTouZiNumReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClickTouZiNumReq)
}
ClickTouZiNumReq::ClickTouZiNumReq(const ClickTouZiNumReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seatid_, &from.seatid_,
    static_cast<size_t>(reinterpret_cast<char*>(&touzinum_) -
    reinterpret_cast<char*>(&seatid_)) + sizeof(touzinum_));
  // @@protoc_insertion_point(copy_constructor:ClickTouZiNumReq)
}

void ClickTouZiNumReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&seatid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&touzinum_) -
      reinterpret_cast<char*>(&seatid_)) + sizeof(touzinum_));
}

ClickTouZiNumReq::~ClickTouZiNumReq() {
  // @@protoc_insertion_point(destructor:ClickTouZiNumReq)
  SharedDtor();
}

void ClickTouZiNumReq::SharedDtor() {
}

void ClickTouZiNumReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClickTouZiNumReq::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClickTouZiNumReq& ClickTouZiNumReq::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsClickTouZiNumReq();
  return *internal_default_instance();
}

ClickTouZiNumReq* ClickTouZiNumReq::New(::google::protobuf::Arena* arena) const {
  ClickTouZiNumReq* n = new ClickTouZiNumReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClickTouZiNumReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClickTouZiNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&seatid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&touzinum_) -
        reinterpret_cast<char*>(&seatid_)) + sizeof(touzinum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClickTouZiNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClickTouZiNumReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 seatid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required sint32 touzinum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_touzinum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &touzinum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClickTouZiNumReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClickTouZiNumReq)
  return false;
#undef DO_
}

void ClickTouZiNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClickTouZiNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->seatid(), output);
  }

  // required sint32 touzinum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->touzinum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClickTouZiNumReq)
}

::google::protobuf::uint8* ClickTouZiNumReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClickTouZiNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->seatid(), target);
  }

  // required sint32 touzinum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->touzinum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClickTouZiNumReq)
  return target;
}

size_t ClickTouZiNumReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ClickTouZiNumReq)
  size_t total_size = 0;

  if (has_seatid()) {
    // required sint32 seatid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }

  if (has_touzinum()) {
    // required sint32 touzinum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->touzinum());
  }

  return total_size;
}
size_t ClickTouZiNumReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClickTouZiNumReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required sint32 seatid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());

    // required sint32 touzinum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->touzinum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClickTouZiNumReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClickTouZiNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ClickTouZiNumReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClickTouZiNumReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClickTouZiNumReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClickTouZiNumReq)
    MergeFrom(*source);
  }
}

void ClickTouZiNumReq::MergeFrom(const ClickTouZiNumReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClickTouZiNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      seatid_ = from.seatid_;
    }
    if (cached_has_bits & 0x00000002u) {
      touzinum_ = from.touzinum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClickTouZiNumReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClickTouZiNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClickTouZiNumReq::CopyFrom(const ClickTouZiNumReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClickTouZiNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClickTouZiNumReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ClickTouZiNumReq::Swap(ClickTouZiNumReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClickTouZiNumReq::InternalSwap(ClickTouZiNumReq* other) {
  using std::swap;
  swap(seatid_, other->seatid_);
  swap(touzinum_, other->touzinum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClickTouZiNumReq::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TouZiNumRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TouZiNumRes::kTouzinumsFieldNumber;
const int TouZiNumRes::kBombnumsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TouZiNumRes::TouZiNumRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsTouZiNumRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TouZiNumRes)
}
TouZiNumRes::TouZiNumRes(const TouZiNumRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      touzinums_(from.touzinums_),
      bombnums_(from.bombnums_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TouZiNumRes)
}

void TouZiNumRes::SharedCtor() {
  _cached_size_ = 0;
}

TouZiNumRes::~TouZiNumRes() {
  // @@protoc_insertion_point(destructor:TouZiNumRes)
  SharedDtor();
}

void TouZiNumRes::SharedDtor() {
}

void TouZiNumRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TouZiNumRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TouZiNumRes& TouZiNumRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsTouZiNumRes();
  return *internal_default_instance();
}

TouZiNumRes* TouZiNumRes::New(::google::protobuf::Arena* arena) const {
  TouZiNumRes* n = new TouZiNumRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TouZiNumRes::Clear() {
// @@protoc_insertion_point(message_clear_start:TouZiNumRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  touzinums_.Clear();
  bombnums_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TouZiNumRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TouZiNumRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint32 touzinums = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 8u, input, this->mutable_touzinums())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_touzinums())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 bombnums = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 16u, input, this->mutable_bombnums())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_bombnums())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TouZiNumRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TouZiNumRes)
  return false;
#undef DO_
}

void TouZiNumRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TouZiNumRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 touzinums = 1;
  for (int i = 0, n = this->touzinums_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      1, this->touzinums(i), output);
  }

  // repeated sint32 bombnums = 2;
  for (int i = 0, n = this->bombnums_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      2, this->bombnums(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TouZiNumRes)
}

::google::protobuf::uint8* TouZiNumRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TouZiNumRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint32 touzinums = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(1, this->touzinums_, target);

  // repeated sint32 bombnums = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(2, this->bombnums_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TouZiNumRes)
  return target;
}

size_t TouZiNumRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TouZiNumRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated sint32 touzinums = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->touzinums_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->touzinums_size());
    total_size += data_size;
  }

  // repeated sint32 bombnums = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->bombnums_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->bombnums_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TouZiNumRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TouZiNumRes)
  GOOGLE_DCHECK_NE(&from, this);
  const TouZiNumRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TouZiNumRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TouZiNumRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TouZiNumRes)
    MergeFrom(*source);
  }
}

void TouZiNumRes::MergeFrom(const TouZiNumRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TouZiNumRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  touzinums_.MergeFrom(from.touzinums_);
  bombnums_.MergeFrom(from.bombnums_);
}

void TouZiNumRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TouZiNumRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TouZiNumRes::CopyFrom(const TouZiNumRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TouZiNumRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TouZiNumRes::IsInitialized() const {
  return true;
}

void TouZiNumRes::Swap(TouZiNumRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TouZiNumRes::InternalSwap(TouZiNumRes* other) {
  using std::swap;
  touzinums_.InternalSwap(&other->touzinums_);
  bombnums_.InternalSwap(&other->bombnums_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TouZiNumRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClickTouZiBombRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClickTouZiBombRes::kSeatidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClickTouZiBombRes::ClickTouZiBombRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_game_2eproto::InitDefaultsClickTouZiBombRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClickTouZiBombRes)
}
ClickTouZiBombRes::ClickTouZiBombRes(const ClickTouZiBombRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seatid_ = from.seatid_;
  // @@protoc_insertion_point(copy_constructor:ClickTouZiBombRes)
}

void ClickTouZiBombRes::SharedCtor() {
  _cached_size_ = 0;
  seatid_ = 0;
}

ClickTouZiBombRes::~ClickTouZiBombRes() {
  // @@protoc_insertion_point(destructor:ClickTouZiBombRes)
  SharedDtor();
}

void ClickTouZiBombRes::SharedDtor() {
}

void ClickTouZiBombRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClickTouZiBombRes::descriptor() {
  ::protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClickTouZiBombRes& ClickTouZiBombRes::default_instance() {
  ::protobuf_game_2eproto::InitDefaultsClickTouZiBombRes();
  return *internal_default_instance();
}

ClickTouZiBombRes* ClickTouZiBombRes::New(::google::protobuf::Arena* arena) const {
  ClickTouZiBombRes* n = new ClickTouZiBombRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClickTouZiBombRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ClickTouZiBombRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seatid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClickTouZiBombRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClickTouZiBombRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 seatid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seatid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &seatid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClickTouZiBombRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClickTouZiBombRes)
  return false;
#undef DO_
}

void ClickTouZiBombRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClickTouZiBombRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->seatid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClickTouZiBombRes)
}

::google::protobuf::uint8* ClickTouZiBombRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClickTouZiBombRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required sint32 seatid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->seatid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClickTouZiBombRes)
  return target;
}

size_t ClickTouZiBombRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClickTouZiBombRes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required sint32 seatid = 1;
  if (has_seatid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->seatid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClickTouZiBombRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClickTouZiBombRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClickTouZiBombRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClickTouZiBombRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClickTouZiBombRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClickTouZiBombRes)
    MergeFrom(*source);
  }
}

void ClickTouZiBombRes::MergeFrom(const ClickTouZiBombRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClickTouZiBombRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_seatid()) {
    set_seatid(from.seatid());
  }
}

void ClickTouZiBombRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClickTouZiBombRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClickTouZiBombRes::CopyFrom(const ClickTouZiBombRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClickTouZiBombRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClickTouZiBombRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ClickTouZiBombRes::Swap(ClickTouZiBombRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClickTouZiBombRes::InternalSwap(ClickTouZiBombRes* other) {
  using std::swap;
  swap(seatid_, other->seatid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClickTouZiBombRes::GetMetadata() const {
  protobuf_game_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_game_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
