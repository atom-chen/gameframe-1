// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[40];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGuestLoginReqImpl();
void InitDefaultsGuestLoginReq();
void InitDefaultsUnameLoginReqImpl();
void InitDefaultsUnameLoginReq();
void InitDefaultsUserCenterInfoImpl();
void InitDefaultsUserCenterInfo();
void InitDefaultsGuestLoginResImpl();
void InitDefaultsGuestLoginRes();
void InitDefaultsUnameLoginResImpl();
void InitDefaultsUnameLoginRes();
void InitDefaultsEditProfileReqImpl();
void InitDefaultsEditProfileReq();
void InitDefaultsEditProfileResImpl();
void InitDefaultsEditProfileRes();
void InitDefaultsAccountUpgradeReqImpl();
void InitDefaultsAccountUpgradeReq();
void InitDefaultsAccountUpgradeResImpl();
void InitDefaultsAccountUpgradeRes();
void InitDefaultsLoginOutResImpl();
void InitDefaultsLoginOutRes();
void InitDefaultsUserGameInfoImpl();
void InitDefaultsUserGameInfo();
void InitDefaultsGetUgameInfoResImpl();
void InitDefaultsGetUgameInfoRes();
void InitDefaultsRecvLoginBonuesResImpl();
void InitDefaultsRecvLoginBonuesRes();
void InitDefaultsWorldChipRankInfoImpl();
void InitDefaultsWorldChipRankInfo();
void InitDefaultsGetWorldRankUchipResImpl();
void InitDefaultsGetWorldRankUchipRes();
void InitDefaultsGetSysMsgReqImpl();
void InitDefaultsGetSysMsgReq();
void InitDefaultsGetSysMsgResImpl();
void InitDefaultsGetSysMsgRes();
void InitDefaultsLoginLogicResImpl();
void InitDefaultsLoginLogicRes();
void InitDefaultsEnterZoneReqImpl();
void InitDefaultsEnterZoneReq();
void InitDefaultsEnterZoneResImpl();
void InitDefaultsEnterZoneRes();
void InitDefaultsEnterMatchImpl();
void InitDefaultsEnterMatch();
void InitDefaultsUserArrivedImpl();
void InitDefaultsUserArrived();
void InitDefaultsExitMatchResImpl();
void InitDefaultsExitMatchRes();
void InitDefaultsUserExitMatchImpl();
void InitDefaultsUserExitMatch();
void InitDefaultsGameStartImpl();
void InitDefaultsGameStart();
void InitDefaultsUserRegistReqImpl();
void InitDefaultsUserRegistReq();
void InitDefaultsUserRegistResImpl();
void InitDefaultsUserRegistRes();
void InitDefaultsCreateRoomReqImpl();
void InitDefaultsCreateRoomReq();
void InitDefaultsCreateRoomResImpl();
void InitDefaultsCreateRoomRes();
void InitDefaultsJoinRoomReqImpl();
void InitDefaultsJoinRoomReq();
void InitDefaultsJoinRoomResImpl();
void InitDefaultsJoinRoomRes();
void InitDefaultsExitRoomResImpl();
void InitDefaultsExitRoomRes();
void InitDefaultsDessolveResImpl();
void InitDefaultsDessolveRes();
void InitDefaultsGetCreateStatusResImpl();
void InitDefaultsGetCreateStatusRes();
void InitDefaultsBackRoomResImpl();
void InitDefaultsBackRoomRes();
void InitDefaultsUserOffLineImpl();
void InitDefaultsUserOffLine();
void InitDefaultsUserReconnectedResImpl();
void InitDefaultsUserReconnectedRes();
void InitDefaultsHeartBeatResImpl();
void InitDefaultsHeartBeatRes();
void InitDefaultsUserReadyReqImpl();
void InitDefaultsUserReadyReq();
void InitDefaultsUserReadyResImpl();
void InitDefaultsUserReadyRes();
inline void InitDefaults() {
  InitDefaultsGuestLoginReq();
  InitDefaultsUnameLoginReq();
  InitDefaultsUserCenterInfo();
  InitDefaultsGuestLoginRes();
  InitDefaultsUnameLoginRes();
  InitDefaultsEditProfileReq();
  InitDefaultsEditProfileRes();
  InitDefaultsAccountUpgradeReq();
  InitDefaultsAccountUpgradeRes();
  InitDefaultsLoginOutRes();
  InitDefaultsUserGameInfo();
  InitDefaultsGetUgameInfoRes();
  InitDefaultsRecvLoginBonuesRes();
  InitDefaultsWorldChipRankInfo();
  InitDefaultsGetWorldRankUchipRes();
  InitDefaultsGetSysMsgReq();
  InitDefaultsGetSysMsgRes();
  InitDefaultsLoginLogicRes();
  InitDefaultsEnterZoneReq();
  InitDefaultsEnterZoneRes();
  InitDefaultsEnterMatch();
  InitDefaultsUserArrived();
  InitDefaultsExitMatchRes();
  InitDefaultsUserExitMatch();
  InitDefaultsGameStart();
  InitDefaultsUserRegistReq();
  InitDefaultsUserRegistRes();
  InitDefaultsCreateRoomReq();
  InitDefaultsCreateRoomRes();
  InitDefaultsJoinRoomReq();
  InitDefaultsJoinRoomRes();
  InitDefaultsExitRoomRes();
  InitDefaultsDessolveRes();
  InitDefaultsGetCreateStatusRes();
  InitDefaultsBackRoomRes();
  InitDefaultsUserOffLine();
  InitDefaultsUserReconnectedRes();
  InitDefaultsHeartBeatRes();
  InitDefaultsUserReadyReq();
  InitDefaultsUserReadyRes();
}
}  // namespace protobuf_game_2eproto
class AccountUpgradeReq;
class AccountUpgradeReqDefaultTypeInternal;
extern AccountUpgradeReqDefaultTypeInternal _AccountUpgradeReq_default_instance_;
class AccountUpgradeRes;
class AccountUpgradeResDefaultTypeInternal;
extern AccountUpgradeResDefaultTypeInternal _AccountUpgradeRes_default_instance_;
class BackRoomRes;
class BackRoomResDefaultTypeInternal;
extern BackRoomResDefaultTypeInternal _BackRoomRes_default_instance_;
class CreateRoomReq;
class CreateRoomReqDefaultTypeInternal;
extern CreateRoomReqDefaultTypeInternal _CreateRoomReq_default_instance_;
class CreateRoomRes;
class CreateRoomResDefaultTypeInternal;
extern CreateRoomResDefaultTypeInternal _CreateRoomRes_default_instance_;
class DessolveRes;
class DessolveResDefaultTypeInternal;
extern DessolveResDefaultTypeInternal _DessolveRes_default_instance_;
class EditProfileReq;
class EditProfileReqDefaultTypeInternal;
extern EditProfileReqDefaultTypeInternal _EditProfileReq_default_instance_;
class EditProfileRes;
class EditProfileResDefaultTypeInternal;
extern EditProfileResDefaultTypeInternal _EditProfileRes_default_instance_;
class EnterMatch;
class EnterMatchDefaultTypeInternal;
extern EnterMatchDefaultTypeInternal _EnterMatch_default_instance_;
class EnterZoneReq;
class EnterZoneReqDefaultTypeInternal;
extern EnterZoneReqDefaultTypeInternal _EnterZoneReq_default_instance_;
class EnterZoneRes;
class EnterZoneResDefaultTypeInternal;
extern EnterZoneResDefaultTypeInternal _EnterZoneRes_default_instance_;
class ExitMatchRes;
class ExitMatchResDefaultTypeInternal;
extern ExitMatchResDefaultTypeInternal _ExitMatchRes_default_instance_;
class ExitRoomRes;
class ExitRoomResDefaultTypeInternal;
extern ExitRoomResDefaultTypeInternal _ExitRoomRes_default_instance_;
class GameStart;
class GameStartDefaultTypeInternal;
extern GameStartDefaultTypeInternal _GameStart_default_instance_;
class GetCreateStatusRes;
class GetCreateStatusResDefaultTypeInternal;
extern GetCreateStatusResDefaultTypeInternal _GetCreateStatusRes_default_instance_;
class GetSysMsgReq;
class GetSysMsgReqDefaultTypeInternal;
extern GetSysMsgReqDefaultTypeInternal _GetSysMsgReq_default_instance_;
class GetSysMsgRes;
class GetSysMsgResDefaultTypeInternal;
extern GetSysMsgResDefaultTypeInternal _GetSysMsgRes_default_instance_;
class GetUgameInfoRes;
class GetUgameInfoResDefaultTypeInternal;
extern GetUgameInfoResDefaultTypeInternal _GetUgameInfoRes_default_instance_;
class GetWorldRankUchipRes;
class GetWorldRankUchipResDefaultTypeInternal;
extern GetWorldRankUchipResDefaultTypeInternal _GetWorldRankUchipRes_default_instance_;
class GuestLoginReq;
class GuestLoginReqDefaultTypeInternal;
extern GuestLoginReqDefaultTypeInternal _GuestLoginReq_default_instance_;
class GuestLoginRes;
class GuestLoginResDefaultTypeInternal;
extern GuestLoginResDefaultTypeInternal _GuestLoginRes_default_instance_;
class HeartBeatRes;
class HeartBeatResDefaultTypeInternal;
extern HeartBeatResDefaultTypeInternal _HeartBeatRes_default_instance_;
class JoinRoomReq;
class JoinRoomReqDefaultTypeInternal;
extern JoinRoomReqDefaultTypeInternal _JoinRoomReq_default_instance_;
class JoinRoomRes;
class JoinRoomResDefaultTypeInternal;
extern JoinRoomResDefaultTypeInternal _JoinRoomRes_default_instance_;
class LoginLogicRes;
class LoginLogicResDefaultTypeInternal;
extern LoginLogicResDefaultTypeInternal _LoginLogicRes_default_instance_;
class LoginOutRes;
class LoginOutResDefaultTypeInternal;
extern LoginOutResDefaultTypeInternal _LoginOutRes_default_instance_;
class RecvLoginBonuesRes;
class RecvLoginBonuesResDefaultTypeInternal;
extern RecvLoginBonuesResDefaultTypeInternal _RecvLoginBonuesRes_default_instance_;
class UnameLoginReq;
class UnameLoginReqDefaultTypeInternal;
extern UnameLoginReqDefaultTypeInternal _UnameLoginReq_default_instance_;
class UnameLoginRes;
class UnameLoginResDefaultTypeInternal;
extern UnameLoginResDefaultTypeInternal _UnameLoginRes_default_instance_;
class UserArrived;
class UserArrivedDefaultTypeInternal;
extern UserArrivedDefaultTypeInternal _UserArrived_default_instance_;
class UserCenterInfo;
class UserCenterInfoDefaultTypeInternal;
extern UserCenterInfoDefaultTypeInternal _UserCenterInfo_default_instance_;
class UserExitMatch;
class UserExitMatchDefaultTypeInternal;
extern UserExitMatchDefaultTypeInternal _UserExitMatch_default_instance_;
class UserGameInfo;
class UserGameInfoDefaultTypeInternal;
extern UserGameInfoDefaultTypeInternal _UserGameInfo_default_instance_;
class UserOffLine;
class UserOffLineDefaultTypeInternal;
extern UserOffLineDefaultTypeInternal _UserOffLine_default_instance_;
class UserReadyReq;
class UserReadyReqDefaultTypeInternal;
extern UserReadyReqDefaultTypeInternal _UserReadyReq_default_instance_;
class UserReadyRes;
class UserReadyResDefaultTypeInternal;
extern UserReadyResDefaultTypeInternal _UserReadyRes_default_instance_;
class UserReconnectedRes;
class UserReconnectedResDefaultTypeInternal;
extern UserReconnectedResDefaultTypeInternal _UserReconnectedRes_default_instance_;
class UserRegistReq;
class UserRegistReqDefaultTypeInternal;
extern UserRegistReqDefaultTypeInternal _UserRegistReq_default_instance_;
class UserRegistRes;
class UserRegistResDefaultTypeInternal;
extern UserRegistResDefaultTypeInternal _UserRegistRes_default_instance_;
class WorldChipRankInfo;
class WorldChipRankInfoDefaultTypeInternal;
extern WorldChipRankInfoDefaultTypeInternal _WorldChipRankInfo_default_instance_;

enum Stype {
  INVALIDI_STYPE = 0,
  Auth = 1,
  System = 2,
  Logic = 3
};
bool Stype_IsValid(int value);
const Stype Stype_MIN = INVALIDI_STYPE;
const Stype Stype_MAX = Logic;
const int Stype_ARRAYSIZE = Stype_MAX + 1;

const ::google::protobuf::EnumDescriptor* Stype_descriptor();
inline const ::std::string& Stype_Name(Stype value) {
  return ::google::protobuf::internal::NameOfEnum(
    Stype_descriptor(), value);
}
inline bool Stype_Parse(
    const ::std::string& name, Stype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Stype>(
    Stype_descriptor(), name, value);
}
enum Cmd {
  INVALID_CMD = 0,
  eGuestLoginReq = 1,
  eGuestLoginRes = 2,
  eRelogin = 3,
  eUserLostConn = 4,
  eEditProfileReq = 5,
  eEditProfileRes = 6,
  eAccountUpgradeReq = 7,
  eAccountUpgradeRes = 8,
  eUnameLoginReq = 9,
  eUnameLoginRes = 10,
  eLoginOutReq = 11,
  eLoginOutRes = 12,
  eUserRegistReq = 13,
  eUserRegistRes = 14,
  eGetUgameInfoReq = 15,
  eGetUgameInfoRes = 16,
  eRecvLoginBonuesReq = 17,
  eRecvLoginBonuesRes = 18,
  eGetWorldRankUchipReq = 19,
  eGetWorldRankUchipRes = 20,
  eGetSysMsgReq = 21,
  eGetSysMsgRes = 22,
  eLoginLogicReq = 23,
  eLoginLogicRes = 24,
  eEnterZoneReq = 25,
  eEnterZoneRes = 26,
  eEnterMatch = 27,
  eUserArrived = 28,
  eExitMatchReq = 29,
  eExitMatchRes = 30,
  eUserExitMatch = 31,
  eCreateRoomReq = 32,
  eCreateRoomRes = 33,
  eJoinRoomReq = 34,
  eJoinRoomRes = 35,
  eExitRoomReq = 36,
  eExitRoomRes = 37,
  eDessolveReq = 38,
  eDessolveRes = 39,
  eGetCreateStatusReq = 40,
  eGetCreateStatusRes = 41,
  eBackRoomReq = 42,
  eBackRoomRes = 43,
  eUserOffLine = 44,
  eHeartBeatReq = 45,
  eHeartBeatRes = 46,
  eUserReconnectedReq = 47,
  eUserReconnectedRes = 48,
  eUserReadyReq = 49,
  eUserReadyRes = 50,
  eGameStart = 51
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = INVALID_CMD;
const Cmd Cmd_MAX = eGameStart;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
// ===================================================================

class GuestLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginReq) */ {
 public:
  GuestLoginReq();
  virtual ~GuestLoginReq();

  GuestLoginReq(const GuestLoginReq& from);

  inline GuestLoginReq& operator=(const GuestLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginReq(GuestLoginReq&& from) noexcept
    : GuestLoginReq() {
    *this = ::std::move(from);
  }

  inline GuestLoginReq& operator=(GuestLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginReq* internal_default_instance() {
    return reinterpret_cast<const GuestLoginReq*>(
               &_GuestLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GuestLoginReq* other);
  friend void swap(GuestLoginReq& a, GuestLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginReq& from);
  void MergeFrom(const GuestLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string guest_key = 1;
  bool has_guest_key() const;
  void clear_guest_key();
  static const int kGuestKeyFieldNumber = 1;
  const ::std::string& guest_key() const;
  void set_guest_key(const ::std::string& value);
  #if LANG_CXX11
  void set_guest_key(::std::string&& value);
  #endif
  void set_guest_key(const char* value);
  void set_guest_key(const char* value, size_t size);
  ::std::string* mutable_guest_key();
  ::std::string* release_guest_key();
  void set_allocated_guest_key(::std::string* guest_key);

  // @@protoc_insertion_point(class_scope:GuestLoginReq)
 private:
  void set_has_guest_key();
  void clear_has_guest_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr guest_key_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginReqImpl();
};
// -------------------------------------------------------------------

class UnameLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UnameLoginReq) */ {
 public:
  UnameLoginReq();
  virtual ~UnameLoginReq();

  UnameLoginReq(const UnameLoginReq& from);

  inline UnameLoginReq& operator=(const UnameLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnameLoginReq(UnameLoginReq&& from) noexcept
    : UnameLoginReq() {
    *this = ::std::move(from);
  }

  inline UnameLoginReq& operator=(UnameLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnameLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnameLoginReq* internal_default_instance() {
    return reinterpret_cast<const UnameLoginReq*>(
               &_UnameLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UnameLoginReq* other);
  friend void swap(UnameLoginReq& a, UnameLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnameLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UnameLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnameLoginReq& from);
  void MergeFrom(const UnameLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnameLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uname = 1;
  bool has_uname() const;
  void clear_uname();
  static const int kUnameFieldNumber = 1;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // required string upwd = 2;
  bool has_upwd() const;
  void clear_upwd();
  static const int kUpwdFieldNumber = 2;
  const ::std::string& upwd() const;
  void set_upwd(const ::std::string& value);
  #if LANG_CXX11
  void set_upwd(::std::string&& value);
  #endif
  void set_upwd(const char* value);
  void set_upwd(const char* value, size_t size);
  ::std::string* mutable_upwd();
  ::std::string* release_upwd();
  void set_allocated_upwd(::std::string* upwd);

  // @@protoc_insertion_point(class_scope:UnameLoginReq)
 private:
  void set_has_uname();
  void clear_has_uname();
  void set_has_upwd();
  void clear_has_upwd();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr upwd_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUnameLoginReqImpl();
};
// -------------------------------------------------------------------

class UserCenterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserCenterInfo) */ {
 public:
  UserCenterInfo();
  virtual ~UserCenterInfo();

  UserCenterInfo(const UserCenterInfo& from);

  inline UserCenterInfo& operator=(const UserCenterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserCenterInfo(UserCenterInfo&& from) noexcept
    : UserCenterInfo() {
    *this = ::std::move(from);
  }

  inline UserCenterInfo& operator=(UserCenterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCenterInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserCenterInfo* internal_default_instance() {
    return reinterpret_cast<const UserCenterInfo*>(
               &_UserCenterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UserCenterInfo* other);
  friend void swap(UserCenterInfo& a, UserCenterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserCenterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserCenterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserCenterInfo& from);
  void MergeFrom(const UserCenterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserCenterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // optional string brandid = 6;
  bool has_brandid() const;
  void clear_brandid();
  static const int kBrandidFieldNumber = 6;
  const ::std::string& brandid() const;
  void set_brandid(const ::std::string& value);
  #if LANG_CXX11
  void set_brandid(::std::string&& value);
  #endif
  void set_brandid(const char* value);
  void set_brandid(const char* value, size_t size);
  ::std::string* mutable_brandid();
  ::std::string* release_brandid();
  void set_allocated_brandid(::std::string* brandid);

  // optional string numberid = 7;
  bool has_numberid() const;
  void clear_numberid();
  static const int kNumberidFieldNumber = 7;
  const ::std::string& numberid() const;
  void set_numberid(const ::std::string& value);
  #if LANG_CXX11
  void set_numberid(::std::string&& value);
  #endif
  void set_numberid(const char* value);
  void set_numberid(const char* value, size_t size);
  ::std::string* mutable_numberid();
  ::std::string* release_numberid();
  void set_allocated_numberid(::std::string* numberid);

  // optional string areaid = 8;
  bool has_areaid() const;
  void clear_areaid();
  static const int kAreaidFieldNumber = 8;
  const ::std::string& areaid() const;
  void set_areaid(const ::std::string& value);
  #if LANG_CXX11
  void set_areaid(::std::string&& value);
  #endif
  void set_areaid(const char* value);
  void set_areaid(const char* value, size_t size);
  ::std::string* mutable_areaid();
  ::std::string* release_areaid();
  void set_allocated_areaid(::std::string* areaid);

  // required sint32 uface = 2;
  bool has_uface() const;
  void clear_uface();
  static const int kUfaceFieldNumber = 2;
  ::google::protobuf::int32 uface() const;
  void set_uface(::google::protobuf::int32 value);

  // required sint32 usex = 3;
  bool has_usex() const;
  void clear_usex();
  static const int kUsexFieldNumber = 3;
  ::google::protobuf::int32 usex() const;
  void set_usex(::google::protobuf::int32 value);

  // required sint32 uvip = 4;
  bool has_uvip() const;
  void clear_uvip();
  static const int kUvipFieldNumber = 4;
  ::google::protobuf::int32 uvip() const;
  void set_uvip(::google::protobuf::int32 value);

  // required sint32 uid = 5;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserCenterInfo)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_uface();
  void clear_has_uface();
  void set_has_usex();
  void clear_has_usex();
  void set_has_uvip();
  void clear_has_uvip();
  void set_has_uid();
  void clear_has_uid();
  void set_has_brandid();
  void clear_has_brandid();
  void set_has_numberid();
  void clear_has_numberid();
  void set_has_areaid();
  void clear_has_areaid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::internal::ArenaStringPtr brandid_;
  ::google::protobuf::internal::ArenaStringPtr numberid_;
  ::google::protobuf::internal::ArenaStringPtr areaid_;
  ::google::protobuf::int32 uface_;
  ::google::protobuf::int32 usex_;
  ::google::protobuf::int32 uvip_;
  ::google::protobuf::int32 uid_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserCenterInfoImpl();
};
// -------------------------------------------------------------------

class GuestLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GuestLoginRes) */ {
 public:
  GuestLoginRes();
  virtual ~GuestLoginRes();

  GuestLoginRes(const GuestLoginRes& from);

  inline GuestLoginRes& operator=(const GuestLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuestLoginRes(GuestLoginRes&& from) noexcept
    : GuestLoginRes() {
    *this = ::std::move(from);
  }

  inline GuestLoginRes& operator=(GuestLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuestLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuestLoginRes* internal_default_instance() {
    return reinterpret_cast<const GuestLoginRes*>(
               &_GuestLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GuestLoginRes* other);
  friend void swap(GuestLoginRes& a, GuestLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuestLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GuestLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuestLoginRes& from);
  void MergeFrom(const GuestLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuestLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserCenterInfo uinfo = 2;
  bool has_uinfo() const;
  void clear_uinfo();
  static const int kUinfoFieldNumber = 2;
  const ::UserCenterInfo& uinfo() const;
  ::UserCenterInfo* release_uinfo();
  ::UserCenterInfo* mutable_uinfo();
  void set_allocated_uinfo(::UserCenterInfo* uinfo);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GuestLoginRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_uinfo();
  void clear_has_uinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserCenterInfo* uinfo_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGuestLoginResImpl();
};
// -------------------------------------------------------------------

class UnameLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UnameLoginRes) */ {
 public:
  UnameLoginRes();
  virtual ~UnameLoginRes();

  UnameLoginRes(const UnameLoginRes& from);

  inline UnameLoginRes& operator=(const UnameLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnameLoginRes(UnameLoginRes&& from) noexcept
    : UnameLoginRes() {
    *this = ::std::move(from);
  }

  inline UnameLoginRes& operator=(UnameLoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnameLoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnameLoginRes* internal_default_instance() {
    return reinterpret_cast<const UnameLoginRes*>(
               &_UnameLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UnameLoginRes* other);
  friend void swap(UnameLoginRes& a, UnameLoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnameLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  UnameLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnameLoginRes& from);
  void MergeFrom(const UnameLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnameLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserCenterInfo uinfo = 2;
  bool has_uinfo() const;
  void clear_uinfo();
  static const int kUinfoFieldNumber = 2;
  const ::UserCenterInfo& uinfo() const;
  ::UserCenterInfo* release_uinfo();
  ::UserCenterInfo* mutable_uinfo();
  void set_allocated_uinfo(::UserCenterInfo* uinfo);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UnameLoginRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_uinfo();
  void clear_has_uinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserCenterInfo* uinfo_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUnameLoginResImpl();
};
// -------------------------------------------------------------------

class EditProfileReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EditProfileReq) */ {
 public:
  EditProfileReq();
  virtual ~EditProfileReq();

  EditProfileReq(const EditProfileReq& from);

  inline EditProfileReq& operator=(const EditProfileReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EditProfileReq(EditProfileReq&& from) noexcept
    : EditProfileReq() {
    *this = ::std::move(from);
  }

  inline EditProfileReq& operator=(EditProfileReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditProfileReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EditProfileReq* internal_default_instance() {
    return reinterpret_cast<const EditProfileReq*>(
               &_EditProfileReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(EditProfileReq* other);
  friend void swap(EditProfileReq& a, EditProfileReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EditProfileReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EditProfileReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EditProfileReq& from);
  void MergeFrom(const EditProfileReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EditProfileReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // required sint32 uface = 2;
  bool has_uface() const;
  void clear_uface();
  static const int kUfaceFieldNumber = 2;
  ::google::protobuf::int32 uface() const;
  void set_uface(::google::protobuf::int32 value);

  // required sint32 usex = 3;
  bool has_usex() const;
  void clear_usex();
  static const int kUsexFieldNumber = 3;
  ::google::protobuf::int32 usex() const;
  void set_usex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EditProfileReq)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_uface();
  void clear_has_uface();
  void set_has_usex();
  void clear_has_usex();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::int32 uface_;
  ::google::protobuf::int32 usex_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsEditProfileReqImpl();
};
// -------------------------------------------------------------------

class EditProfileRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EditProfileRes) */ {
 public:
  EditProfileRes();
  virtual ~EditProfileRes();

  EditProfileRes(const EditProfileRes& from);

  inline EditProfileRes& operator=(const EditProfileRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EditProfileRes(EditProfileRes&& from) noexcept
    : EditProfileRes() {
    *this = ::std::move(from);
  }

  inline EditProfileRes& operator=(EditProfileRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditProfileRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EditProfileRes* internal_default_instance() {
    return reinterpret_cast<const EditProfileRes*>(
               &_EditProfileRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(EditProfileRes* other);
  friend void swap(EditProfileRes& a, EditProfileRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EditProfileRes* New() const PROTOBUF_FINAL { return New(NULL); }

  EditProfileRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EditProfileRes& from);
  void MergeFrom(const EditProfileRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EditProfileRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EditProfileRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsEditProfileResImpl();
};
// -------------------------------------------------------------------

class AccountUpgradeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountUpgradeReq) */ {
 public:
  AccountUpgradeReq();
  virtual ~AccountUpgradeReq();

  AccountUpgradeReq(const AccountUpgradeReq& from);

  inline AccountUpgradeReq& operator=(const AccountUpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountUpgradeReq(AccountUpgradeReq&& from) noexcept
    : AccountUpgradeReq() {
    *this = ::std::move(from);
  }

  inline AccountUpgradeReq& operator=(AccountUpgradeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUpgradeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountUpgradeReq* internal_default_instance() {
    return reinterpret_cast<const AccountUpgradeReq*>(
               &_AccountUpgradeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(AccountUpgradeReq* other);
  friend void swap(AccountUpgradeReq& a, AccountUpgradeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountUpgradeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountUpgradeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountUpgradeReq& from);
  void MergeFrom(const AccountUpgradeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountUpgradeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uname = 1;
  bool has_uname() const;
  void clear_uname();
  static const int kUnameFieldNumber = 1;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // required string upwd_md5 = 2;
  bool has_upwd_md5() const;
  void clear_upwd_md5();
  static const int kUpwdMd5FieldNumber = 2;
  const ::std::string& upwd_md5() const;
  void set_upwd_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_upwd_md5(::std::string&& value);
  #endif
  void set_upwd_md5(const char* value);
  void set_upwd_md5(const char* value, size_t size);
  ::std::string* mutable_upwd_md5();
  ::std::string* release_upwd_md5();
  void set_allocated_upwd_md5(::std::string* upwd_md5);

  // @@protoc_insertion_point(class_scope:AccountUpgradeReq)
 private:
  void set_has_uname();
  void clear_has_uname();
  void set_has_upwd_md5();
  void clear_has_upwd_md5();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr upwd_md5_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsAccountUpgradeReqImpl();
};
// -------------------------------------------------------------------

class AccountUpgradeRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountUpgradeRes) */ {
 public:
  AccountUpgradeRes();
  virtual ~AccountUpgradeRes();

  AccountUpgradeRes(const AccountUpgradeRes& from);

  inline AccountUpgradeRes& operator=(const AccountUpgradeRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountUpgradeRes(AccountUpgradeRes&& from) noexcept
    : AccountUpgradeRes() {
    *this = ::std::move(from);
  }

  inline AccountUpgradeRes& operator=(AccountUpgradeRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUpgradeRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountUpgradeRes* internal_default_instance() {
    return reinterpret_cast<const AccountUpgradeRes*>(
               &_AccountUpgradeRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AccountUpgradeRes* other);
  friend void swap(AccountUpgradeRes& a, AccountUpgradeRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountUpgradeRes* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountUpgradeRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountUpgradeRes& from);
  void MergeFrom(const AccountUpgradeRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountUpgradeRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AccountUpgradeRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsAccountUpgradeResImpl();
};
// -------------------------------------------------------------------

class LoginOutRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginOutRes) */ {
 public:
  LoginOutRes();
  virtual ~LoginOutRes();

  LoginOutRes(const LoginOutRes& from);

  inline LoginOutRes& operator=(const LoginOutRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginOutRes(LoginOutRes&& from) noexcept
    : LoginOutRes() {
    *this = ::std::move(from);
  }

  inline LoginOutRes& operator=(LoginOutRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginOutRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginOutRes* internal_default_instance() {
    return reinterpret_cast<const LoginOutRes*>(
               &_LoginOutRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(LoginOutRes* other);
  friend void swap(LoginOutRes& a, LoginOutRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginOutRes* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginOutRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginOutRes& from);
  void MergeFrom(const LoginOutRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginOutRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginOutRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsLoginOutResImpl();
};
// -------------------------------------------------------------------

class UserGameInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserGameInfo) */ {
 public:
  UserGameInfo();
  virtual ~UserGameInfo();

  UserGameInfo(const UserGameInfo& from);

  inline UserGameInfo& operator=(const UserGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserGameInfo(UserGameInfo&& from) noexcept
    : UserGameInfo() {
    *this = ::std::move(from);
  }

  inline UserGameInfo& operator=(UserGameInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserGameInfo* internal_default_instance() {
    return reinterpret_cast<const UserGameInfo*>(
               &_UserGameInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(UserGameInfo* other);
  friend void swap(UserGameInfo& a, UserGameInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserGameInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserGameInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserGameInfo& from);
  void MergeFrom(const UserGameInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserGameInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 uchip = 1;
  bool has_uchip() const;
  void clear_uchip();
  static const int kUchipFieldNumber = 1;
  ::google::protobuf::int32 uchip() const;
  void set_uchip(::google::protobuf::int32 value);

  // required sint32 uexp = 2;
  bool has_uexp() const;
  void clear_uexp();
  static const int kUexpFieldNumber = 2;
  ::google::protobuf::int32 uexp() const;
  void set_uexp(::google::protobuf::int32 value);

  // required sint32 uvip = 3;
  bool has_uvip() const;
  void clear_uvip();
  static const int kUvipFieldNumber = 3;
  ::google::protobuf::int32 uvip() const;
  void set_uvip(::google::protobuf::int32 value);

  // required sint32 uchip2 = 4;
  bool has_uchip2() const;
  void clear_uchip2();
  static const int kUchip2FieldNumber = 4;
  ::google::protobuf::int32 uchip2() const;
  void set_uchip2(::google::protobuf::int32 value);

  // required sint32 uchip3 = 5;
  bool has_uchip3() const;
  void clear_uchip3();
  static const int kUchip3FieldNumber = 5;
  ::google::protobuf::int32 uchip3() const;
  void set_uchip3(::google::protobuf::int32 value);

  // required sint32 udata1 = 6;
  bool has_udata1() const;
  void clear_udata1();
  static const int kUdata1FieldNumber = 6;
  ::google::protobuf::int32 udata1() const;
  void set_udata1(::google::protobuf::int32 value);

  // required sint32 udata2 = 7;
  bool has_udata2() const;
  void clear_udata2();
  static const int kUdata2FieldNumber = 7;
  ::google::protobuf::int32 udata2() const;
  void set_udata2(::google::protobuf::int32 value);

  // required sint32 udata3 = 8;
  bool has_udata3() const;
  void clear_udata3();
  static const int kUdata3FieldNumber = 8;
  ::google::protobuf::int32 udata3() const;
  void set_udata3(::google::protobuf::int32 value);

  // required sint32 bonues_status = 9;
  bool has_bonues_status() const;
  void clear_bonues_status();
  static const int kBonuesStatusFieldNumber = 9;
  ::google::protobuf::int32 bonues_status() const;
  void set_bonues_status(::google::protobuf::int32 value);

  // required sint32 bonues = 10;
  bool has_bonues() const;
  void clear_bonues();
  static const int kBonuesFieldNumber = 10;
  ::google::protobuf::int32 bonues() const;
  void set_bonues(::google::protobuf::int32 value);

  // required sint32 days = 11;
  bool has_days() const;
  void clear_days();
  static const int kDaysFieldNumber = 11;
  ::google::protobuf::int32 days() const;
  void set_days(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserGameInfo)
 private:
  void set_has_uchip();
  void clear_has_uchip();
  void set_has_uexp();
  void clear_has_uexp();
  void set_has_uvip();
  void clear_has_uvip();
  void set_has_uchip2();
  void clear_has_uchip2();
  void set_has_uchip3();
  void clear_has_uchip3();
  void set_has_udata1();
  void clear_has_udata1();
  void set_has_udata2();
  void clear_has_udata2();
  void set_has_udata3();
  void clear_has_udata3();
  void set_has_bonues_status();
  void clear_has_bonues_status();
  void set_has_bonues();
  void clear_has_bonues();
  void set_has_days();
  void clear_has_days();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 uchip_;
  ::google::protobuf::int32 uexp_;
  ::google::protobuf::int32 uvip_;
  ::google::protobuf::int32 uchip2_;
  ::google::protobuf::int32 uchip3_;
  ::google::protobuf::int32 udata1_;
  ::google::protobuf::int32 udata2_;
  ::google::protobuf::int32 udata3_;
  ::google::protobuf::int32 bonues_status_;
  ::google::protobuf::int32 bonues_;
  ::google::protobuf::int32 days_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserGameInfoImpl();
};
// -------------------------------------------------------------------

class GetUgameInfoRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetUgameInfoRes) */ {
 public:
  GetUgameInfoRes();
  virtual ~GetUgameInfoRes();

  GetUgameInfoRes(const GetUgameInfoRes& from);

  inline GetUgameInfoRes& operator=(const GetUgameInfoRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUgameInfoRes(GetUgameInfoRes&& from) noexcept
    : GetUgameInfoRes() {
    *this = ::std::move(from);
  }

  inline GetUgameInfoRes& operator=(GetUgameInfoRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUgameInfoRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetUgameInfoRes* internal_default_instance() {
    return reinterpret_cast<const GetUgameInfoRes*>(
               &_GetUgameInfoRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetUgameInfoRes* other);
  friend void swap(GetUgameInfoRes& a, GetUgameInfoRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUgameInfoRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUgameInfoRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUgameInfoRes& from);
  void MergeFrom(const GetUgameInfoRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUgameInfoRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserGameInfo uinfo = 2;
  bool has_uinfo() const;
  void clear_uinfo();
  static const int kUinfoFieldNumber = 2;
  const ::UserGameInfo& uinfo() const;
  ::UserGameInfo* release_uinfo();
  ::UserGameInfo* mutable_uinfo();
  void set_allocated_uinfo(::UserGameInfo* uinfo);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetUgameInfoRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_uinfo();
  void clear_has_uinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserGameInfo* uinfo_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetUgameInfoResImpl();
};
// -------------------------------------------------------------------

class RecvLoginBonuesRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RecvLoginBonuesRes) */ {
 public:
  RecvLoginBonuesRes();
  virtual ~RecvLoginBonuesRes();

  RecvLoginBonuesRes(const RecvLoginBonuesRes& from);

  inline RecvLoginBonuesRes& operator=(const RecvLoginBonuesRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecvLoginBonuesRes(RecvLoginBonuesRes&& from) noexcept
    : RecvLoginBonuesRes() {
    *this = ::std::move(from);
  }

  inline RecvLoginBonuesRes& operator=(RecvLoginBonuesRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvLoginBonuesRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvLoginBonuesRes* internal_default_instance() {
    return reinterpret_cast<const RecvLoginBonuesRes*>(
               &_RecvLoginBonuesRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RecvLoginBonuesRes* other);
  friend void swap(RecvLoginBonuesRes& a, RecvLoginBonuesRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvLoginBonuesRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RecvLoginBonuesRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecvLoginBonuesRes& from);
  void MergeFrom(const RecvLoginBonuesRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecvLoginBonuesRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RecvLoginBonuesRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsRecvLoginBonuesResImpl();
};
// -------------------------------------------------------------------

class WorldChipRankInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WorldChipRankInfo) */ {
 public:
  WorldChipRankInfo();
  virtual ~WorldChipRankInfo();

  WorldChipRankInfo(const WorldChipRankInfo& from);

  inline WorldChipRankInfo& operator=(const WorldChipRankInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldChipRankInfo(WorldChipRankInfo&& from) noexcept
    : WorldChipRankInfo() {
    *this = ::std::move(from);
  }

  inline WorldChipRankInfo& operator=(WorldChipRankInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldChipRankInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldChipRankInfo* internal_default_instance() {
    return reinterpret_cast<const WorldChipRankInfo*>(
               &_WorldChipRankInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(WorldChipRankInfo* other);
  friend void swap(WorldChipRankInfo& a, WorldChipRankInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldChipRankInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldChipRankInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldChipRankInfo& from);
  void MergeFrom(const WorldChipRankInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldChipRankInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // required sint32 uface = 2;
  bool has_uface() const;
  void clear_uface();
  static const int kUfaceFieldNumber = 2;
  ::google::protobuf::int32 uface() const;
  void set_uface(::google::protobuf::int32 value);

  // required sint32 usex = 3;
  bool has_usex() const;
  void clear_usex();
  static const int kUsexFieldNumber = 3;
  ::google::protobuf::int32 usex() const;
  void set_usex(::google::protobuf::int32 value);

  // required sint32 uvip = 4;
  bool has_uvip() const;
  void clear_uvip();
  static const int kUvipFieldNumber = 4;
  ::google::protobuf::int32 uvip() const;
  void set_uvip(::google::protobuf::int32 value);

  // required sint32 uchip = 5;
  bool has_uchip() const;
  void clear_uchip();
  static const int kUchipFieldNumber = 5;
  ::google::protobuf::int32 uchip() const;
  void set_uchip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WorldChipRankInfo)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_uface();
  void clear_has_uface();
  void set_has_usex();
  void clear_has_usex();
  void set_has_uvip();
  void clear_has_uvip();
  void set_has_uchip();
  void clear_has_uchip();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::int32 uface_;
  ::google::protobuf::int32 usex_;
  ::google::protobuf::int32 uvip_;
  ::google::protobuf::int32 uchip_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsWorldChipRankInfoImpl();
};
// -------------------------------------------------------------------

class GetWorldRankUchipRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetWorldRankUchipRes) */ {
 public:
  GetWorldRankUchipRes();
  virtual ~GetWorldRankUchipRes();

  GetWorldRankUchipRes(const GetWorldRankUchipRes& from);

  inline GetWorldRankUchipRes& operator=(const GetWorldRankUchipRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetWorldRankUchipRes(GetWorldRankUchipRes&& from) noexcept
    : GetWorldRankUchipRes() {
    *this = ::std::move(from);
  }

  inline GetWorldRankUchipRes& operator=(GetWorldRankUchipRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetWorldRankUchipRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetWorldRankUchipRes* internal_default_instance() {
    return reinterpret_cast<const GetWorldRankUchipRes*>(
               &_GetWorldRankUchipRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetWorldRankUchipRes* other);
  friend void swap(GetWorldRankUchipRes& a, GetWorldRankUchipRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetWorldRankUchipRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetWorldRankUchipRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetWorldRankUchipRes& from);
  void MergeFrom(const GetWorldRankUchipRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetWorldRankUchipRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WorldChipRankInfo rank_info = 2;
  int rank_info_size() const;
  void clear_rank_info();
  static const int kRankInfoFieldNumber = 2;
  const ::WorldChipRankInfo& rank_info(int index) const;
  ::WorldChipRankInfo* mutable_rank_info(int index);
  ::WorldChipRankInfo* add_rank_info();
  ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >*
      mutable_rank_info();
  const ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >&
      rank_info() const;

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetWorldRankUchipRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo > rank_info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetWorldRankUchipResImpl();
};
// -------------------------------------------------------------------

class GetSysMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetSysMsgReq) */ {
 public:
  GetSysMsgReq();
  virtual ~GetSysMsgReq();

  GetSysMsgReq(const GetSysMsgReq& from);

  inline GetSysMsgReq& operator=(const GetSysMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSysMsgReq(GetSysMsgReq&& from) noexcept
    : GetSysMsgReq() {
    *this = ::std::move(from);
  }

  inline GetSysMsgReq& operator=(GetSysMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSysMsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSysMsgReq* internal_default_instance() {
    return reinterpret_cast<const GetSysMsgReq*>(
               &_GetSysMsgReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetSysMsgReq* other);
  friend void swap(GetSysMsgReq& a, GetSysMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSysMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSysMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSysMsgReq& from);
  void MergeFrom(const GetSysMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSysMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 ver_num = 1;
  bool has_ver_num() const;
  void clear_ver_num();
  static const int kVerNumFieldNumber = 1;
  ::google::protobuf::int32 ver_num() const;
  void set_ver_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetSysMsgReq)
 private:
  void set_has_ver_num();
  void clear_has_ver_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ver_num_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetSysMsgReqImpl();
};
// -------------------------------------------------------------------

class GetSysMsgRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetSysMsgRes) */ {
 public:
  GetSysMsgRes();
  virtual ~GetSysMsgRes();

  GetSysMsgRes(const GetSysMsgRes& from);

  inline GetSysMsgRes& operator=(const GetSysMsgRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSysMsgRes(GetSysMsgRes&& from) noexcept
    : GetSysMsgRes() {
    *this = ::std::move(from);
  }

  inline GetSysMsgRes& operator=(GetSysMsgRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSysMsgRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSysMsgRes* internal_default_instance() {
    return reinterpret_cast<const GetSysMsgRes*>(
               &_GetSysMsgRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GetSysMsgRes* other);
  friend void swap(GetSysMsgRes& a, GetSysMsgRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSysMsgRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSysMsgRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSysMsgRes& from);
  void MergeFrom(const GetSysMsgRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSysMsgRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string sys_msgs = 3;
  int sys_msgs_size() const;
  void clear_sys_msgs();
  static const int kSysMsgsFieldNumber = 3;
  const ::std::string& sys_msgs(int index) const;
  ::std::string* mutable_sys_msgs(int index);
  void set_sys_msgs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_sys_msgs(int index, ::std::string&& value);
  #endif
  void set_sys_msgs(int index, const char* value);
  void set_sys_msgs(int index, const char* value, size_t size);
  ::std::string* add_sys_msgs();
  void add_sys_msgs(const ::std::string& value);
  #if LANG_CXX11
  void add_sys_msgs(::std::string&& value);
  #endif
  void add_sys_msgs(const char* value);
  void add_sys_msgs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& sys_msgs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sys_msgs();

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required sint32 ver_num = 2;
  bool has_ver_num() const;
  void clear_ver_num();
  static const int kVerNumFieldNumber = 2;
  ::google::protobuf::int32 ver_num() const;
  void set_ver_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetSysMsgRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_ver_num();
  void clear_has_ver_num();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sys_msgs_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 ver_num_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetSysMsgResImpl();
};
// -------------------------------------------------------------------

class LoginLogicRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginLogicRes) */ {
 public:
  LoginLogicRes();
  virtual ~LoginLogicRes();

  LoginLogicRes(const LoginLogicRes& from);

  inline LoginLogicRes& operator=(const LoginLogicRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginLogicRes(LoginLogicRes&& from) noexcept
    : LoginLogicRes() {
    *this = ::std::move(from);
  }

  inline LoginLogicRes& operator=(LoginLogicRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginLogicRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginLogicRes* internal_default_instance() {
    return reinterpret_cast<const LoginLogicRes*>(
               &_LoginLogicRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(LoginLogicRes* other);
  friend void swap(LoginLogicRes& a, LoginLogicRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginLogicRes* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginLogicRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginLogicRes& from);
  void MergeFrom(const LoginLogicRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginLogicRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginLogicRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsLoginLogicResImpl();
};
// -------------------------------------------------------------------

class EnterZoneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterZoneReq) */ {
 public:
  EnterZoneReq();
  virtual ~EnterZoneReq();

  EnterZoneReq(const EnterZoneReq& from);

  inline EnterZoneReq& operator=(const EnterZoneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterZoneReq(EnterZoneReq&& from) noexcept
    : EnterZoneReq() {
    *this = ::std::move(from);
  }

  inline EnterZoneReq& operator=(EnterZoneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterZoneReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterZoneReq* internal_default_instance() {
    return reinterpret_cast<const EnterZoneReq*>(
               &_EnterZoneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(EnterZoneReq* other);
  friend void swap(EnterZoneReq& a, EnterZoneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterZoneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterZoneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterZoneReq& from);
  void MergeFrom(const EnterZoneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterZoneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 zid = 1;
  bool has_zid() const;
  void clear_zid();
  static const int kZidFieldNumber = 1;
  ::google::protobuf::int32 zid() const;
  void set_zid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EnterZoneReq)
 private:
  void set_has_zid();
  void clear_has_zid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 zid_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsEnterZoneReqImpl();
};
// -------------------------------------------------------------------

class EnterZoneRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterZoneRes) */ {
 public:
  EnterZoneRes();
  virtual ~EnterZoneRes();

  EnterZoneRes(const EnterZoneRes& from);

  inline EnterZoneRes& operator=(const EnterZoneRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterZoneRes(EnterZoneRes&& from) noexcept
    : EnterZoneRes() {
    *this = ::std::move(from);
  }

  inline EnterZoneRes& operator=(EnterZoneRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterZoneRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterZoneRes* internal_default_instance() {
    return reinterpret_cast<const EnterZoneRes*>(
               &_EnterZoneRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(EnterZoneRes* other);
  friend void swap(EnterZoneRes& a, EnterZoneRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterZoneRes* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterZoneRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterZoneRes& from);
  void MergeFrom(const EnterZoneRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterZoneRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EnterZoneRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsEnterZoneResImpl();
};
// -------------------------------------------------------------------

class EnterMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterMatch) */ {
 public:
  EnterMatch();
  virtual ~EnterMatch();

  EnterMatch(const EnterMatch& from);

  inline EnterMatch& operator=(const EnterMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterMatch(EnterMatch&& from) noexcept
    : EnterMatch() {
    *this = ::std::move(from);
  }

  inline EnterMatch& operator=(EnterMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterMatch* internal_default_instance() {
    return reinterpret_cast<const EnterMatch*>(
               &_EnterMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(EnterMatch* other);
  friend void swap(EnterMatch& a, EnterMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterMatch& from);
  void MergeFrom(const EnterMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 zid = 1;
  bool has_zid() const;
  void clear_zid();
  static const int kZidFieldNumber = 1;
  ::google::protobuf::int32 zid() const;
  void set_zid(::google::protobuf::int32 value);

  // required sint32 matchid = 2;
  bool has_matchid() const;
  void clear_matchid();
  static const int kMatchidFieldNumber = 2;
  ::google::protobuf::int32 matchid() const;
  void set_matchid(::google::protobuf::int32 value);

  // required sint32 seatid = 3;
  bool has_seatid() const;
  void clear_seatid();
  static const int kSeatidFieldNumber = 3;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // required sint32 side = 4;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 4;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EnterMatch)
 private:
  void set_has_zid();
  void clear_has_zid();
  void set_has_matchid();
  void clear_has_matchid();
  void set_has_seatid();
  void clear_has_seatid();
  void set_has_side();
  void clear_has_side();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 zid_;
  ::google::protobuf::int32 matchid_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 side_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsEnterMatchImpl();
};
// -------------------------------------------------------------------

class UserArrived : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserArrived) */ {
 public:
  UserArrived();
  virtual ~UserArrived();

  UserArrived(const UserArrived& from);

  inline UserArrived& operator=(const UserArrived& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserArrived(UserArrived&& from) noexcept
    : UserArrived() {
    *this = ::std::move(from);
  }

  inline UserArrived& operator=(UserArrived&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserArrived& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserArrived* internal_default_instance() {
    return reinterpret_cast<const UserArrived*>(
               &_UserArrived_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(UserArrived* other);
  friend void swap(UserArrived& a, UserArrived& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserArrived* New() const PROTOBUF_FINAL { return New(NULL); }

  UserArrived* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserArrived& from);
  void MergeFrom(const UserArrived& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserArrived* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string unick = 1;
  bool has_unick() const;
  void clear_unick();
  static const int kUnickFieldNumber = 1;
  const ::std::string& unick() const;
  void set_unick(const ::std::string& value);
  #if LANG_CXX11
  void set_unick(::std::string&& value);
  #endif
  void set_unick(const char* value);
  void set_unick(const char* value, size_t size);
  ::std::string* mutable_unick();
  ::std::string* release_unick();
  void set_allocated_unick(::std::string* unick);

  // required string roomid = 6;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomidFieldNumber = 6;
  const ::std::string& roomid() const;
  void set_roomid(const ::std::string& value);
  #if LANG_CXX11
  void set_roomid(::std::string&& value);
  #endif
  void set_roomid(const char* value);
  void set_roomid(const char* value, size_t size);
  ::std::string* mutable_roomid();
  ::std::string* release_roomid();
  void set_allocated_roomid(::std::string* roomid);

  // optional string brandid = 9;
  bool has_brandid() const;
  void clear_brandid();
  static const int kBrandidFieldNumber = 9;
  const ::std::string& brandid() const;
  void set_brandid(const ::std::string& value);
  #if LANG_CXX11
  void set_brandid(::std::string&& value);
  #endif
  void set_brandid(const char* value);
  void set_brandid(const char* value, size_t size);
  ::std::string* mutable_brandid();
  ::std::string* release_brandid();
  void set_allocated_brandid(::std::string* brandid);

  // optional string numberid = 10;
  bool has_numberid() const;
  void clear_numberid();
  static const int kNumberidFieldNumber = 10;
  const ::std::string& numberid() const;
  void set_numberid(const ::std::string& value);
  #if LANG_CXX11
  void set_numberid(::std::string&& value);
  #endif
  void set_numberid(const char* value);
  void set_numberid(const char* value, size_t size);
  ::std::string* mutable_numberid();
  ::std::string* release_numberid();
  void set_allocated_numberid(::std::string* numberid);

  // optional string areaid = 11;
  bool has_areaid() const;
  void clear_areaid();
  static const int kAreaidFieldNumber = 11;
  const ::std::string& areaid() const;
  void set_areaid(const ::std::string& value);
  #if LANG_CXX11
  void set_areaid(::std::string&& value);
  #endif
  void set_areaid(const char* value);
  void set_areaid(const char* value, size_t size);
  ::std::string* mutable_areaid();
  ::std::string* release_areaid();
  void set_allocated_areaid(::std::string* areaid);

  // required sint32 uface = 2;
  bool has_uface() const;
  void clear_uface();
  static const int kUfaceFieldNumber = 2;
  ::google::protobuf::int32 uface() const;
  void set_uface(::google::protobuf::int32 value);

  // required sint32 usex = 3;
  bool has_usex() const;
  void clear_usex();
  static const int kUsexFieldNumber = 3;
  ::google::protobuf::int32 usex() const;
  void set_usex(::google::protobuf::int32 value);

  // required sint32 seatid = 4;
  bool has_seatid() const;
  void clear_seatid();
  static const int kSeatidFieldNumber = 4;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // required sint32 side = 5;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 5;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // required bool ishost = 7;
  bool has_ishost() const;
  void clear_ishost();
  static const int kIshostFieldNumber = 7;
  bool ishost() const;
  void set_ishost(bool value);

  // required bool isoffline = 8;
  bool has_isoffline() const;
  void clear_isoffline();
  static const int kIsofflineFieldNumber = 8;
  bool isoffline() const;
  void set_isoffline(bool value);

  // @@protoc_insertion_point(class_scope:UserArrived)
 private:
  void set_has_unick();
  void clear_has_unick();
  void set_has_uface();
  void clear_has_uface();
  void set_has_usex();
  void clear_has_usex();
  void set_has_seatid();
  void clear_has_seatid();
  void set_has_side();
  void clear_has_side();
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_ishost();
  void clear_has_ishost();
  void set_has_isoffline();
  void clear_has_isoffline();
  void set_has_brandid();
  void clear_has_brandid();
  void set_has_numberid();
  void clear_has_numberid();
  void set_has_areaid();
  void clear_has_areaid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unick_;
  ::google::protobuf::internal::ArenaStringPtr roomid_;
  ::google::protobuf::internal::ArenaStringPtr brandid_;
  ::google::protobuf::internal::ArenaStringPtr numberid_;
  ::google::protobuf::internal::ArenaStringPtr areaid_;
  ::google::protobuf::int32 uface_;
  ::google::protobuf::int32 usex_;
  ::google::protobuf::int32 seatid_;
  ::google::protobuf::int32 side_;
  bool ishost_;
  bool isoffline_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserArrivedImpl();
};
// -------------------------------------------------------------------

class ExitMatchRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ExitMatchRes) */ {
 public:
  ExitMatchRes();
  virtual ~ExitMatchRes();

  ExitMatchRes(const ExitMatchRes& from);

  inline ExitMatchRes& operator=(const ExitMatchRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitMatchRes(ExitMatchRes&& from) noexcept
    : ExitMatchRes() {
    *this = ::std::move(from);
  }

  inline ExitMatchRes& operator=(ExitMatchRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitMatchRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitMatchRes* internal_default_instance() {
    return reinterpret_cast<const ExitMatchRes*>(
               &_ExitMatchRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ExitMatchRes* other);
  friend void swap(ExitMatchRes& a, ExitMatchRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitMatchRes* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitMatchRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitMatchRes& from);
  void MergeFrom(const ExitMatchRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitMatchRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ExitMatchRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsExitMatchResImpl();
};
// -------------------------------------------------------------------

class UserExitMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserExitMatch) */ {
 public:
  UserExitMatch();
  virtual ~UserExitMatch();

  UserExitMatch(const UserExitMatch& from);

  inline UserExitMatch& operator=(const UserExitMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserExitMatch(UserExitMatch&& from) noexcept
    : UserExitMatch() {
    *this = ::std::move(from);
  }

  inline UserExitMatch& operator=(UserExitMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserExitMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserExitMatch* internal_default_instance() {
    return reinterpret_cast<const UserExitMatch*>(
               &_UserExitMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(UserExitMatch* other);
  friend void swap(UserExitMatch& a, UserExitMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserExitMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  UserExitMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserExitMatch& from);
  void MergeFrom(const UserExitMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserExitMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 seatid = 1;
  bool has_seatid() const;
  void clear_seatid();
  static const int kSeatidFieldNumber = 1;
  ::google::protobuf::int32 seatid() const;
  void set_seatid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserExitMatch)
 private:
  void set_has_seatid();
  void clear_has_seatid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 seatid_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserExitMatchImpl();
};
// -------------------------------------------------------------------

class GameStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameStart) */ {
 public:
  GameStart();
  virtual ~GameStart();

  GameStart(const GameStart& from);

  inline GameStart& operator=(const GameStart& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameStart(GameStart&& from) noexcept
    : GameStart() {
    *this = ::std::move(from);
  }

  inline GameStart& operator=(GameStart&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameStart& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameStart* internal_default_instance() {
    return reinterpret_cast<const GameStart*>(
               &_GameStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(GameStart* other);
  friend void swap(GameStart& a, GameStart& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameStart* New() const PROTOBUF_FINAL { return New(NULL); }

  GameStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameStart& from);
  void MergeFrom(const GameStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 heroes = 1;
  int heroes_size() const;
  void clear_heroes();
  static const int kHeroesFieldNumber = 1;
  ::google::protobuf::int32 heroes(int index) const;
  void set_heroes(int index, ::google::protobuf::int32 value);
  void add_heroes(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      heroes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_heroes();

  // @@protoc_insertion_point(class_scope:GameStart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > heroes_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGameStartImpl();
};
// -------------------------------------------------------------------

class UserRegistReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserRegistReq) */ {
 public:
  UserRegistReq();
  virtual ~UserRegistReq();

  UserRegistReq(const UserRegistReq& from);

  inline UserRegistReq& operator=(const UserRegistReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserRegistReq(UserRegistReq&& from) noexcept
    : UserRegistReq() {
    *this = ::std::move(from);
  }

  inline UserRegistReq& operator=(UserRegistReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRegistReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserRegistReq* internal_default_instance() {
    return reinterpret_cast<const UserRegistReq*>(
               &_UserRegistReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(UserRegistReq* other);
  friend void swap(UserRegistReq& a, UserRegistReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserRegistReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UserRegistReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserRegistReq& from);
  void MergeFrom(const UserRegistReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserRegistReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uname = 1;
  bool has_uname() const;
  void clear_uname();
  static const int kUnameFieldNumber = 1;
  const ::std::string& uname() const;
  void set_uname(const ::std::string& value);
  #if LANG_CXX11
  void set_uname(::std::string&& value);
  #endif
  void set_uname(const char* value);
  void set_uname(const char* value, size_t size);
  ::std::string* mutable_uname();
  ::std::string* release_uname();
  void set_allocated_uname(::std::string* uname);

  // required string upwd_md5 = 2;
  bool has_upwd_md5() const;
  void clear_upwd_md5();
  static const int kUpwdMd5FieldNumber = 2;
  const ::std::string& upwd_md5() const;
  void set_upwd_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_upwd_md5(::std::string&& value);
  #endif
  void set_upwd_md5(const char* value);
  void set_upwd_md5(const char* value, size_t size);
  ::std::string* mutable_upwd_md5();
  ::std::string* release_upwd_md5();
  void set_allocated_upwd_md5(::std::string* upwd_md5);

  // @@protoc_insertion_point(class_scope:UserRegistReq)
 private:
  void set_has_uname();
  void clear_has_uname();
  void set_has_upwd_md5();
  void clear_has_upwd_md5();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uname_;
  ::google::protobuf::internal::ArenaStringPtr upwd_md5_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserRegistReqImpl();
};
// -------------------------------------------------------------------

class UserRegistRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserRegistRes) */ {
 public:
  UserRegistRes();
  virtual ~UserRegistRes();

  UserRegistRes(const UserRegistRes& from);

  inline UserRegistRes& operator=(const UserRegistRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserRegistRes(UserRegistRes&& from) noexcept
    : UserRegistRes() {
    *this = ::std::move(from);
  }

  inline UserRegistRes& operator=(UserRegistRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserRegistRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserRegistRes* internal_default_instance() {
    return reinterpret_cast<const UserRegistRes*>(
               &_UserRegistRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(UserRegistRes* other);
  friend void swap(UserRegistRes& a, UserRegistRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserRegistRes* New() const PROTOBUF_FINAL { return New(NULL); }

  UserRegistRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserRegistRes& from);
  void MergeFrom(const UserRegistRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserRegistRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserRegistRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserRegistResImpl();
};
// -------------------------------------------------------------------

class CreateRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRoomReq) */ {
 public:
  CreateRoomReq();
  virtual ~CreateRoomReq();

  CreateRoomReq(const CreateRoomReq& from);

  inline CreateRoomReq& operator=(const CreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRoomReq(CreateRoomReq&& from) noexcept
    : CreateRoomReq() {
    *this = ::std::move(from);
  }

  inline CreateRoomReq& operator=(CreateRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const CreateRoomReq*>(
               &_CreateRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CreateRoomReq* other);
  friend void swap(CreateRoomReq& a, CreateRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomReq& from);
  void MergeFrom(const CreateRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string room_info = 1;
  bool has_room_info() const;
  void clear_room_info();
  static const int kRoomInfoFieldNumber = 1;
  const ::std::string& room_info() const;
  void set_room_info(const ::std::string& value);
  #if LANG_CXX11
  void set_room_info(::std::string&& value);
  #endif
  void set_room_info(const char* value);
  void set_room_info(const char* value, size_t size);
  ::std::string* mutable_room_info();
  ::std::string* release_room_info();
  void set_allocated_room_info(::std::string* room_info);

  // @@protoc_insertion_point(class_scope:CreateRoomReq)
 private:
  void set_has_room_info();
  void clear_has_room_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr room_info_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsCreateRoomReqImpl();
};
// -------------------------------------------------------------------

class CreateRoomRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRoomRes) */ {
 public:
  CreateRoomRes();
  virtual ~CreateRoomRes();

  CreateRoomRes(const CreateRoomRes& from);

  inline CreateRoomRes& operator=(const CreateRoomRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRoomRes(CreateRoomRes&& from) noexcept
    : CreateRoomRes() {
    *this = ::std::move(from);
  }

  inline CreateRoomRes& operator=(CreateRoomRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRoomRes* internal_default_instance() {
    return reinterpret_cast<const CreateRoomRes*>(
               &_CreateRoomRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CreateRoomRes* other);
  friend void swap(CreateRoomRes& a, CreateRoomRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRoomRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomRes& from);
  void MergeFrom(const CreateRoomRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string room_info = 2;
  bool has_room_info() const;
  void clear_room_info();
  static const int kRoomInfoFieldNumber = 2;
  const ::std::string& room_info() const;
  void set_room_info(const ::std::string& value);
  #if LANG_CXX11
  void set_room_info(::std::string&& value);
  #endif
  void set_room_info(const char* value);
  void set_room_info(const char* value, size_t size);
  ::std::string* mutable_room_info();
  ::std::string* release_room_info();
  void set_allocated_room_info(::std::string* room_info);

  // optional .UserArrived user_info = 3;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 3;
  const ::UserArrived& user_info() const;
  ::UserArrived* release_user_info();
  ::UserArrived* mutable_user_info();
  void set_allocated_user_info(::UserArrived* user_info);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateRoomRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_room_info();
  void clear_has_room_info();
  void set_has_user_info();
  void clear_has_user_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr room_info_;
  ::UserArrived* user_info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsCreateRoomResImpl();
};
// -------------------------------------------------------------------

class JoinRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:JoinRoomReq) */ {
 public:
  JoinRoomReq();
  virtual ~JoinRoomReq();

  JoinRoomReq(const JoinRoomReq& from);

  inline JoinRoomReq& operator=(const JoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinRoomReq(JoinRoomReq&& from) noexcept
    : JoinRoomReq() {
    *this = ::std::move(from);
  }

  inline JoinRoomReq& operator=(JoinRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinRoomReq* internal_default_instance() {
    return reinterpret_cast<const JoinRoomReq*>(
               &_JoinRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(JoinRoomReq* other);
  friend void swap(JoinRoomReq& a, JoinRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomReq& from);
  void MergeFrom(const JoinRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  const ::std::string& room_id() const;
  void set_room_id(const ::std::string& value);
  #if LANG_CXX11
  void set_room_id(::std::string&& value);
  #endif
  void set_room_id(const char* value);
  void set_room_id(const char* value, size_t size);
  ::std::string* mutable_room_id();
  ::std::string* release_room_id();
  void set_allocated_room_id(::std::string* room_id);

  // @@protoc_insertion_point(class_scope:JoinRoomReq)
 private:
  void set_has_room_id();
  void clear_has_room_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr room_id_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsJoinRoomReqImpl();
};
// -------------------------------------------------------------------

class JoinRoomRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:JoinRoomRes) */ {
 public:
  JoinRoomRes();
  virtual ~JoinRoomRes();

  JoinRoomRes(const JoinRoomRes& from);

  inline JoinRoomRes& operator=(const JoinRoomRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinRoomRes(JoinRoomRes&& from) noexcept
    : JoinRoomRes() {
    *this = ::std::move(from);
  }

  inline JoinRoomRes& operator=(JoinRoomRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinRoomRes* internal_default_instance() {
    return reinterpret_cast<const JoinRoomRes*>(
               &_JoinRoomRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(JoinRoomRes* other);
  friend void swap(JoinRoomRes& a, JoinRoomRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinRoomRes* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomRes& from);
  void MergeFrom(const JoinRoomRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UserArrived users_info = 3;
  int users_info_size() const;
  void clear_users_info();
  static const int kUsersInfoFieldNumber = 3;
  const ::UserArrived& users_info(int index) const;
  ::UserArrived* mutable_users_info(int index);
  ::UserArrived* add_users_info();
  ::google::protobuf::RepeatedPtrField< ::UserArrived >*
      mutable_users_info();
  const ::google::protobuf::RepeatedPtrField< ::UserArrived >&
      users_info() const;

  // optional string room_info = 2;
  bool has_room_info() const;
  void clear_room_info();
  static const int kRoomInfoFieldNumber = 2;
  const ::std::string& room_info() const;
  void set_room_info(const ::std::string& value);
  #if LANG_CXX11
  void set_room_info(::std::string&& value);
  #endif
  void set_room_info(const char* value);
  void set_room_info(const char* value, size_t size);
  ::std::string* mutable_room_info();
  ::std::string* release_room_info();
  void set_allocated_room_info(::std::string* room_info);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JoinRoomRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_room_info();
  void clear_has_room_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UserArrived > users_info_;
  ::google::protobuf::internal::ArenaStringPtr room_info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsJoinRoomResImpl();
};
// -------------------------------------------------------------------

class ExitRoomRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ExitRoomRes) */ {
 public:
  ExitRoomRes();
  virtual ~ExitRoomRes();

  ExitRoomRes(const ExitRoomRes& from);

  inline ExitRoomRes& operator=(const ExitRoomRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitRoomRes(ExitRoomRes&& from) noexcept
    : ExitRoomRes() {
    *this = ::std::move(from);
  }

  inline ExitRoomRes& operator=(ExitRoomRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitRoomRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitRoomRes* internal_default_instance() {
    return reinterpret_cast<const ExitRoomRes*>(
               &_ExitRoomRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ExitRoomRes* other);
  friend void swap(ExitRoomRes& a, ExitRoomRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitRoomRes* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitRoomRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitRoomRes& from);
  void MergeFrom(const ExitRoomRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitRoomRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .UserArrived user_info = 2;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 2;
  const ::UserArrived& user_info() const;
  ::UserArrived* release_user_info();
  ::UserArrived* mutable_user_info();
  void set_allocated_user_info(::UserArrived* user_info);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ExitRoomRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_user_info();
  void clear_has_user_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserArrived* user_info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsExitRoomResImpl();
};
// -------------------------------------------------------------------

class DessolveRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DessolveRes) */ {
 public:
  DessolveRes();
  virtual ~DessolveRes();

  DessolveRes(const DessolveRes& from);

  inline DessolveRes& operator=(const DessolveRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DessolveRes(DessolveRes&& from) noexcept
    : DessolveRes() {
    *this = ::std::move(from);
  }

  inline DessolveRes& operator=(DessolveRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DessolveRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DessolveRes* internal_default_instance() {
    return reinterpret_cast<const DessolveRes*>(
               &_DessolveRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(DessolveRes* other);
  friend void swap(DessolveRes& a, DessolveRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DessolveRes* New() const PROTOBUF_FINAL { return New(NULL); }

  DessolveRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DessolveRes& from);
  void MergeFrom(const DessolveRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DessolveRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DessolveRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsDessolveResImpl();
};
// -------------------------------------------------------------------

class GetCreateStatusRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetCreateStatusRes) */ {
 public:
  GetCreateStatusRes();
  virtual ~GetCreateStatusRes();

  GetCreateStatusRes(const GetCreateStatusRes& from);

  inline GetCreateStatusRes& operator=(const GetCreateStatusRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCreateStatusRes(GetCreateStatusRes&& from) noexcept
    : GetCreateStatusRes() {
    *this = ::std::move(from);
  }

  inline GetCreateStatusRes& operator=(GetCreateStatusRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCreateStatusRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCreateStatusRes* internal_default_instance() {
    return reinterpret_cast<const GetCreateStatusRes*>(
               &_GetCreateStatusRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(GetCreateStatusRes* other);
  friend void swap(GetCreateStatusRes& a, GetCreateStatusRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCreateStatusRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCreateStatusRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCreateStatusRes& from);
  void MergeFrom(const GetCreateStatusRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCreateStatusRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetCreateStatusRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsGetCreateStatusResImpl();
};
// -------------------------------------------------------------------

class BackRoomRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BackRoomRes) */ {
 public:
  BackRoomRes();
  virtual ~BackRoomRes();

  BackRoomRes(const BackRoomRes& from);

  inline BackRoomRes& operator=(const BackRoomRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackRoomRes(BackRoomRes&& from) noexcept
    : BackRoomRes() {
    *this = ::std::move(from);
  }

  inline BackRoomRes& operator=(BackRoomRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackRoomRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BackRoomRes* internal_default_instance() {
    return reinterpret_cast<const BackRoomRes*>(
               &_BackRoomRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(BackRoomRes* other);
  friend void swap(BackRoomRes& a, BackRoomRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackRoomRes* New() const PROTOBUF_FINAL { return New(NULL); }

  BackRoomRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackRoomRes& from);
  void MergeFrom(const BackRoomRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackRoomRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UserArrived users_info = 3;
  int users_info_size() const;
  void clear_users_info();
  static const int kUsersInfoFieldNumber = 3;
  const ::UserArrived& users_info(int index) const;
  ::UserArrived* mutable_users_info(int index);
  ::UserArrived* add_users_info();
  ::google::protobuf::RepeatedPtrField< ::UserArrived >*
      mutable_users_info();
  const ::google::protobuf::RepeatedPtrField< ::UserArrived >&
      users_info() const;

  // optional string room_info = 2;
  bool has_room_info() const;
  void clear_room_info();
  static const int kRoomInfoFieldNumber = 2;
  const ::std::string& room_info() const;
  void set_room_info(const ::std::string& value);
  #if LANG_CXX11
  void set_room_info(::std::string&& value);
  #endif
  void set_room_info(const char* value);
  void set_room_info(const char* value, size_t size);
  ::std::string* mutable_room_info();
  ::std::string* release_room_info();
  void set_allocated_room_info(::std::string* room_info);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BackRoomRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_room_info();
  void clear_has_room_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UserArrived > users_info_;
  ::google::protobuf::internal::ArenaStringPtr room_info_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsBackRoomResImpl();
};
// -------------------------------------------------------------------

class UserOffLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserOffLine) */ {
 public:
  UserOffLine();
  virtual ~UserOffLine();

  UserOffLine(const UserOffLine& from);

  inline UserOffLine& operator=(const UserOffLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserOffLine(UserOffLine&& from) noexcept
    : UserOffLine() {
    *this = ::std::move(from);
  }

  inline UserOffLine& operator=(UserOffLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserOffLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserOffLine* internal_default_instance() {
    return reinterpret_cast<const UserOffLine*>(
               &_UserOffLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(UserOffLine* other);
  friend void swap(UserOffLine& a, UserOffLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserOffLine* New() const PROTOBUF_FINAL { return New(NULL); }

  UserOffLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserOffLine& from);
  void MergeFrom(const UserOffLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserOffLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .UserArrived user_info = 1;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 1;
  const ::UserArrived& user_info() const;
  ::UserArrived* release_user_info();
  ::UserArrived* mutable_user_info();
  void set_allocated_user_info(::UserArrived* user_info);

  // @@protoc_insertion_point(class_scope:UserOffLine)
 private:
  void set_has_user_info();
  void clear_has_user_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::UserArrived* user_info_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserOffLineImpl();
};
// -------------------------------------------------------------------

class UserReconnectedRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserReconnectedRes) */ {
 public:
  UserReconnectedRes();
  virtual ~UserReconnectedRes();

  UserReconnectedRes(const UserReconnectedRes& from);

  inline UserReconnectedRes& operator=(const UserReconnectedRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserReconnectedRes(UserReconnectedRes&& from) noexcept
    : UserReconnectedRes() {
    *this = ::std::move(from);
  }

  inline UserReconnectedRes& operator=(UserReconnectedRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserReconnectedRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserReconnectedRes* internal_default_instance() {
    return reinterpret_cast<const UserReconnectedRes*>(
               &_UserReconnectedRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(UserReconnectedRes* other);
  friend void swap(UserReconnectedRes& a, UserReconnectedRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserReconnectedRes* New() const PROTOBUF_FINAL { return New(NULL); }

  UserReconnectedRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserReconnectedRes& from);
  void MergeFrom(const UserReconnectedRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserReconnectedRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserReconnectedRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserReconnectedResImpl();
};
// -------------------------------------------------------------------

class HeartBeatRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HeartBeatRes) */ {
 public:
  HeartBeatRes();
  virtual ~HeartBeatRes();

  HeartBeatRes(const HeartBeatRes& from);

  inline HeartBeatRes& operator=(const HeartBeatRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatRes(HeartBeatRes&& from) noexcept
    : HeartBeatRes() {
    *this = ::std::move(from);
  }

  inline HeartBeatRes& operator=(HeartBeatRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatRes* internal_default_instance() {
    return reinterpret_cast<const HeartBeatRes*>(
               &_HeartBeatRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(HeartBeatRes* other);
  friend void swap(HeartBeatRes& a, HeartBeatRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatRes* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeatRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeatRes& from);
  void MergeFrom(const HeartBeatRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeatRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HeartBeatRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsHeartBeatResImpl();
};
// -------------------------------------------------------------------

class UserReadyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserReadyReq) */ {
 public:
  UserReadyReq();
  virtual ~UserReadyReq();

  UserReadyReq(const UserReadyReq& from);

  inline UserReadyReq& operator=(const UserReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserReadyReq(UserReadyReq&& from) noexcept
    : UserReadyReq() {
    *this = ::std::move(from);
  }

  inline UserReadyReq& operator=(UserReadyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserReadyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserReadyReq* internal_default_instance() {
    return reinterpret_cast<const UserReadyReq*>(
               &_UserReadyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(UserReadyReq* other);
  friend void swap(UserReadyReq& a, UserReadyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserReadyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UserReadyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserReadyReq& from);
  void MergeFrom(const UserReadyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 ready_state = 1;
  bool has_ready_state() const;
  void clear_ready_state();
  static const int kReadyStateFieldNumber = 1;
  ::google::protobuf::int32 ready_state() const;
  void set_ready_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserReadyReq)
 private:
  void set_has_ready_state();
  void clear_has_ready_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ready_state_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserReadyReqImpl();
};
// -------------------------------------------------------------------

class UserReadyRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserReadyRes) */ {
 public:
  UserReadyRes();
  virtual ~UserReadyRes();

  UserReadyRes(const UserReadyRes& from);

  inline UserReadyRes& operator=(const UserReadyRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserReadyRes(UserReadyRes&& from) noexcept
    : UserReadyRes() {
    *this = ::std::move(from);
  }

  inline UserReadyRes& operator=(UserReadyRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserReadyRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserReadyRes* internal_default_instance() {
    return reinterpret_cast<const UserReadyRes*>(
               &_UserReadyRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(UserReadyRes* other);
  friend void swap(UserReadyRes& a, UserReadyRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserReadyRes* New() const PROTOBUF_FINAL { return New(NULL); }

  UserReadyRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserReadyRes& from);
  void MergeFrom(const UserReadyRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserReadyRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string brandid = 2;
  bool has_brandid() const;
  void clear_brandid();
  static const int kBrandidFieldNumber = 2;
  const ::std::string& brandid() const;
  void set_brandid(const ::std::string& value);
  #if LANG_CXX11
  void set_brandid(::std::string&& value);
  #endif
  void set_brandid(const char* value);
  void set_brandid(const char* value, size_t size);
  ::std::string* mutable_brandid();
  ::std::string* release_brandid();
  void set_allocated_brandid(::std::string* brandid);

  // optional string numberid = 3;
  bool has_numberid() const;
  void clear_numberid();
  static const int kNumberidFieldNumber = 3;
  const ::std::string& numberid() const;
  void set_numberid(const ::std::string& value);
  #if LANG_CXX11
  void set_numberid(::std::string&& value);
  #endif
  void set_numberid(const char* value);
  void set_numberid(const char* value, size_t size);
  ::std::string* mutable_numberid();
  ::std::string* release_numberid();
  void set_allocated_numberid(::std::string* numberid);

  // required sint32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional sint32 user_state = 4;
  bool has_user_state() const;
  void clear_user_state();
  static const int kUserStateFieldNumber = 4;
  ::google::protobuf::int32 user_state() const;
  void set_user_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UserReadyRes)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_brandid();
  void clear_has_brandid();
  void set_has_numberid();
  void clear_has_numberid();
  void set_has_user_state();
  void clear_has_user_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr brandid_;
  ::google::protobuf::internal::ArenaStringPtr numberid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 user_state_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsUserReadyResImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GuestLoginReq

// required string guest_key = 1;
inline bool GuestLoginReq::has_guest_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginReq::set_has_guest_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginReq::clear_has_guest_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginReq::clear_guest_key() {
  guest_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guest_key();
}
inline const ::std::string& GuestLoginReq::guest_key() const {
  // @@protoc_insertion_point(field_get:GuestLoginReq.guest_key)
  return guest_key_.GetNoArena();
}
inline void GuestLoginReq::set_guest_key(const ::std::string& value) {
  set_has_guest_key();
  guest_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GuestLoginReq.guest_key)
}
#if LANG_CXX11
inline void GuestLoginReq::set_guest_key(::std::string&& value) {
  set_has_guest_key();
  guest_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GuestLoginReq.guest_key)
}
#endif
inline void GuestLoginReq::set_guest_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guest_key();
  guest_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GuestLoginReq.guest_key)
}
inline void GuestLoginReq::set_guest_key(const char* value, size_t size) {
  set_has_guest_key();
  guest_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GuestLoginReq.guest_key)
}
inline ::std::string* GuestLoginReq::mutable_guest_key() {
  set_has_guest_key();
  // @@protoc_insertion_point(field_mutable:GuestLoginReq.guest_key)
  return guest_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuestLoginReq::release_guest_key() {
  // @@protoc_insertion_point(field_release:GuestLoginReq.guest_key)
  clear_has_guest_key();
  return guest_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuestLoginReq::set_allocated_guest_key(::std::string* guest_key) {
  if (guest_key != NULL) {
    set_has_guest_key();
  } else {
    clear_has_guest_key();
  }
  guest_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guest_key);
  // @@protoc_insertion_point(field_set_allocated:GuestLoginReq.guest_key)
}

// -------------------------------------------------------------------

// UnameLoginReq

// required string uname = 1;
inline bool UnameLoginReq::has_uname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnameLoginReq::set_has_uname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnameLoginReq::clear_has_uname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnameLoginReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uname();
}
inline const ::std::string& UnameLoginReq::uname() const {
  // @@protoc_insertion_point(field_get:UnameLoginReq.uname)
  return uname_.GetNoArena();
}
inline void UnameLoginReq::set_uname(const ::std::string& value) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UnameLoginReq.uname)
}
#if LANG_CXX11
inline void UnameLoginReq::set_uname(::std::string&& value) {
  set_has_uname();
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UnameLoginReq.uname)
}
#endif
inline void UnameLoginReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UnameLoginReq.uname)
}
inline void UnameLoginReq::set_uname(const char* value, size_t size) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UnameLoginReq.uname)
}
inline ::std::string* UnameLoginReq::mutable_uname() {
  set_has_uname();
  // @@protoc_insertion_point(field_mutable:UnameLoginReq.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnameLoginReq::release_uname() {
  // @@protoc_insertion_point(field_release:UnameLoginReq.uname)
  clear_has_uname();
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnameLoginReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    set_has_uname();
  } else {
    clear_has_uname();
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:UnameLoginReq.uname)
}

// required string upwd = 2;
inline bool UnameLoginReq::has_upwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnameLoginReq::set_has_upwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnameLoginReq::clear_has_upwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnameLoginReq::clear_upwd() {
  upwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_upwd();
}
inline const ::std::string& UnameLoginReq::upwd() const {
  // @@protoc_insertion_point(field_get:UnameLoginReq.upwd)
  return upwd_.GetNoArena();
}
inline void UnameLoginReq::set_upwd(const ::std::string& value) {
  set_has_upwd();
  upwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UnameLoginReq.upwd)
}
#if LANG_CXX11
inline void UnameLoginReq::set_upwd(::std::string&& value) {
  set_has_upwd();
  upwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UnameLoginReq.upwd)
}
#endif
inline void UnameLoginReq::set_upwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_upwd();
  upwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UnameLoginReq.upwd)
}
inline void UnameLoginReq::set_upwd(const char* value, size_t size) {
  set_has_upwd();
  upwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UnameLoginReq.upwd)
}
inline ::std::string* UnameLoginReq::mutable_upwd() {
  set_has_upwd();
  // @@protoc_insertion_point(field_mutable:UnameLoginReq.upwd)
  return upwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnameLoginReq::release_upwd() {
  // @@protoc_insertion_point(field_release:UnameLoginReq.upwd)
  clear_has_upwd();
  return upwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnameLoginReq::set_allocated_upwd(::std::string* upwd) {
  if (upwd != NULL) {
    set_has_upwd();
  } else {
    clear_has_upwd();
  }
  upwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upwd);
  // @@protoc_insertion_point(field_set_allocated:UnameLoginReq.upwd)
}

// -------------------------------------------------------------------

// UserCenterInfo

// required string unick = 1;
inline bool UserCenterInfo::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserCenterInfo::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserCenterInfo::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserCenterInfo::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& UserCenterInfo::unick() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.unick)
  return unick_.GetNoArena();
}
inline void UserCenterInfo::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserCenterInfo.unick)
}
#if LANG_CXX11
inline void UserCenterInfo::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserCenterInfo.unick)
}
#endif
inline void UserCenterInfo::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserCenterInfo.unick)
}
inline void UserCenterInfo::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserCenterInfo.unick)
}
inline ::std::string* UserCenterInfo::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:UserCenterInfo.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCenterInfo::release_unick() {
  // @@protoc_insertion_point(field_release:UserCenterInfo.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCenterInfo::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:UserCenterInfo.unick)
}

// required sint32 uface = 2;
inline bool UserCenterInfo::has_uface() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserCenterInfo::set_has_uface() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserCenterInfo::clear_has_uface() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserCenterInfo::clear_uface() {
  uface_ = 0;
  clear_has_uface();
}
inline ::google::protobuf::int32 UserCenterInfo::uface() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uface)
  return uface_;
}
inline void UserCenterInfo::set_uface(::google::protobuf::int32 value) {
  set_has_uface();
  uface_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uface)
}

// required sint32 usex = 3;
inline bool UserCenterInfo::has_usex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserCenterInfo::set_has_usex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserCenterInfo::clear_has_usex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserCenterInfo::clear_usex() {
  usex_ = 0;
  clear_has_usex();
}
inline ::google::protobuf::int32 UserCenterInfo::usex() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.usex)
  return usex_;
}
inline void UserCenterInfo::set_usex(::google::protobuf::int32 value) {
  set_has_usex();
  usex_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.usex)
}

// required sint32 uvip = 4;
inline bool UserCenterInfo::has_uvip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserCenterInfo::set_has_uvip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserCenterInfo::clear_has_uvip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserCenterInfo::clear_uvip() {
  uvip_ = 0;
  clear_has_uvip();
}
inline ::google::protobuf::int32 UserCenterInfo::uvip() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uvip)
  return uvip_;
}
inline void UserCenterInfo::set_uvip(::google::protobuf::int32 value) {
  set_has_uvip();
  uvip_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uvip)
}

// required sint32 uid = 5;
inline bool UserCenterInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserCenterInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserCenterInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserCenterInfo::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 UserCenterInfo::uid() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.uid)
  return uid_;
}
inline void UserCenterInfo::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:UserCenterInfo.uid)
}

// optional string brandid = 6;
inline bool UserCenterInfo::has_brandid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserCenterInfo::set_has_brandid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserCenterInfo::clear_has_brandid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserCenterInfo::clear_brandid() {
  brandid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_brandid();
}
inline const ::std::string& UserCenterInfo::brandid() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.brandid)
  return brandid_.GetNoArena();
}
inline void UserCenterInfo::set_brandid(const ::std::string& value) {
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserCenterInfo.brandid)
}
#if LANG_CXX11
inline void UserCenterInfo::set_brandid(::std::string&& value) {
  set_has_brandid();
  brandid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserCenterInfo.brandid)
}
#endif
inline void UserCenterInfo::set_brandid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserCenterInfo.brandid)
}
inline void UserCenterInfo::set_brandid(const char* value, size_t size) {
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserCenterInfo.brandid)
}
inline ::std::string* UserCenterInfo::mutable_brandid() {
  set_has_brandid();
  // @@protoc_insertion_point(field_mutable:UserCenterInfo.brandid)
  return brandid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCenterInfo::release_brandid() {
  // @@protoc_insertion_point(field_release:UserCenterInfo.brandid)
  clear_has_brandid();
  return brandid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCenterInfo::set_allocated_brandid(::std::string* brandid) {
  if (brandid != NULL) {
    set_has_brandid();
  } else {
    clear_has_brandid();
  }
  brandid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brandid);
  // @@protoc_insertion_point(field_set_allocated:UserCenterInfo.brandid)
}

// optional string numberid = 7;
inline bool UserCenterInfo::has_numberid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserCenterInfo::set_has_numberid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserCenterInfo::clear_has_numberid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserCenterInfo::clear_numberid() {
  numberid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_numberid();
}
inline const ::std::string& UserCenterInfo::numberid() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.numberid)
  return numberid_.GetNoArena();
}
inline void UserCenterInfo::set_numberid(const ::std::string& value) {
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserCenterInfo.numberid)
}
#if LANG_CXX11
inline void UserCenterInfo::set_numberid(::std::string&& value) {
  set_has_numberid();
  numberid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserCenterInfo.numberid)
}
#endif
inline void UserCenterInfo::set_numberid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserCenterInfo.numberid)
}
inline void UserCenterInfo::set_numberid(const char* value, size_t size) {
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserCenterInfo.numberid)
}
inline ::std::string* UserCenterInfo::mutable_numberid() {
  set_has_numberid();
  // @@protoc_insertion_point(field_mutable:UserCenterInfo.numberid)
  return numberid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCenterInfo::release_numberid() {
  // @@protoc_insertion_point(field_release:UserCenterInfo.numberid)
  clear_has_numberid();
  return numberid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCenterInfo::set_allocated_numberid(::std::string* numberid) {
  if (numberid != NULL) {
    set_has_numberid();
  } else {
    clear_has_numberid();
  }
  numberid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), numberid);
  // @@protoc_insertion_point(field_set_allocated:UserCenterInfo.numberid)
}

// optional string areaid = 8;
inline bool UserCenterInfo::has_areaid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserCenterInfo::set_has_areaid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserCenterInfo::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserCenterInfo::clear_areaid() {
  areaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_areaid();
}
inline const ::std::string& UserCenterInfo::areaid() const {
  // @@protoc_insertion_point(field_get:UserCenterInfo.areaid)
  return areaid_.GetNoArena();
}
inline void UserCenterInfo::set_areaid(const ::std::string& value) {
  set_has_areaid();
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserCenterInfo.areaid)
}
#if LANG_CXX11
inline void UserCenterInfo::set_areaid(::std::string&& value) {
  set_has_areaid();
  areaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserCenterInfo.areaid)
}
#endif
inline void UserCenterInfo::set_areaid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_areaid();
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserCenterInfo.areaid)
}
inline void UserCenterInfo::set_areaid(const char* value, size_t size) {
  set_has_areaid();
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserCenterInfo.areaid)
}
inline ::std::string* UserCenterInfo::mutable_areaid() {
  set_has_areaid();
  // @@protoc_insertion_point(field_mutable:UserCenterInfo.areaid)
  return areaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserCenterInfo::release_areaid() {
  // @@protoc_insertion_point(field_release:UserCenterInfo.areaid)
  clear_has_areaid();
  return areaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserCenterInfo::set_allocated_areaid(::std::string* areaid) {
  if (areaid != NULL) {
    set_has_areaid();
  } else {
    clear_has_areaid();
  }
  areaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), areaid);
  // @@protoc_insertion_point(field_set_allocated:UserCenterInfo.areaid)
}

// -------------------------------------------------------------------

// GuestLoginRes

// required sint32 status = 1;
inline bool GuestLoginRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuestLoginRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuestLoginRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuestLoginRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GuestLoginRes::status() const {
  // @@protoc_insertion_point(field_get:GuestLoginRes.status)
  return status_;
}
inline void GuestLoginRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GuestLoginRes.status)
}

// optional .UserCenterInfo uinfo = 2;
inline bool GuestLoginRes::has_uinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuestLoginRes::set_has_uinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuestLoginRes::clear_has_uinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuestLoginRes::clear_uinfo() {
  if (uinfo_ != NULL) uinfo_->Clear();
  clear_has_uinfo();
}
inline const ::UserCenterInfo& GuestLoginRes::uinfo() const {
  const ::UserCenterInfo* p = uinfo_;
  // @@protoc_insertion_point(field_get:GuestLoginRes.uinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::UserCenterInfo*>(
      &::_UserCenterInfo_default_instance_);
}
inline ::UserCenterInfo* GuestLoginRes::release_uinfo() {
  // @@protoc_insertion_point(field_release:GuestLoginRes.uinfo)
  clear_has_uinfo();
  ::UserCenterInfo* temp = uinfo_;
  uinfo_ = NULL;
  return temp;
}
inline ::UserCenterInfo* GuestLoginRes::mutable_uinfo() {
  set_has_uinfo();
  if (uinfo_ == NULL) {
    uinfo_ = new ::UserCenterInfo;
  }
  // @@protoc_insertion_point(field_mutable:GuestLoginRes.uinfo)
  return uinfo_;
}
inline void GuestLoginRes::set_allocated_uinfo(::UserCenterInfo* uinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete uinfo_;
  }
  if (uinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uinfo, submessage_arena);
    }
    set_has_uinfo();
  } else {
    clear_has_uinfo();
  }
  uinfo_ = uinfo;
  // @@protoc_insertion_point(field_set_allocated:GuestLoginRes.uinfo)
}

// -------------------------------------------------------------------

// UnameLoginRes

// required sint32 status = 1;
inline bool UnameLoginRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnameLoginRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnameLoginRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnameLoginRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UnameLoginRes::status() const {
  // @@protoc_insertion_point(field_get:UnameLoginRes.status)
  return status_;
}
inline void UnameLoginRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UnameLoginRes.status)
}

// optional .UserCenterInfo uinfo = 2;
inline bool UnameLoginRes::has_uinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnameLoginRes::set_has_uinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnameLoginRes::clear_has_uinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnameLoginRes::clear_uinfo() {
  if (uinfo_ != NULL) uinfo_->Clear();
  clear_has_uinfo();
}
inline const ::UserCenterInfo& UnameLoginRes::uinfo() const {
  const ::UserCenterInfo* p = uinfo_;
  // @@protoc_insertion_point(field_get:UnameLoginRes.uinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::UserCenterInfo*>(
      &::_UserCenterInfo_default_instance_);
}
inline ::UserCenterInfo* UnameLoginRes::release_uinfo() {
  // @@protoc_insertion_point(field_release:UnameLoginRes.uinfo)
  clear_has_uinfo();
  ::UserCenterInfo* temp = uinfo_;
  uinfo_ = NULL;
  return temp;
}
inline ::UserCenterInfo* UnameLoginRes::mutable_uinfo() {
  set_has_uinfo();
  if (uinfo_ == NULL) {
    uinfo_ = new ::UserCenterInfo;
  }
  // @@protoc_insertion_point(field_mutable:UnameLoginRes.uinfo)
  return uinfo_;
}
inline void UnameLoginRes::set_allocated_uinfo(::UserCenterInfo* uinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete uinfo_;
  }
  if (uinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uinfo, submessage_arena);
    }
    set_has_uinfo();
  } else {
    clear_has_uinfo();
  }
  uinfo_ = uinfo;
  // @@protoc_insertion_point(field_set_allocated:UnameLoginRes.uinfo)
}

// -------------------------------------------------------------------

// EditProfileReq

// required string unick = 1;
inline bool EditProfileReq::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditProfileReq::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditProfileReq::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditProfileReq::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& EditProfileReq::unick() const {
  // @@protoc_insertion_point(field_get:EditProfileReq.unick)
  return unick_.GetNoArena();
}
inline void EditProfileReq::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EditProfileReq.unick)
}
#if LANG_CXX11
inline void EditProfileReq::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:EditProfileReq.unick)
}
#endif
inline void EditProfileReq::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EditProfileReq.unick)
}
inline void EditProfileReq::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EditProfileReq.unick)
}
inline ::std::string* EditProfileReq::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:EditProfileReq.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditProfileReq::release_unick() {
  // @@protoc_insertion_point(field_release:EditProfileReq.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditProfileReq::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:EditProfileReq.unick)
}

// required sint32 uface = 2;
inline bool EditProfileReq::has_uface() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EditProfileReq::set_has_uface() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EditProfileReq::clear_has_uface() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EditProfileReq::clear_uface() {
  uface_ = 0;
  clear_has_uface();
}
inline ::google::protobuf::int32 EditProfileReq::uface() const {
  // @@protoc_insertion_point(field_get:EditProfileReq.uface)
  return uface_;
}
inline void EditProfileReq::set_uface(::google::protobuf::int32 value) {
  set_has_uface();
  uface_ = value;
  // @@protoc_insertion_point(field_set:EditProfileReq.uface)
}

// required sint32 usex = 3;
inline bool EditProfileReq::has_usex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EditProfileReq::set_has_usex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EditProfileReq::clear_has_usex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EditProfileReq::clear_usex() {
  usex_ = 0;
  clear_has_usex();
}
inline ::google::protobuf::int32 EditProfileReq::usex() const {
  // @@protoc_insertion_point(field_get:EditProfileReq.usex)
  return usex_;
}
inline void EditProfileReq::set_usex(::google::protobuf::int32 value) {
  set_has_usex();
  usex_ = value;
  // @@protoc_insertion_point(field_set:EditProfileReq.usex)
}

// -------------------------------------------------------------------

// EditProfileRes

// required sint32 status = 1;
inline bool EditProfileRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditProfileRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditProfileRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditProfileRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EditProfileRes::status() const {
  // @@protoc_insertion_point(field_get:EditProfileRes.status)
  return status_;
}
inline void EditProfileRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:EditProfileRes.status)
}

// -------------------------------------------------------------------

// AccountUpgradeReq

// required string uname = 1;
inline bool AccountUpgradeReq::has_uname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUpgradeReq::set_has_uname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUpgradeReq::clear_has_uname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUpgradeReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uname();
}
inline const ::std::string& AccountUpgradeReq::uname() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeReq.uname)
  return uname_.GetNoArena();
}
inline void AccountUpgradeReq::set_uname(const ::std::string& value) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeReq.uname)
}
#if LANG_CXX11
inline void AccountUpgradeReq::set_uname(::std::string&& value) {
  set_has_uname();
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeReq.uname)
}
#endif
inline void AccountUpgradeReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeReq.uname)
}
inline void AccountUpgradeReq::set_uname(const char* value, size_t size) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeReq.uname)
}
inline ::std::string* AccountUpgradeReq::mutable_uname() {
  set_has_uname();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeReq.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeReq::release_uname() {
  // @@protoc_insertion_point(field_release:AccountUpgradeReq.uname)
  clear_has_uname();
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    set_has_uname();
  } else {
    clear_has_uname();
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeReq.uname)
}

// required string upwd_md5 = 2;
inline bool AccountUpgradeReq::has_upwd_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountUpgradeReq::set_has_upwd_md5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountUpgradeReq::clear_has_upwd_md5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountUpgradeReq::clear_upwd_md5() {
  upwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_upwd_md5();
}
inline const ::std::string& AccountUpgradeReq::upwd_md5() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeReq.upwd_md5)
  return upwd_md5_.GetNoArena();
}
inline void AccountUpgradeReq::set_upwd_md5(const ::std::string& value) {
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountUpgradeReq.upwd_md5)
}
#if LANG_CXX11
inline void AccountUpgradeReq::set_upwd_md5(::std::string&& value) {
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountUpgradeReq.upwd_md5)
}
#endif
inline void AccountUpgradeReq::set_upwd_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountUpgradeReq.upwd_md5)
}
inline void AccountUpgradeReq::set_upwd_md5(const char* value, size_t size) {
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountUpgradeReq.upwd_md5)
}
inline ::std::string* AccountUpgradeReq::mutable_upwd_md5() {
  set_has_upwd_md5();
  // @@protoc_insertion_point(field_mutable:AccountUpgradeReq.upwd_md5)
  return upwd_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountUpgradeReq::release_upwd_md5() {
  // @@protoc_insertion_point(field_release:AccountUpgradeReq.upwd_md5)
  clear_has_upwd_md5();
  return upwd_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountUpgradeReq::set_allocated_upwd_md5(::std::string* upwd_md5) {
  if (upwd_md5 != NULL) {
    set_has_upwd_md5();
  } else {
    clear_has_upwd_md5();
  }
  upwd_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upwd_md5);
  // @@protoc_insertion_point(field_set_allocated:AccountUpgradeReq.upwd_md5)
}

// -------------------------------------------------------------------

// AccountUpgradeRes

// required sint32 status = 1;
inline bool AccountUpgradeRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUpgradeRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUpgradeRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUpgradeRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 AccountUpgradeRes::status() const {
  // @@protoc_insertion_point(field_get:AccountUpgradeRes.status)
  return status_;
}
inline void AccountUpgradeRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:AccountUpgradeRes.status)
}

// -------------------------------------------------------------------

// LoginOutRes

// required sint32 status = 1;
inline bool LoginOutRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginOutRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginOutRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginOutRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LoginOutRes::status() const {
  // @@protoc_insertion_point(field_get:LoginOutRes.status)
  return status_;
}
inline void LoginOutRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:LoginOutRes.status)
}

// -------------------------------------------------------------------

// UserGameInfo

// required sint32 uchip = 1;
inline bool UserGameInfo::has_uchip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGameInfo::set_has_uchip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGameInfo::clear_has_uchip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGameInfo::clear_uchip() {
  uchip_ = 0;
  clear_has_uchip();
}
inline ::google::protobuf::int32 UserGameInfo::uchip() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uchip)
  return uchip_;
}
inline void UserGameInfo::set_uchip(::google::protobuf::int32 value) {
  set_has_uchip();
  uchip_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uchip)
}

// required sint32 uexp = 2;
inline bool UserGameInfo::has_uexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGameInfo::set_has_uexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGameInfo::clear_has_uexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGameInfo::clear_uexp() {
  uexp_ = 0;
  clear_has_uexp();
}
inline ::google::protobuf::int32 UserGameInfo::uexp() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uexp)
  return uexp_;
}
inline void UserGameInfo::set_uexp(::google::protobuf::int32 value) {
  set_has_uexp();
  uexp_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uexp)
}

// required sint32 uvip = 3;
inline bool UserGameInfo::has_uvip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGameInfo::set_has_uvip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGameInfo::clear_has_uvip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGameInfo::clear_uvip() {
  uvip_ = 0;
  clear_has_uvip();
}
inline ::google::protobuf::int32 UserGameInfo::uvip() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uvip)
  return uvip_;
}
inline void UserGameInfo::set_uvip(::google::protobuf::int32 value) {
  set_has_uvip();
  uvip_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uvip)
}

// required sint32 uchip2 = 4;
inline bool UserGameInfo::has_uchip2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserGameInfo::set_has_uchip2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserGameInfo::clear_has_uchip2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserGameInfo::clear_uchip2() {
  uchip2_ = 0;
  clear_has_uchip2();
}
inline ::google::protobuf::int32 UserGameInfo::uchip2() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uchip2)
  return uchip2_;
}
inline void UserGameInfo::set_uchip2(::google::protobuf::int32 value) {
  set_has_uchip2();
  uchip2_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uchip2)
}

// required sint32 uchip3 = 5;
inline bool UserGameInfo::has_uchip3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserGameInfo::set_has_uchip3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserGameInfo::clear_has_uchip3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserGameInfo::clear_uchip3() {
  uchip3_ = 0;
  clear_has_uchip3();
}
inline ::google::protobuf::int32 UserGameInfo::uchip3() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.uchip3)
  return uchip3_;
}
inline void UserGameInfo::set_uchip3(::google::protobuf::int32 value) {
  set_has_uchip3();
  uchip3_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.uchip3)
}

// required sint32 udata1 = 6;
inline bool UserGameInfo::has_udata1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserGameInfo::set_has_udata1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserGameInfo::clear_has_udata1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserGameInfo::clear_udata1() {
  udata1_ = 0;
  clear_has_udata1();
}
inline ::google::protobuf::int32 UserGameInfo::udata1() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.udata1)
  return udata1_;
}
inline void UserGameInfo::set_udata1(::google::protobuf::int32 value) {
  set_has_udata1();
  udata1_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.udata1)
}

// required sint32 udata2 = 7;
inline bool UserGameInfo::has_udata2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserGameInfo::set_has_udata2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserGameInfo::clear_has_udata2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserGameInfo::clear_udata2() {
  udata2_ = 0;
  clear_has_udata2();
}
inline ::google::protobuf::int32 UserGameInfo::udata2() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.udata2)
  return udata2_;
}
inline void UserGameInfo::set_udata2(::google::protobuf::int32 value) {
  set_has_udata2();
  udata2_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.udata2)
}

// required sint32 udata3 = 8;
inline bool UserGameInfo::has_udata3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserGameInfo::set_has_udata3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserGameInfo::clear_has_udata3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserGameInfo::clear_udata3() {
  udata3_ = 0;
  clear_has_udata3();
}
inline ::google::protobuf::int32 UserGameInfo::udata3() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.udata3)
  return udata3_;
}
inline void UserGameInfo::set_udata3(::google::protobuf::int32 value) {
  set_has_udata3();
  udata3_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.udata3)
}

// required sint32 bonues_status = 9;
inline bool UserGameInfo::has_bonues_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserGameInfo::set_has_bonues_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserGameInfo::clear_has_bonues_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserGameInfo::clear_bonues_status() {
  bonues_status_ = 0;
  clear_has_bonues_status();
}
inline ::google::protobuf::int32 UserGameInfo::bonues_status() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.bonues_status)
  return bonues_status_;
}
inline void UserGameInfo::set_bonues_status(::google::protobuf::int32 value) {
  set_has_bonues_status();
  bonues_status_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.bonues_status)
}

// required sint32 bonues = 10;
inline bool UserGameInfo::has_bonues() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserGameInfo::set_has_bonues() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserGameInfo::clear_has_bonues() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserGameInfo::clear_bonues() {
  bonues_ = 0;
  clear_has_bonues();
}
inline ::google::protobuf::int32 UserGameInfo::bonues() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.bonues)
  return bonues_;
}
inline void UserGameInfo::set_bonues(::google::protobuf::int32 value) {
  set_has_bonues();
  bonues_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.bonues)
}

// required sint32 days = 11;
inline bool UserGameInfo::has_days() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserGameInfo::set_has_days() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserGameInfo::clear_has_days() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserGameInfo::clear_days() {
  days_ = 0;
  clear_has_days();
}
inline ::google::protobuf::int32 UserGameInfo::days() const {
  // @@protoc_insertion_point(field_get:UserGameInfo.days)
  return days_;
}
inline void UserGameInfo::set_days(::google::protobuf::int32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:UserGameInfo.days)
}

// -------------------------------------------------------------------

// GetUgameInfoRes

// required sint32 status = 1;
inline bool GetUgameInfoRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUgameInfoRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUgameInfoRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUgameInfoRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetUgameInfoRes::status() const {
  // @@protoc_insertion_point(field_get:GetUgameInfoRes.status)
  return status_;
}
inline void GetUgameInfoRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GetUgameInfoRes.status)
}

// optional .UserGameInfo uinfo = 2;
inline bool GetUgameInfoRes::has_uinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUgameInfoRes::set_has_uinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUgameInfoRes::clear_has_uinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUgameInfoRes::clear_uinfo() {
  if (uinfo_ != NULL) uinfo_->Clear();
  clear_has_uinfo();
}
inline const ::UserGameInfo& GetUgameInfoRes::uinfo() const {
  const ::UserGameInfo* p = uinfo_;
  // @@protoc_insertion_point(field_get:GetUgameInfoRes.uinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::UserGameInfo*>(
      &::_UserGameInfo_default_instance_);
}
inline ::UserGameInfo* GetUgameInfoRes::release_uinfo() {
  // @@protoc_insertion_point(field_release:GetUgameInfoRes.uinfo)
  clear_has_uinfo();
  ::UserGameInfo* temp = uinfo_;
  uinfo_ = NULL;
  return temp;
}
inline ::UserGameInfo* GetUgameInfoRes::mutable_uinfo() {
  set_has_uinfo();
  if (uinfo_ == NULL) {
    uinfo_ = new ::UserGameInfo;
  }
  // @@protoc_insertion_point(field_mutable:GetUgameInfoRes.uinfo)
  return uinfo_;
}
inline void GetUgameInfoRes::set_allocated_uinfo(::UserGameInfo* uinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete uinfo_;
  }
  if (uinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uinfo, submessage_arena);
    }
    set_has_uinfo();
  } else {
    clear_has_uinfo();
  }
  uinfo_ = uinfo;
  // @@protoc_insertion_point(field_set_allocated:GetUgameInfoRes.uinfo)
}

// -------------------------------------------------------------------

// RecvLoginBonuesRes

// required sint32 status = 1;
inline bool RecvLoginBonuesRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecvLoginBonuesRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecvLoginBonuesRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecvLoginBonuesRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 RecvLoginBonuesRes::status() const {
  // @@protoc_insertion_point(field_get:RecvLoginBonuesRes.status)
  return status_;
}
inline void RecvLoginBonuesRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:RecvLoginBonuesRes.status)
}

// -------------------------------------------------------------------

// WorldChipRankInfo

// required string unick = 1;
inline bool WorldChipRankInfo::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldChipRankInfo::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldChipRankInfo::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldChipRankInfo::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& WorldChipRankInfo::unick() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.unick)
  return unick_.GetNoArena();
}
inline void WorldChipRankInfo::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.unick)
}
#if LANG_CXX11
inline void WorldChipRankInfo::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WorldChipRankInfo.unick)
}
#endif
inline void WorldChipRankInfo::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WorldChipRankInfo.unick)
}
inline void WorldChipRankInfo::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WorldChipRankInfo.unick)
}
inline ::std::string* WorldChipRankInfo::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:WorldChipRankInfo.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldChipRankInfo::release_unick() {
  // @@protoc_insertion_point(field_release:WorldChipRankInfo.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldChipRankInfo::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:WorldChipRankInfo.unick)
}

// required sint32 uface = 2;
inline bool WorldChipRankInfo::has_uface() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldChipRankInfo::set_has_uface() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldChipRankInfo::clear_has_uface() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldChipRankInfo::clear_uface() {
  uface_ = 0;
  clear_has_uface();
}
inline ::google::protobuf::int32 WorldChipRankInfo::uface() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.uface)
  return uface_;
}
inline void WorldChipRankInfo::set_uface(::google::protobuf::int32 value) {
  set_has_uface();
  uface_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.uface)
}

// required sint32 usex = 3;
inline bool WorldChipRankInfo::has_usex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldChipRankInfo::set_has_usex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldChipRankInfo::clear_has_usex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldChipRankInfo::clear_usex() {
  usex_ = 0;
  clear_has_usex();
}
inline ::google::protobuf::int32 WorldChipRankInfo::usex() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.usex)
  return usex_;
}
inline void WorldChipRankInfo::set_usex(::google::protobuf::int32 value) {
  set_has_usex();
  usex_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.usex)
}

// required sint32 uvip = 4;
inline bool WorldChipRankInfo::has_uvip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldChipRankInfo::set_has_uvip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldChipRankInfo::clear_has_uvip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldChipRankInfo::clear_uvip() {
  uvip_ = 0;
  clear_has_uvip();
}
inline ::google::protobuf::int32 WorldChipRankInfo::uvip() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.uvip)
  return uvip_;
}
inline void WorldChipRankInfo::set_uvip(::google::protobuf::int32 value) {
  set_has_uvip();
  uvip_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.uvip)
}

// required sint32 uchip = 5;
inline bool WorldChipRankInfo::has_uchip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldChipRankInfo::set_has_uchip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldChipRankInfo::clear_has_uchip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldChipRankInfo::clear_uchip() {
  uchip_ = 0;
  clear_has_uchip();
}
inline ::google::protobuf::int32 WorldChipRankInfo::uchip() const {
  // @@protoc_insertion_point(field_get:WorldChipRankInfo.uchip)
  return uchip_;
}
inline void WorldChipRankInfo::set_uchip(::google::protobuf::int32 value) {
  set_has_uchip();
  uchip_ = value;
  // @@protoc_insertion_point(field_set:WorldChipRankInfo.uchip)
}

// -------------------------------------------------------------------

// GetWorldRankUchipRes

// required sint32 status = 1;
inline bool GetWorldRankUchipRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetWorldRankUchipRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetWorldRankUchipRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetWorldRankUchipRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetWorldRankUchipRes::status() const {
  // @@protoc_insertion_point(field_get:GetWorldRankUchipRes.status)
  return status_;
}
inline void GetWorldRankUchipRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GetWorldRankUchipRes.status)
}

// repeated .WorldChipRankInfo rank_info = 2;
inline int GetWorldRankUchipRes::rank_info_size() const {
  return rank_info_.size();
}
inline void GetWorldRankUchipRes::clear_rank_info() {
  rank_info_.Clear();
}
inline const ::WorldChipRankInfo& GetWorldRankUchipRes::rank_info(int index) const {
  // @@protoc_insertion_point(field_get:GetWorldRankUchipRes.rank_info)
  return rank_info_.Get(index);
}
inline ::WorldChipRankInfo* GetWorldRankUchipRes::mutable_rank_info(int index) {
  // @@protoc_insertion_point(field_mutable:GetWorldRankUchipRes.rank_info)
  return rank_info_.Mutable(index);
}
inline ::WorldChipRankInfo* GetWorldRankUchipRes::add_rank_info() {
  // @@protoc_insertion_point(field_add:GetWorldRankUchipRes.rank_info)
  return rank_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >*
GetWorldRankUchipRes::mutable_rank_info() {
  // @@protoc_insertion_point(field_mutable_list:GetWorldRankUchipRes.rank_info)
  return &rank_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::WorldChipRankInfo >&
GetWorldRankUchipRes::rank_info() const {
  // @@protoc_insertion_point(field_list:GetWorldRankUchipRes.rank_info)
  return rank_info_;
}

// -------------------------------------------------------------------

// GetSysMsgReq

// required sint32 ver_num = 1;
inline bool GetSysMsgReq::has_ver_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSysMsgReq::set_has_ver_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSysMsgReq::clear_has_ver_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSysMsgReq::clear_ver_num() {
  ver_num_ = 0;
  clear_has_ver_num();
}
inline ::google::protobuf::int32 GetSysMsgReq::ver_num() const {
  // @@protoc_insertion_point(field_get:GetSysMsgReq.ver_num)
  return ver_num_;
}
inline void GetSysMsgReq::set_ver_num(::google::protobuf::int32 value) {
  set_has_ver_num();
  ver_num_ = value;
  // @@protoc_insertion_point(field_set:GetSysMsgReq.ver_num)
}

// -------------------------------------------------------------------

// GetSysMsgRes

// required sint32 status = 1;
inline bool GetSysMsgRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSysMsgRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSysMsgRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSysMsgRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetSysMsgRes::status() const {
  // @@protoc_insertion_point(field_get:GetSysMsgRes.status)
  return status_;
}
inline void GetSysMsgRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GetSysMsgRes.status)
}

// required sint32 ver_num = 2;
inline bool GetSysMsgRes::has_ver_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSysMsgRes::set_has_ver_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSysMsgRes::clear_has_ver_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSysMsgRes::clear_ver_num() {
  ver_num_ = 0;
  clear_has_ver_num();
}
inline ::google::protobuf::int32 GetSysMsgRes::ver_num() const {
  // @@protoc_insertion_point(field_get:GetSysMsgRes.ver_num)
  return ver_num_;
}
inline void GetSysMsgRes::set_ver_num(::google::protobuf::int32 value) {
  set_has_ver_num();
  ver_num_ = value;
  // @@protoc_insertion_point(field_set:GetSysMsgRes.ver_num)
}

// repeated string sys_msgs = 3;
inline int GetSysMsgRes::sys_msgs_size() const {
  return sys_msgs_.size();
}
inline void GetSysMsgRes::clear_sys_msgs() {
  sys_msgs_.Clear();
}
inline const ::std::string& GetSysMsgRes::sys_msgs(int index) const {
  // @@protoc_insertion_point(field_get:GetSysMsgRes.sys_msgs)
  return sys_msgs_.Get(index);
}
inline ::std::string* GetSysMsgRes::mutable_sys_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:GetSysMsgRes.sys_msgs)
  return sys_msgs_.Mutable(index);
}
inline void GetSysMsgRes::set_sys_msgs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:GetSysMsgRes.sys_msgs)
  sys_msgs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetSysMsgRes::set_sys_msgs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:GetSysMsgRes.sys_msgs)
  sys_msgs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetSysMsgRes::set_sys_msgs(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  sys_msgs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:GetSysMsgRes.sys_msgs)
}
inline void GetSysMsgRes::set_sys_msgs(int index, const char* value, size_t size) {
  sys_msgs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:GetSysMsgRes.sys_msgs)
}
inline ::std::string* GetSysMsgRes::add_sys_msgs() {
  // @@protoc_insertion_point(field_add_mutable:GetSysMsgRes.sys_msgs)
  return sys_msgs_.Add();
}
inline void GetSysMsgRes::add_sys_msgs(const ::std::string& value) {
  sys_msgs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:GetSysMsgRes.sys_msgs)
}
#if LANG_CXX11
inline void GetSysMsgRes::add_sys_msgs(::std::string&& value) {
  sys_msgs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:GetSysMsgRes.sys_msgs)
}
#endif
inline void GetSysMsgRes::add_sys_msgs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  sys_msgs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:GetSysMsgRes.sys_msgs)
}
inline void GetSysMsgRes::add_sys_msgs(const char* value, size_t size) {
  sys_msgs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:GetSysMsgRes.sys_msgs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetSysMsgRes::sys_msgs() const {
  // @@protoc_insertion_point(field_list:GetSysMsgRes.sys_msgs)
  return sys_msgs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetSysMsgRes::mutable_sys_msgs() {
  // @@protoc_insertion_point(field_mutable_list:GetSysMsgRes.sys_msgs)
  return &sys_msgs_;
}

// -------------------------------------------------------------------

// LoginLogicRes

// required sint32 status = 1;
inline bool LoginLogicRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginLogicRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginLogicRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginLogicRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LoginLogicRes::status() const {
  // @@protoc_insertion_point(field_get:LoginLogicRes.status)
  return status_;
}
inline void LoginLogicRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:LoginLogicRes.status)
}

// -------------------------------------------------------------------

// EnterZoneReq

// required sint32 zid = 1;
inline bool EnterZoneReq::has_zid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterZoneReq::set_has_zid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterZoneReq::clear_has_zid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterZoneReq::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 EnterZoneReq::zid() const {
  // @@protoc_insertion_point(field_get:EnterZoneReq.zid)
  return zid_;
}
inline void EnterZoneReq::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
  // @@protoc_insertion_point(field_set:EnterZoneReq.zid)
}

// -------------------------------------------------------------------

// EnterZoneRes

// required sint32 status = 1;
inline bool EnterZoneRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterZoneRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterZoneRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterZoneRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 EnterZoneRes::status() const {
  // @@protoc_insertion_point(field_get:EnterZoneRes.status)
  return status_;
}
inline void EnterZoneRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:EnterZoneRes.status)
}

// -------------------------------------------------------------------

// EnterMatch

// required sint32 zid = 1;
inline bool EnterMatch::has_zid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterMatch::set_has_zid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterMatch::clear_has_zid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterMatch::clear_zid() {
  zid_ = 0;
  clear_has_zid();
}
inline ::google::protobuf::int32 EnterMatch::zid() const {
  // @@protoc_insertion_point(field_get:EnterMatch.zid)
  return zid_;
}
inline void EnterMatch::set_zid(::google::protobuf::int32 value) {
  set_has_zid();
  zid_ = value;
  // @@protoc_insertion_point(field_set:EnterMatch.zid)
}

// required sint32 matchid = 2;
inline bool EnterMatch::has_matchid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterMatch::set_has_matchid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterMatch::clear_has_matchid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterMatch::clear_matchid() {
  matchid_ = 0;
  clear_has_matchid();
}
inline ::google::protobuf::int32 EnterMatch::matchid() const {
  // @@protoc_insertion_point(field_get:EnterMatch.matchid)
  return matchid_;
}
inline void EnterMatch::set_matchid(::google::protobuf::int32 value) {
  set_has_matchid();
  matchid_ = value;
  // @@protoc_insertion_point(field_set:EnterMatch.matchid)
}

// required sint32 seatid = 3;
inline bool EnterMatch::has_seatid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterMatch::set_has_seatid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterMatch::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterMatch::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 EnterMatch::seatid() const {
  // @@protoc_insertion_point(field_get:EnterMatch.seatid)
  return seatid_;
}
inline void EnterMatch::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:EnterMatch.seatid)
}

// required sint32 side = 4;
inline bool EnterMatch::has_side() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterMatch::set_has_side() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterMatch::clear_has_side() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterMatch::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 EnterMatch::side() const {
  // @@protoc_insertion_point(field_get:EnterMatch.side)
  return side_;
}
inline void EnterMatch::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:EnterMatch.side)
}

// -------------------------------------------------------------------

// UserArrived

// required string unick = 1;
inline bool UserArrived::has_unick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserArrived::set_has_unick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserArrived::clear_has_unick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserArrived::clear_unick() {
  unick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unick();
}
inline const ::std::string& UserArrived::unick() const {
  // @@protoc_insertion_point(field_get:UserArrived.unick)
  return unick_.GetNoArena();
}
inline void UserArrived::set_unick(const ::std::string& value) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserArrived.unick)
}
#if LANG_CXX11
inline void UserArrived::set_unick(::std::string&& value) {
  set_has_unick();
  unick_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserArrived.unick)
}
#endif
inline void UserArrived::set_unick(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserArrived.unick)
}
inline void UserArrived::set_unick(const char* value, size_t size) {
  set_has_unick();
  unick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserArrived.unick)
}
inline ::std::string* UserArrived::mutable_unick() {
  set_has_unick();
  // @@protoc_insertion_point(field_mutable:UserArrived.unick)
  return unick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserArrived::release_unick() {
  // @@protoc_insertion_point(field_release:UserArrived.unick)
  clear_has_unick();
  return unick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserArrived::set_allocated_unick(::std::string* unick) {
  if (unick != NULL) {
    set_has_unick();
  } else {
    clear_has_unick();
  }
  unick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unick);
  // @@protoc_insertion_point(field_set_allocated:UserArrived.unick)
}

// required sint32 uface = 2;
inline bool UserArrived::has_uface() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserArrived::set_has_uface() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserArrived::clear_has_uface() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserArrived::clear_uface() {
  uface_ = 0;
  clear_has_uface();
}
inline ::google::protobuf::int32 UserArrived::uface() const {
  // @@protoc_insertion_point(field_get:UserArrived.uface)
  return uface_;
}
inline void UserArrived::set_uface(::google::protobuf::int32 value) {
  set_has_uface();
  uface_ = value;
  // @@protoc_insertion_point(field_set:UserArrived.uface)
}

// required sint32 usex = 3;
inline bool UserArrived::has_usex() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserArrived::set_has_usex() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserArrived::clear_has_usex() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserArrived::clear_usex() {
  usex_ = 0;
  clear_has_usex();
}
inline ::google::protobuf::int32 UserArrived::usex() const {
  // @@protoc_insertion_point(field_get:UserArrived.usex)
  return usex_;
}
inline void UserArrived::set_usex(::google::protobuf::int32 value) {
  set_has_usex();
  usex_ = value;
  // @@protoc_insertion_point(field_set:UserArrived.usex)
}

// required sint32 seatid = 4;
inline bool UserArrived::has_seatid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserArrived::set_has_seatid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserArrived::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserArrived::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 UserArrived::seatid() const {
  // @@protoc_insertion_point(field_get:UserArrived.seatid)
  return seatid_;
}
inline void UserArrived::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:UserArrived.seatid)
}

// required sint32 side = 5;
inline bool UserArrived::has_side() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserArrived::set_has_side() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserArrived::clear_has_side() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserArrived::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 UserArrived::side() const {
  // @@protoc_insertion_point(field_get:UserArrived.side)
  return side_;
}
inline void UserArrived::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:UserArrived.side)
}

// required string roomid = 6;
inline bool UserArrived::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserArrived::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserArrived::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserArrived::clear_roomid() {
  roomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomid();
}
inline const ::std::string& UserArrived::roomid() const {
  // @@protoc_insertion_point(field_get:UserArrived.roomid)
  return roomid_.GetNoArena();
}
inline void UserArrived::set_roomid(const ::std::string& value) {
  set_has_roomid();
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserArrived.roomid)
}
#if LANG_CXX11
inline void UserArrived::set_roomid(::std::string&& value) {
  set_has_roomid();
  roomid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserArrived.roomid)
}
#endif
inline void UserArrived::set_roomid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomid();
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserArrived.roomid)
}
inline void UserArrived::set_roomid(const char* value, size_t size) {
  set_has_roomid();
  roomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserArrived.roomid)
}
inline ::std::string* UserArrived::mutable_roomid() {
  set_has_roomid();
  // @@protoc_insertion_point(field_mutable:UserArrived.roomid)
  return roomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserArrived::release_roomid() {
  // @@protoc_insertion_point(field_release:UserArrived.roomid)
  clear_has_roomid();
  return roomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserArrived::set_allocated_roomid(::std::string* roomid) {
  if (roomid != NULL) {
    set_has_roomid();
  } else {
    clear_has_roomid();
  }
  roomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomid);
  // @@protoc_insertion_point(field_set_allocated:UserArrived.roomid)
}

// required bool ishost = 7;
inline bool UserArrived::has_ishost() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserArrived::set_has_ishost() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserArrived::clear_has_ishost() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserArrived::clear_ishost() {
  ishost_ = false;
  clear_has_ishost();
}
inline bool UserArrived::ishost() const {
  // @@protoc_insertion_point(field_get:UserArrived.ishost)
  return ishost_;
}
inline void UserArrived::set_ishost(bool value) {
  set_has_ishost();
  ishost_ = value;
  // @@protoc_insertion_point(field_set:UserArrived.ishost)
}

// required bool isoffline = 8;
inline bool UserArrived::has_isoffline() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserArrived::set_has_isoffline() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserArrived::clear_has_isoffline() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserArrived::clear_isoffline() {
  isoffline_ = false;
  clear_has_isoffline();
}
inline bool UserArrived::isoffline() const {
  // @@protoc_insertion_point(field_get:UserArrived.isoffline)
  return isoffline_;
}
inline void UserArrived::set_isoffline(bool value) {
  set_has_isoffline();
  isoffline_ = value;
  // @@protoc_insertion_point(field_set:UserArrived.isoffline)
}

// optional string brandid = 9;
inline bool UserArrived::has_brandid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserArrived::set_has_brandid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserArrived::clear_has_brandid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserArrived::clear_brandid() {
  brandid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_brandid();
}
inline const ::std::string& UserArrived::brandid() const {
  // @@protoc_insertion_point(field_get:UserArrived.brandid)
  return brandid_.GetNoArena();
}
inline void UserArrived::set_brandid(const ::std::string& value) {
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserArrived.brandid)
}
#if LANG_CXX11
inline void UserArrived::set_brandid(::std::string&& value) {
  set_has_brandid();
  brandid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserArrived.brandid)
}
#endif
inline void UserArrived::set_brandid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserArrived.brandid)
}
inline void UserArrived::set_brandid(const char* value, size_t size) {
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserArrived.brandid)
}
inline ::std::string* UserArrived::mutable_brandid() {
  set_has_brandid();
  // @@protoc_insertion_point(field_mutable:UserArrived.brandid)
  return brandid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserArrived::release_brandid() {
  // @@protoc_insertion_point(field_release:UserArrived.brandid)
  clear_has_brandid();
  return brandid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserArrived::set_allocated_brandid(::std::string* brandid) {
  if (brandid != NULL) {
    set_has_brandid();
  } else {
    clear_has_brandid();
  }
  brandid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brandid);
  // @@protoc_insertion_point(field_set_allocated:UserArrived.brandid)
}

// optional string numberid = 10;
inline bool UserArrived::has_numberid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserArrived::set_has_numberid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserArrived::clear_has_numberid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserArrived::clear_numberid() {
  numberid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_numberid();
}
inline const ::std::string& UserArrived::numberid() const {
  // @@protoc_insertion_point(field_get:UserArrived.numberid)
  return numberid_.GetNoArena();
}
inline void UserArrived::set_numberid(const ::std::string& value) {
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserArrived.numberid)
}
#if LANG_CXX11
inline void UserArrived::set_numberid(::std::string&& value) {
  set_has_numberid();
  numberid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserArrived.numberid)
}
#endif
inline void UserArrived::set_numberid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserArrived.numberid)
}
inline void UserArrived::set_numberid(const char* value, size_t size) {
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserArrived.numberid)
}
inline ::std::string* UserArrived::mutable_numberid() {
  set_has_numberid();
  // @@protoc_insertion_point(field_mutable:UserArrived.numberid)
  return numberid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserArrived::release_numberid() {
  // @@protoc_insertion_point(field_release:UserArrived.numberid)
  clear_has_numberid();
  return numberid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserArrived::set_allocated_numberid(::std::string* numberid) {
  if (numberid != NULL) {
    set_has_numberid();
  } else {
    clear_has_numberid();
  }
  numberid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), numberid);
  // @@protoc_insertion_point(field_set_allocated:UserArrived.numberid)
}

// optional string areaid = 11;
inline bool UserArrived::has_areaid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserArrived::set_has_areaid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserArrived::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserArrived::clear_areaid() {
  areaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_areaid();
}
inline const ::std::string& UserArrived::areaid() const {
  // @@protoc_insertion_point(field_get:UserArrived.areaid)
  return areaid_.GetNoArena();
}
inline void UserArrived::set_areaid(const ::std::string& value) {
  set_has_areaid();
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserArrived.areaid)
}
#if LANG_CXX11
inline void UserArrived::set_areaid(::std::string&& value) {
  set_has_areaid();
  areaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserArrived.areaid)
}
#endif
inline void UserArrived::set_areaid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_areaid();
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserArrived.areaid)
}
inline void UserArrived::set_areaid(const char* value, size_t size) {
  set_has_areaid();
  areaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserArrived.areaid)
}
inline ::std::string* UserArrived::mutable_areaid() {
  set_has_areaid();
  // @@protoc_insertion_point(field_mutable:UserArrived.areaid)
  return areaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserArrived::release_areaid() {
  // @@protoc_insertion_point(field_release:UserArrived.areaid)
  clear_has_areaid();
  return areaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserArrived::set_allocated_areaid(::std::string* areaid) {
  if (areaid != NULL) {
    set_has_areaid();
  } else {
    clear_has_areaid();
  }
  areaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), areaid);
  // @@protoc_insertion_point(field_set_allocated:UserArrived.areaid)
}

// -------------------------------------------------------------------

// ExitMatchRes

// required sint32 status = 1;
inline bool ExitMatchRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitMatchRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitMatchRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitMatchRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ExitMatchRes::status() const {
  // @@protoc_insertion_point(field_get:ExitMatchRes.status)
  return status_;
}
inline void ExitMatchRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ExitMatchRes.status)
}

// -------------------------------------------------------------------

// UserExitMatch

// required sint32 seatid = 1;
inline bool UserExitMatch::has_seatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserExitMatch::set_has_seatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserExitMatch::clear_has_seatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserExitMatch::clear_seatid() {
  seatid_ = 0;
  clear_has_seatid();
}
inline ::google::protobuf::int32 UserExitMatch::seatid() const {
  // @@protoc_insertion_point(field_get:UserExitMatch.seatid)
  return seatid_;
}
inline void UserExitMatch::set_seatid(::google::protobuf::int32 value) {
  set_has_seatid();
  seatid_ = value;
  // @@protoc_insertion_point(field_set:UserExitMatch.seatid)
}

// -------------------------------------------------------------------

// GameStart

// repeated sint32 heroes = 1;
inline int GameStart::heroes_size() const {
  return heroes_.size();
}
inline void GameStart::clear_heroes() {
  heroes_.Clear();
}
inline ::google::protobuf::int32 GameStart::heroes(int index) const {
  // @@protoc_insertion_point(field_get:GameStart.heroes)
  return heroes_.Get(index);
}
inline void GameStart::set_heroes(int index, ::google::protobuf::int32 value) {
  heroes_.Set(index, value);
  // @@protoc_insertion_point(field_set:GameStart.heroes)
}
inline void GameStart::add_heroes(::google::protobuf::int32 value) {
  heroes_.Add(value);
  // @@protoc_insertion_point(field_add:GameStart.heroes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GameStart::heroes() const {
  // @@protoc_insertion_point(field_list:GameStart.heroes)
  return heroes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GameStart::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:GameStart.heroes)
  return &heroes_;
}

// -------------------------------------------------------------------

// UserRegistReq

// required string uname = 1;
inline bool UserRegistReq::has_uname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRegistReq::set_has_uname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRegistReq::clear_has_uname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRegistReq::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uname();
}
inline const ::std::string& UserRegistReq::uname() const {
  // @@protoc_insertion_point(field_get:UserRegistReq.uname)
  return uname_.GetNoArena();
}
inline void UserRegistReq::set_uname(const ::std::string& value) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserRegistReq.uname)
}
#if LANG_CXX11
inline void UserRegistReq::set_uname(::std::string&& value) {
  set_has_uname();
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserRegistReq.uname)
}
#endif
inline void UserRegistReq::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserRegistReq.uname)
}
inline void UserRegistReq::set_uname(const char* value, size_t size) {
  set_has_uname();
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserRegistReq.uname)
}
inline ::std::string* UserRegistReq::mutable_uname() {
  set_has_uname();
  // @@protoc_insertion_point(field_mutable:UserRegistReq.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegistReq::release_uname() {
  // @@protoc_insertion_point(field_release:UserRegistReq.uname)
  clear_has_uname();
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegistReq::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    set_has_uname();
  } else {
    clear_has_uname();
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:UserRegistReq.uname)
}

// required string upwd_md5 = 2;
inline bool UserRegistReq::has_upwd_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserRegistReq::set_has_upwd_md5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserRegistReq::clear_has_upwd_md5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserRegistReq::clear_upwd_md5() {
  upwd_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_upwd_md5();
}
inline const ::std::string& UserRegistReq::upwd_md5() const {
  // @@protoc_insertion_point(field_get:UserRegistReq.upwd_md5)
  return upwd_md5_.GetNoArena();
}
inline void UserRegistReq::set_upwd_md5(const ::std::string& value) {
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserRegistReq.upwd_md5)
}
#if LANG_CXX11
inline void UserRegistReq::set_upwd_md5(::std::string&& value) {
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserRegistReq.upwd_md5)
}
#endif
inline void UserRegistReq::set_upwd_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserRegistReq.upwd_md5)
}
inline void UserRegistReq::set_upwd_md5(const char* value, size_t size) {
  set_has_upwd_md5();
  upwd_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserRegistReq.upwd_md5)
}
inline ::std::string* UserRegistReq::mutable_upwd_md5() {
  set_has_upwd_md5();
  // @@protoc_insertion_point(field_mutable:UserRegistReq.upwd_md5)
  return upwd_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserRegistReq::release_upwd_md5() {
  // @@protoc_insertion_point(field_release:UserRegistReq.upwd_md5)
  clear_has_upwd_md5();
  return upwd_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserRegistReq::set_allocated_upwd_md5(::std::string* upwd_md5) {
  if (upwd_md5 != NULL) {
    set_has_upwd_md5();
  } else {
    clear_has_upwd_md5();
  }
  upwd_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), upwd_md5);
  // @@protoc_insertion_point(field_set_allocated:UserRegistReq.upwd_md5)
}

// -------------------------------------------------------------------

// UserRegistRes

// required sint32 status = 1;
inline bool UserRegistRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserRegistRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserRegistRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserRegistRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UserRegistRes::status() const {
  // @@protoc_insertion_point(field_get:UserRegistRes.status)
  return status_;
}
inline void UserRegistRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UserRegistRes.status)
}

// -------------------------------------------------------------------

// CreateRoomReq

// required string room_info = 1;
inline bool CreateRoomReq::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomReq::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomReq::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomReq::clear_room_info() {
  room_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_info();
}
inline const ::std::string& CreateRoomReq::room_info() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.room_info)
  return room_info_.GetNoArena();
}
inline void CreateRoomReq::set_room_info(const ::std::string& value) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateRoomReq.room_info)
}
#if LANG_CXX11
inline void CreateRoomReq::set_room_info(::std::string&& value) {
  set_has_room_info();
  room_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateRoomReq.room_info)
}
#endif
inline void CreateRoomReq::set_room_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateRoomReq.room_info)
}
inline void CreateRoomReq::set_room_info(const char* value, size_t size) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateRoomReq.room_info)
}
inline ::std::string* CreateRoomReq::mutable_room_info() {
  set_has_room_info();
  // @@protoc_insertion_point(field_mutable:CreateRoomReq.room_info)
  return room_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoomReq::release_room_info() {
  // @@protoc_insertion_point(field_release:CreateRoomReq.room_info)
  clear_has_room_info();
  return room_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoomReq::set_allocated_room_info(::std::string* room_info) {
  if (room_info != NULL) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  room_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_info);
  // @@protoc_insertion_point(field_set_allocated:CreateRoomReq.room_info)
}

// -------------------------------------------------------------------

// CreateRoomRes

// required sint32 status = 1;
inline bool CreateRoomRes::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomRes::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 CreateRoomRes::status() const {
  // @@protoc_insertion_point(field_get:CreateRoomRes.status)
  return status_;
}
inline void CreateRoomRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomRes.status)
}

// optional string room_info = 2;
inline bool CreateRoomRes::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomRes::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomRes::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomRes::clear_room_info() {
  room_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_info();
}
inline const ::std::string& CreateRoomRes::room_info() const {
  // @@protoc_insertion_point(field_get:CreateRoomRes.room_info)
  return room_info_.GetNoArena();
}
inline void CreateRoomRes::set_room_info(const ::std::string& value) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateRoomRes.room_info)
}
#if LANG_CXX11
inline void CreateRoomRes::set_room_info(::std::string&& value) {
  set_has_room_info();
  room_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateRoomRes.room_info)
}
#endif
inline void CreateRoomRes::set_room_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateRoomRes.room_info)
}
inline void CreateRoomRes::set_room_info(const char* value, size_t size) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateRoomRes.room_info)
}
inline ::std::string* CreateRoomRes::mutable_room_info() {
  set_has_room_info();
  // @@protoc_insertion_point(field_mutable:CreateRoomRes.room_info)
  return room_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoomRes::release_room_info() {
  // @@protoc_insertion_point(field_release:CreateRoomRes.room_info)
  clear_has_room_info();
  return room_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoomRes::set_allocated_room_info(::std::string* room_info) {
  if (room_info != NULL) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  room_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_info);
  // @@protoc_insertion_point(field_set_allocated:CreateRoomRes.room_info)
}

// optional .UserArrived user_info = 3;
inline bool CreateRoomRes::has_user_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomRes::set_has_user_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomRes::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomRes::clear_user_info() {
  if (user_info_ != NULL) user_info_->Clear();
  clear_has_user_info();
}
inline const ::UserArrived& CreateRoomRes::user_info() const {
  const ::UserArrived* p = user_info_;
  // @@protoc_insertion_point(field_get:CreateRoomRes.user_info)
  return p != NULL ? *p : *reinterpret_cast<const ::UserArrived*>(
      &::_UserArrived_default_instance_);
}
inline ::UserArrived* CreateRoomRes::release_user_info() {
  // @@protoc_insertion_point(field_release:CreateRoomRes.user_info)
  clear_has_user_info();
  ::UserArrived* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline ::UserArrived* CreateRoomRes::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::UserArrived;
  }
  // @@protoc_insertion_point(field_mutable:CreateRoomRes.user_info)
  return user_info_;
}
inline void CreateRoomRes::set_allocated_user_info(::UserArrived* user_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_info_;
  }
  if (user_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_info, submessage_arena);
    }
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  user_info_ = user_info;
  // @@protoc_insertion_point(field_set_allocated:CreateRoomRes.user_info)
}

// -------------------------------------------------------------------

// JoinRoomReq

// required string room_id = 1;
inline bool JoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomReq::clear_room_id() {
  room_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_id();
}
inline const ::std::string& JoinRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:JoinRoomReq.room_id)
  return room_id_.GetNoArena();
}
inline void JoinRoomReq::set_room_id(const ::std::string& value) {
  set_has_room_id();
  room_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JoinRoomReq.room_id)
}
#if LANG_CXX11
inline void JoinRoomReq::set_room_id(::std::string&& value) {
  set_has_room_id();
  room_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JoinRoomReq.room_id)
}
#endif
inline void JoinRoomReq::set_room_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_id();
  room_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JoinRoomReq.room_id)
}
inline void JoinRoomReq::set_room_id(const char* value, size_t size) {
  set_has_room_id();
  room_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JoinRoomReq.room_id)
}
inline ::std::string* JoinRoomReq::mutable_room_id() {
  set_has_room_id();
  // @@protoc_insertion_point(field_mutable:JoinRoomReq.room_id)
  return room_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinRoomReq::release_room_id() {
  // @@protoc_insertion_point(field_release:JoinRoomReq.room_id)
  clear_has_room_id();
  return room_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinRoomReq::set_allocated_room_id(::std::string* room_id) {
  if (room_id != NULL) {
    set_has_room_id();
  } else {
    clear_has_room_id();
  }
  room_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_id);
  // @@protoc_insertion_point(field_set_allocated:JoinRoomReq.room_id)
}

// -------------------------------------------------------------------

// JoinRoomRes

// required sint32 status = 1;
inline bool JoinRoomRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRoomRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRoomRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRoomRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 JoinRoomRes::status() const {
  // @@protoc_insertion_point(field_get:JoinRoomRes.status)
  return status_;
}
inline void JoinRoomRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRes.status)
}

// optional string room_info = 2;
inline bool JoinRoomRes::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomRes::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomRes::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomRes::clear_room_info() {
  room_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_info();
}
inline const ::std::string& JoinRoomRes::room_info() const {
  // @@protoc_insertion_point(field_get:JoinRoomRes.room_info)
  return room_info_.GetNoArena();
}
inline void JoinRoomRes::set_room_info(const ::std::string& value) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JoinRoomRes.room_info)
}
#if LANG_CXX11
inline void JoinRoomRes::set_room_info(::std::string&& value) {
  set_has_room_info();
  room_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JoinRoomRes.room_info)
}
#endif
inline void JoinRoomRes::set_room_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JoinRoomRes.room_info)
}
inline void JoinRoomRes::set_room_info(const char* value, size_t size) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JoinRoomRes.room_info)
}
inline ::std::string* JoinRoomRes::mutable_room_info() {
  set_has_room_info();
  // @@protoc_insertion_point(field_mutable:JoinRoomRes.room_info)
  return room_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinRoomRes::release_room_info() {
  // @@protoc_insertion_point(field_release:JoinRoomRes.room_info)
  clear_has_room_info();
  return room_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinRoomRes::set_allocated_room_info(::std::string* room_info) {
  if (room_info != NULL) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  room_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_info);
  // @@protoc_insertion_point(field_set_allocated:JoinRoomRes.room_info)
}

// repeated .UserArrived users_info = 3;
inline int JoinRoomRes::users_info_size() const {
  return users_info_.size();
}
inline void JoinRoomRes::clear_users_info() {
  users_info_.Clear();
}
inline const ::UserArrived& JoinRoomRes::users_info(int index) const {
  // @@protoc_insertion_point(field_get:JoinRoomRes.users_info)
  return users_info_.Get(index);
}
inline ::UserArrived* JoinRoomRes::mutable_users_info(int index) {
  // @@protoc_insertion_point(field_mutable:JoinRoomRes.users_info)
  return users_info_.Mutable(index);
}
inline ::UserArrived* JoinRoomRes::add_users_info() {
  // @@protoc_insertion_point(field_add:JoinRoomRes.users_info)
  return users_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::UserArrived >*
JoinRoomRes::mutable_users_info() {
  // @@protoc_insertion_point(field_mutable_list:JoinRoomRes.users_info)
  return &users_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::UserArrived >&
JoinRoomRes::users_info() const {
  // @@protoc_insertion_point(field_list:JoinRoomRes.users_info)
  return users_info_;
}

// -------------------------------------------------------------------

// ExitRoomRes

// required sint32 status = 1;
inline bool ExitRoomRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExitRoomRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExitRoomRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExitRoomRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ExitRoomRes::status() const {
  // @@protoc_insertion_point(field_get:ExitRoomRes.status)
  return status_;
}
inline void ExitRoomRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ExitRoomRes.status)
}

// optional .UserArrived user_info = 2;
inline bool ExitRoomRes::has_user_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitRoomRes::set_has_user_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitRoomRes::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitRoomRes::clear_user_info() {
  if (user_info_ != NULL) user_info_->Clear();
  clear_has_user_info();
}
inline const ::UserArrived& ExitRoomRes::user_info() const {
  const ::UserArrived* p = user_info_;
  // @@protoc_insertion_point(field_get:ExitRoomRes.user_info)
  return p != NULL ? *p : *reinterpret_cast<const ::UserArrived*>(
      &::_UserArrived_default_instance_);
}
inline ::UserArrived* ExitRoomRes::release_user_info() {
  // @@protoc_insertion_point(field_release:ExitRoomRes.user_info)
  clear_has_user_info();
  ::UserArrived* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline ::UserArrived* ExitRoomRes::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::UserArrived;
  }
  // @@protoc_insertion_point(field_mutable:ExitRoomRes.user_info)
  return user_info_;
}
inline void ExitRoomRes::set_allocated_user_info(::UserArrived* user_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_info_;
  }
  if (user_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_info, submessage_arena);
    }
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  user_info_ = user_info;
  // @@protoc_insertion_point(field_set_allocated:ExitRoomRes.user_info)
}

// -------------------------------------------------------------------

// DessolveRes

// required sint32 status = 1;
inline bool DessolveRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DessolveRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DessolveRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DessolveRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 DessolveRes::status() const {
  // @@protoc_insertion_point(field_get:DessolveRes.status)
  return status_;
}
inline void DessolveRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:DessolveRes.status)
}

// -------------------------------------------------------------------

// GetCreateStatusRes

// required sint32 status = 1;
inline bool GetCreateStatusRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCreateStatusRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCreateStatusRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCreateStatusRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetCreateStatusRes::status() const {
  // @@protoc_insertion_point(field_get:GetCreateStatusRes.status)
  return status_;
}
inline void GetCreateStatusRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:GetCreateStatusRes.status)
}

// -------------------------------------------------------------------

// BackRoomRes

// required sint32 status = 1;
inline bool BackRoomRes::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BackRoomRes::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BackRoomRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BackRoomRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 BackRoomRes::status() const {
  // @@protoc_insertion_point(field_get:BackRoomRes.status)
  return status_;
}
inline void BackRoomRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:BackRoomRes.status)
}

// optional string room_info = 2;
inline bool BackRoomRes::has_room_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BackRoomRes::set_has_room_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BackRoomRes::clear_has_room_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BackRoomRes::clear_room_info() {
  room_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_info();
}
inline const ::std::string& BackRoomRes::room_info() const {
  // @@protoc_insertion_point(field_get:BackRoomRes.room_info)
  return room_info_.GetNoArena();
}
inline void BackRoomRes::set_room_info(const ::std::string& value) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BackRoomRes.room_info)
}
#if LANG_CXX11
inline void BackRoomRes::set_room_info(::std::string&& value) {
  set_has_room_info();
  room_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BackRoomRes.room_info)
}
#endif
inline void BackRoomRes::set_room_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BackRoomRes.room_info)
}
inline void BackRoomRes::set_room_info(const char* value, size_t size) {
  set_has_room_info();
  room_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BackRoomRes.room_info)
}
inline ::std::string* BackRoomRes::mutable_room_info() {
  set_has_room_info();
  // @@protoc_insertion_point(field_mutable:BackRoomRes.room_info)
  return room_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackRoomRes::release_room_info() {
  // @@protoc_insertion_point(field_release:BackRoomRes.room_info)
  clear_has_room_info();
  return room_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackRoomRes::set_allocated_room_info(::std::string* room_info) {
  if (room_info != NULL) {
    set_has_room_info();
  } else {
    clear_has_room_info();
  }
  room_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_info);
  // @@protoc_insertion_point(field_set_allocated:BackRoomRes.room_info)
}

// repeated .UserArrived users_info = 3;
inline int BackRoomRes::users_info_size() const {
  return users_info_.size();
}
inline void BackRoomRes::clear_users_info() {
  users_info_.Clear();
}
inline const ::UserArrived& BackRoomRes::users_info(int index) const {
  // @@protoc_insertion_point(field_get:BackRoomRes.users_info)
  return users_info_.Get(index);
}
inline ::UserArrived* BackRoomRes::mutable_users_info(int index) {
  // @@protoc_insertion_point(field_mutable:BackRoomRes.users_info)
  return users_info_.Mutable(index);
}
inline ::UserArrived* BackRoomRes::add_users_info() {
  // @@protoc_insertion_point(field_add:BackRoomRes.users_info)
  return users_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::UserArrived >*
BackRoomRes::mutable_users_info() {
  // @@protoc_insertion_point(field_mutable_list:BackRoomRes.users_info)
  return &users_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::UserArrived >&
BackRoomRes::users_info() const {
  // @@protoc_insertion_point(field_list:BackRoomRes.users_info)
  return users_info_;
}

// -------------------------------------------------------------------

// UserOffLine

// required .UserArrived user_info = 1;
inline bool UserOffLine::has_user_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserOffLine::set_has_user_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserOffLine::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserOffLine::clear_user_info() {
  if (user_info_ != NULL) user_info_->Clear();
  clear_has_user_info();
}
inline const ::UserArrived& UserOffLine::user_info() const {
  const ::UserArrived* p = user_info_;
  // @@protoc_insertion_point(field_get:UserOffLine.user_info)
  return p != NULL ? *p : *reinterpret_cast<const ::UserArrived*>(
      &::_UserArrived_default_instance_);
}
inline ::UserArrived* UserOffLine::release_user_info() {
  // @@protoc_insertion_point(field_release:UserOffLine.user_info)
  clear_has_user_info();
  ::UserArrived* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline ::UserArrived* UserOffLine::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) {
    user_info_ = new ::UserArrived;
  }
  // @@protoc_insertion_point(field_mutable:UserOffLine.user_info)
  return user_info_;
}
inline void UserOffLine::set_allocated_user_info(::UserArrived* user_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_info_;
  }
  if (user_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_info, submessage_arena);
    }
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
  user_info_ = user_info;
  // @@protoc_insertion_point(field_set_allocated:UserOffLine.user_info)
}

// -------------------------------------------------------------------

// UserReconnectedRes

// required sint32 status = 1;
inline bool UserReconnectedRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserReconnectedRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserReconnectedRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserReconnectedRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UserReconnectedRes::status() const {
  // @@protoc_insertion_point(field_get:UserReconnectedRes.status)
  return status_;
}
inline void UserReconnectedRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UserReconnectedRes.status)
}

// -------------------------------------------------------------------

// HeartBeatRes

// optional sint32 status = 1;
inline bool HeartBeatRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 HeartBeatRes::status() const {
  // @@protoc_insertion_point(field_get:HeartBeatRes.status)
  return status_;
}
inline void HeartBeatRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:HeartBeatRes.status)
}

// -------------------------------------------------------------------

// UserReadyReq

// required sint32 ready_state = 1;
inline bool UserReadyReq::has_ready_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserReadyReq::set_has_ready_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserReadyReq::clear_has_ready_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserReadyReq::clear_ready_state() {
  ready_state_ = 0;
  clear_has_ready_state();
}
inline ::google::protobuf::int32 UserReadyReq::ready_state() const {
  // @@protoc_insertion_point(field_get:UserReadyReq.ready_state)
  return ready_state_;
}
inline void UserReadyReq::set_ready_state(::google::protobuf::int32 value) {
  set_has_ready_state();
  ready_state_ = value;
  // @@protoc_insertion_point(field_set:UserReadyReq.ready_state)
}

// -------------------------------------------------------------------

// UserReadyRes

// required sint32 status = 1;
inline bool UserReadyRes::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserReadyRes::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserReadyRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserReadyRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 UserReadyRes::status() const {
  // @@protoc_insertion_point(field_get:UserReadyRes.status)
  return status_;
}
inline void UserReadyRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:UserReadyRes.status)
}

// optional string brandid = 2;
inline bool UserReadyRes::has_brandid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserReadyRes::set_has_brandid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserReadyRes::clear_has_brandid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserReadyRes::clear_brandid() {
  brandid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_brandid();
}
inline const ::std::string& UserReadyRes::brandid() const {
  // @@protoc_insertion_point(field_get:UserReadyRes.brandid)
  return brandid_.GetNoArena();
}
inline void UserReadyRes::set_brandid(const ::std::string& value) {
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserReadyRes.brandid)
}
#if LANG_CXX11
inline void UserReadyRes::set_brandid(::std::string&& value) {
  set_has_brandid();
  brandid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserReadyRes.brandid)
}
#endif
inline void UserReadyRes::set_brandid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserReadyRes.brandid)
}
inline void UserReadyRes::set_brandid(const char* value, size_t size) {
  set_has_brandid();
  brandid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserReadyRes.brandid)
}
inline ::std::string* UserReadyRes::mutable_brandid() {
  set_has_brandid();
  // @@protoc_insertion_point(field_mutable:UserReadyRes.brandid)
  return brandid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserReadyRes::release_brandid() {
  // @@protoc_insertion_point(field_release:UserReadyRes.brandid)
  clear_has_brandid();
  return brandid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserReadyRes::set_allocated_brandid(::std::string* brandid) {
  if (brandid != NULL) {
    set_has_brandid();
  } else {
    clear_has_brandid();
  }
  brandid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brandid);
  // @@protoc_insertion_point(field_set_allocated:UserReadyRes.brandid)
}

// optional string numberid = 3;
inline bool UserReadyRes::has_numberid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserReadyRes::set_has_numberid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserReadyRes::clear_has_numberid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserReadyRes::clear_numberid() {
  numberid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_numberid();
}
inline const ::std::string& UserReadyRes::numberid() const {
  // @@protoc_insertion_point(field_get:UserReadyRes.numberid)
  return numberid_.GetNoArena();
}
inline void UserReadyRes::set_numberid(const ::std::string& value) {
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserReadyRes.numberid)
}
#if LANG_CXX11
inline void UserReadyRes::set_numberid(::std::string&& value) {
  set_has_numberid();
  numberid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserReadyRes.numberid)
}
#endif
inline void UserReadyRes::set_numberid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserReadyRes.numberid)
}
inline void UserReadyRes::set_numberid(const char* value, size_t size) {
  set_has_numberid();
  numberid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserReadyRes.numberid)
}
inline ::std::string* UserReadyRes::mutable_numberid() {
  set_has_numberid();
  // @@protoc_insertion_point(field_mutable:UserReadyRes.numberid)
  return numberid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserReadyRes::release_numberid() {
  // @@protoc_insertion_point(field_release:UserReadyRes.numberid)
  clear_has_numberid();
  return numberid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserReadyRes::set_allocated_numberid(::std::string* numberid) {
  if (numberid != NULL) {
    set_has_numberid();
  } else {
    clear_has_numberid();
  }
  numberid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), numberid);
  // @@protoc_insertion_point(field_set_allocated:UserReadyRes.numberid)
}

// optional sint32 user_state = 4;
inline bool UserReadyRes::has_user_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserReadyRes::set_has_user_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserReadyRes::clear_has_user_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserReadyRes::clear_user_state() {
  user_state_ = 0;
  clear_has_user_state();
}
inline ::google::protobuf::int32 UserReadyRes::user_state() const {
  // @@protoc_insertion_point(field_get:UserReadyRes.user_state)
  return user_state_;
}
inline void UserReadyRes::set_user_state(::google::protobuf::int32 value) {
  set_has_user_state();
  user_state_ = value;
  // @@protoc_insertion_point(field_set:UserReadyRes.user_state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Stype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Stype>() {
  return ::Stype_descriptor();
}
template <> struct is_proto_enum< ::Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd>() {
  return ::Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
